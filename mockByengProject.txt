commit fe4aef85ce7a08809cd211132aecb601475d91ed
Author: nokswalk <nokswalk@gmail.com>
Date:   Sun Mar 23 21:04:52 2014 -0700

    Initial commit

diff --git a/README.md b/README.md
new file mode 100644
index 0000000..a46b5f7
--- /dev/null
+++ b/README.md
@@ -0,0 +1,2 @@
+CPSC304CoolTeam
+===============

commit c61ca1810a8c2e572dac59be3123f3bd6e15b403

Author: Enoch Choi <nokswalk@gmail.com>
Date:   Mon Mar 24 12:28:32 2014 -0700

    Contains table and project

diff --git a/.metadata/.lock b/.metadata/.lock
new file mode 100644
index 0000000..e69de29
diff --git a/.metadata/.log b/.metadata/.log
new file mode 100644
index 0000000..5eb0d3f
--- /dev/null
+++ b/.metadata/.log
@@ -0,0 +1,10 @@
+!SESSION 2014-03-24 12:24:53.139 -----------------------------------------------
+eclipse.buildId=4.3.0.I20130605-2000
+java.version=1.7.0_40
+java.vendor=Oracle Corporation
+BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
+Framework arguments:  -product org.eclipse.epp.package.standard.product -keyring /Users/Enoch/.eclipse_keyring -showlocation
+Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.standard.product -keyring /Users/Enoch/.eclipse_keyring -showlocation
+
+!ENTRY org.eclipse.core.net 1 0 2014-03-24 12:25:26.806
+!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
diff --git a/.metadata/.plugins/com.google.appengine.eclipse.core/appengine-sdk-proxy.jar b/.metadata/.plugins/com.google.appengine.eclipse.core/appengine-sdk-proxy.jar
new file mode 100644
index 0000000..0a39533
Binary files /dev/null and b/.metadata/.plugins/com.google.appengine.eclipse.core/appengine-sdk-proxy.jar differ
diff --git a/.metadata/.plugins/com.google.appengine.eclipse.core/appengine-tools-api.jar b/.metadata/.plugins/com.google.appengine.eclipse.core/appengine-tools-api.jar
new file mode 100644
index 0000000..fd8c4ca
Binary files /dev/null and b/.metadata/.plugins/com.google.appengine.eclipse.core/appengine-tools-api.jar differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/6a/104e492b8ab3001315e3bcb864702602 b/.metadata/.plugins/org.eclipse.core.resources/.history/6a/104e492b8ab3001315e3bcb864702602
new file mode 100644
index 0000000..f42de36
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/6a/104e492b8ab3001315e3bcb864702602
@@ -0,0 +1,7 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
+org.eclipse.jdt.core.compiler.compliance=1.7
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.7
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap
new file mode 100644
index 0000000..91d6c54
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap
new file mode 100644
index 0000000..91d6c54
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.root/.indexes/properties.index b/.metadata/.plugins/org.eclipse.core.resources/.root/.indexes/properties.index
new file mode 100644
index 0000000..fbcbf93
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.root/.indexes/properties.index differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap b/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap
new file mode 100644
index 0000000..91d6c54
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources b/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources
new file mode 100644
index 0000000..0888ae8
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.snap b/.metadata/.plugins/org.eclipse.core.resources/.snap
new file mode 100644
index 0000000..35aea47
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs
new file mode 100644
index 0000000..dffc6b5
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+version=1
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.core.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..4eb0744
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,10 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.classpathVariable.JRE_LIB=/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/rt.jar
+org.eclipse.jdt.core.classpathVariable.JRE_SRC=/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/src.zip
+org.eclipse.jdt.core.classpathVariable.JRE_SRCROOT=src
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
+org.eclipse.jdt.core.compiler.compliance=1.7
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.7
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.launching.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.launching.prefs
new file mode 100644
index 0000000..2eb8164
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.launching.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.launching.PREF_VM_XML=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<vmSettings defaultVM\="52,org.eclipse.jdt.internal.launching.macosx.MacOSXType24,com.oracle.java.7u40.jdk" defaultVMConnector\="">\n<vmType id\="org.eclipse.jdt.internal.launching.macosx.MacOSXType">\n<vm id\="com.oracle.java.7u40.jdk" name\="Java SE 7 [1.7.0_40]" path\="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home"/>\n<vm id\="com.apple.javajdk16" name\="Java SE 6 [1.6.0_65-b14-462]" path\="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home"/>\n</vmType>\n</vmSettings>\n
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs
new file mode 100644
index 0000000..c2dc69f
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.ui.prefs
@@ -0,0 +1,12 @@
+content_assist_proposals_background=255,255,255
+content_assist_proposals_foreground=0,0,0
+eclipse.preferences.version=1
+fontPropagated=true
+org.eclipse.jdt.ui.editor.tab.width=
+org.eclipse.jdt.ui.formatterprofiles.version=12
+org.eclipse.jdt.ui.javadoclocations.migrated=true
+org.eclipse.jface.textfont=1|Monaco|11.0|0|COCOA|1|;
+spelling_locale_initialized=true
+tabWidthPropagated=true
+useAnnotationsPrefPage=true
+useQuickDiffPrefPage=true
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs
new file mode 100644
index 0000000..08076f2
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+showIntro=false
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1089098316.index b/.metadata/.plugins/org.eclipse.jdt.core/1089098316.index
new file mode 100644
index 0000000..e1df6fe
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/1089098316.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1271342938.index b/.metadata/.plugins/org.eclipse.jdt.core/1271342938.index
new file mode 100644
index 0000000..15646ba
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/1271342938.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1384487945.index b/.metadata/.plugins/org.eclipse.jdt.core/1384487945.index
new file mode 100644
index 0000000..b7ed7e6
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/1384487945.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/156905802.index b/.metadata/.plugins/org.eclipse.jdt.core/156905802.index
new file mode 100644
index 0000000..d0d0589
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/156905802.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1600714693.index b/.metadata/.plugins/org.eclipse.jdt.core/1600714693.index
new file mode 100644
index 0000000..cfdebf8
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/1600714693.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1743766565.index b/.metadata/.plugins/org.eclipse.jdt.core/1743766565.index
new file mode 100644
index 0000000..d3bb68a
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/1743766565.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1819685514.index b/.metadata/.plugins/org.eclipse.jdt.core/1819685514.index
new file mode 100644
index 0000000..36ce211
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/1819685514.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1833648217.index b/.metadata/.plugins/org.eclipse.jdt.core/1833648217.index
new file mode 100644
index 0000000..d4a3041
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/1833648217.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/185235850.index b/.metadata/.plugins/org.eclipse.jdt.core/185235850.index
new file mode 100644
index 0000000..5fe1ed0
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/185235850.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index b/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index
new file mode 100644
index 0000000..5fe1ed0
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/2063481186.index b/.metadata/.plugins/org.eclipse.jdt.core/2063481186.index
new file mode 100644
index 0000000..f204379
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/2063481186.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/2236530947.index b/.metadata/.plugins/org.eclipse.jdt.core/2236530947.index
new file mode 100644
index 0000000..c65ceb6
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/2236530947.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/2371787587.index b/.metadata/.plugins/org.eclipse.jdt.core/2371787587.index
new file mode 100644
index 0000000..56752b1
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/2371787587.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/2545238116.index b/.metadata/.plugins/org.eclipse.jdt.core/2545238116.index
new file mode 100644
index 0000000..236ac75
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/2545238116.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/257114466.index b/.metadata/.plugins/org.eclipse.jdt.core/257114466.index
new file mode 100644
index 0000000..399a924
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/257114466.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/2582987092.index b/.metadata/.plugins/org.eclipse.jdt.core/2582987092.index
new file mode 100644
index 0000000..03953ad
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/2582987092.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/2678104552.index b/.metadata/.plugins/org.eclipse.jdt.core/2678104552.index
new file mode 100644
index 0000000..f41b88e
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/2678104552.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/3266567714.index b/.metadata/.plugins/org.eclipse.jdt.core/3266567714.index
new file mode 100644
index 0000000..e766608
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/3266567714.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/3302703152.index b/.metadata/.plugins/org.eclipse.jdt.core/3302703152.index
new file mode 100644
index 0000000..9f885ab
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/3302703152.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/3321539481.index b/.metadata/.plugins/org.eclipse.jdt.core/3321539481.index
new file mode 100644
index 0000000..e1095a7
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/3321539481.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/3380752744.index b/.metadata/.plugins/org.eclipse.jdt.core/3380752744.index
new file mode 100644
index 0000000..847900b
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/3380752744.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/3399394134.index b/.metadata/.plugins/org.eclipse.jdt.core/3399394134.index
new file mode 100644
index 0000000..6a18ff3
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/3399394134.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/3712507179.index b/.metadata/.plugins/org.eclipse.jdt.core/3712507179.index
new file mode 100644
index 0000000..20d9db5
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/3712507179.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/4238209716.index b/.metadata/.plugins/org.eclipse.jdt.core/4238209716.index
new file mode 100644
index 0000000..4ddab3a
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/4238209716.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/947220250.index b/.metadata/.plugins/org.eclipse.jdt.core/947220250.index
new file mode 100644
index 0000000..e9c9190
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/947220250.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/externalLibsTimeStamps b/.metadata/.plugins/org.eclipse.jdt.core/externalLibsTimeStamps
new file mode 100644
index 0000000..5553bf6
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/externalLibsTimeStamps differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/javaLikeNames.txt b/.metadata/.plugins/org.eclipse.jdt.core/javaLikeNames.txt
new file mode 100644
index 0000000..8586397
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.jdt.core/javaLikeNames.txt
@@ -0,0 +1 @@
+java
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt b/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt
new file mode 100644
index 0000000..2e5ea3a
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt
@@ -0,0 +1,26 @@
+INDEX VERSION 1.126+/Users/Enoch/Documents/CPSC304/Project/CPSC304CoolTeam/.metadata/.plugins/org.eclipse.jdt.core
+1856098903.index
+1743766565.index
+4238209716.index
+2236530947.index
+2678104552.index
+1600714693.index
+3380752744.index
+1384487945.index
+2371787587.index
+947220250.index
+156905802.index
+1819685514.index
+3712507179.index
+3321539481.index
+1833648217.index
+2582987092.index
+185235850.index
+3302703152.index
+1089098316.index
+257114466.index
+3399394134.index
+1271342938.index
+2063481186.index
+2545238116.index
+3266567714.index
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/variablesAndContainers.dat b/.metadata/.plugins/org.eclipse.jdt.core/variablesAndContainers.dat
new file mode 100644
index 0000000..40d9d0e
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/variablesAndContainers.dat differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.launching/.install.xml b/.metadata/.plugins/org.eclipse.jdt.launching/.install.xml
new file mode 100644
index 0000000..25f2cd0
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.jdt.launching/.install.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<dirs>
+<entry loc="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home" stamp="1391193173000"/>
+<entry loc="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home" stamp="1377578673000"/>
+</dirs>
diff --git a/.metadata/.plugins/org.eclipse.jdt.launching/libraryInfos.xml b/.metadata/.plugins/org.eclipse.jdt.launching/libraryInfos.xml
new file mode 100644
index 0000000..0e54193
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.jdt.launching/libraryInfos.xml
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<libraryInfos>
+<libraryInfo home="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home" version="1.6.0_65">
+<bootpath>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsfd.jar"/>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar"/>
+<entry path="/System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/Resources/Java/JavaRuntimeSupport.jar"/>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar"/>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/laf.jar"/>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/sunrsasign.jar"/>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar"/>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar"/>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar"/>
+</bootpath>
+<extensionDirs>
+<entry path="/Library/Java/Extensions"/>
+<entry path="/System/Library/Java/Extensions"/>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext"/>
+</extensionDirs>
+<endorsedDirs>
+<entry path="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/endorsed"/>
+</endorsedDirs>
+</libraryInfo>
+<libraryInfo home="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home" version="1.7.0_40">
+<bootpath>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/resources.jar"/>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/rt.jar"/>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/sunrsasign.jar"/>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/jsse.jar"/>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/jce.jar"/>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/charsets.jar"/>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/jfr.jar"/>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/JObjC.jar"/>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/classes"/>
+</bootpath>
+<extensionDirs>
+<entry path="/Users/Enoch/Library/Java/Extensions"/>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/ext"/>
+<entry path="/Library/Java/Extensions"/>
+<entry path="/Network/Library/Java/Extensions"/>
+<entry path="/System/Library/Java/Extensions"/>
+<entry path="/usr/lib/java"/>
+</extensionDirs>
+<endorsedDirs>
+<entry path="/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk/Contents/Home/jre/lib/endorsed"/>
+</endorsedDirs>
+</libraryInfo>
+</libraryInfos>
diff --git a/.metadata/.plugins/org.eclipse.ui.workbench/workingsets.xml b/.metadata/.plugins/org.eclipse.ui.workbench/workingsets.xml
new file mode 100644
index 0000000..6332d1c
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.ui.workbench/workingsets.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<workingSetManager>
+<workingSet aggregate="true" factoryID="org.eclipse.ui.internal.WorkingSetFactory" id="1395689134484_0" label="Window Working Set" name="Aggregate for window 1395689134483"/>
+</workingSetManager>
\ No newline at end of file
diff --git a/.metadata/version.ini b/.metadata/version.ini
new file mode 100644
index 0000000..c51ff74
--- /dev/null
+++ b/.metadata/version.ini
@@ -0,0 +1 @@
+org.eclipse.core.runtime=1
\ No newline at end of file
diff --git a/Project Part III/.classpath b/Project Part III/.classpath
new file mode 100644
index 0000000..fb565a5
--- /dev/null
+++ b/Project Part III/.classpath	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/Project Part III/.project b/Project Part III/.project
new file mode 100644
index 0000000..364ffba
--- /dev/null
+++ b/Project Part III/.project	
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>Project Part III</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>
diff --git a/Project Part III/.settings/org.eclipse.jdt.core.prefs b/Project Part III/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..7341ab1
--- /dev/null
+++ b/Project Part III/.settings/org.eclipse.jdt.core.prefs	
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.7
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.7
diff --git a/table.sql b/table.sql
new file mode 100644
index 0000000..199dc5c
--- /dev/null
+++ b/table.sql
@@ -0,0 +1,68 @@
+create table Borrower
+	(bid integer not null PRIMARY KEY,
+	password varchar(20),
+	name varchar(20),
+	address varchar(50),
+	phone integer,
+	emailAddress varchar(50),
+	sinOrStNo integer,
+	expiryDate date,
+	type varchar(10) not null,
+	FOREIGN KEY (type) references BorrowerType);
+
+create table BorrowerType
+	(type varchar(10) not null PRIMARY KEY,
+	bookTimeLimit integer);
+
+create table Book
+	(callNumber varchar(10) not null PRIMARY KEY,
+	isbn integer,
+	title varchar(50),
+	mainAuthor varchar(20),
+	publisher varchar(20),
+	year integer);
+
+create table HasAuthor
+	(callNumber varchar(10) not null,
+	name varchar(20) not null,
+	PRIMARY KEY (callNumber, name),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HasSubject
+	(callNumber varchar(10) not null,
+	subject varchar(50) not null,
+	PRIMARY KEY (callNumber, subject)
+	FOREIGN KEY (callNumber) references Book);
+
+create table BookCopy 
+	(callNumber varchar(10) not null,
+	copyNo integer not null,
+	status varchar(10),
+	PRIMARY KEY (callNumber, copyNo),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HoldRequest
+	(hid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber varchar(10) not null,
+	issuedDate date,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber) references Book);
+
+create table Borrowing
+	(borid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber varchar(10) not null,
+	copyNo integer not null,
+	outDate date,
+	inDate date,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber, copyNo) references BookCopy);
+
+create table Fine
+	(fid integer not null PRIMARY KEY,
+	amount number,
+	issuedDate date,
+	paidDate date,
+	borid integer not  null,
+	FOREIGN KEY (borid) references Borrowing);

commit 752a7c9389790592c93a3f051fed0995b0f39a38
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Wed Mar 26 12:09:38 2014 -0700

    Started work on classes in tables package.  Added empty classes for
    user-specific transactions in users package.  Added empty package for
    GUI.

diff --git a/Project Part III/src/tables/Borrower.java b/Project Part III/src/tables/Borrower.java
new file mode 100644
index 0000000..b11112e
--- /dev/null
+++ b/Project Part III/src/tables/Borrower.java	
@@ -0,0 +1,63 @@
+package tables;
+
+import java.io.IOException;
+import java.sql.*;
+
+public class Borrower {
+
+	private Connection con;
+
+	/*
+	 * inserts a branch
+	 */ 
+	private void insertBranch(
+			int bid,
+			String password, 
+			String name,
+			String address,
+			int phone,
+			String emailAddress,
+			int sinOrStNo,
+			Date expiryDate,
+			String type)
+	{
+		PreparedStatement  ps;
+
+		try
+		{
+			ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?,?,?,?,?)");
+
+			ps.setInt(1, bid);
+			ps.setString(2, password);
+			ps.setString(3, name);
+			ps.setString(4, address);
+			ps.setInt(5,phone);
+			ps.setString(6, emailAddress);
+			ps.setInt(7, sinOrStNo);
+			ps.setDate(8, expiryDate);
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+
+			// commit work 
+			con.commit();
+
+			ps.close();
+		}
+		
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+}
diff --git a/Project Part III/src/tables/BorrowerType.java b/Project Part III/src/tables/BorrowerType.java
new file mode 100644
index 0000000..b4e188b
--- /dev/null
+++ b/Project Part III/src/tables/BorrowerType.java	
@@ -0,0 +1,5 @@
+package tables;
+
+public class BorrowerType {
+
+}
diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
new file mode 100644
index 0000000..43ba413
--- /dev/null
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -0,0 +1,5 @@
+package users;
+
+public class BorrowerUser {
+
+}
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
new file mode 100644
index 0000000..6195f9a
--- /dev/null
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -0,0 +1,5 @@
+package users;
+
+public class ClerkUser {
+
+}
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
new file mode 100644
index 0000000..1be73e6
--- /dev/null
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -0,0 +1,5 @@
+package users;
+
+public class LibrarianUser {
+
+}

commit 8981e3f0626b7d88597fd4d87d9e67c144288c61
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Wed Mar 26 21:26:28 2014 -0700

    Implemented addBorrower() transaction for Clerk users.
    
    Used code from branch.java tutorial to set up a simple txt UI in the
    console for now, until the GUI is set up.

diff --git a/Project Part III/.classpath b/Project Part III/.classpath
index fb565a5..de3ea29 100644
--- a/Project Part III/.classpath	
+++ b/Project Part III/.class-path	
@@ -2,5 +2,6 @@
 <classpath>
 	<classpathentry kind="src" path="src"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7"/>
+	<classpathentry kind="lib" path="classes12.zip" sourcepath="classes12.zip"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>
diff --git a/Project Part III/classes12.zip b/Project Part III/classes12.zip
new file mode 100644
index 0000000..860bb5a
Binary files /dev/null and b/Project Part III/classes12.zip differ
diff --git a/Project Part III/src/gui/Main.java b/Project Part III/src/gui/Main.java
new file mode 100644
index 0000000..47099e0
--- /dev/null
+++ b/Project Part III/src/gui/Main.java	
@@ -0,0 +1,251 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  ; break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/Project Part III/src/tables/Borrower.java b/Project Part III/src/tables/Borrower.java
deleted file mode 100644
index b11112e..0000000
--- a/Project Part III/src/tables/Borrower.java	
+++ /dev/null
@@ -1,63 +0,0 @@
-package tables;
-
-import java.io.IOException;
-import java.sql.*;
-
-public class Borrower {
-
-	private Connection con;
-
-	/*
-	 * inserts a branch
-	 */ 
-	private void insertBranch(
-			int bid,
-			String password, 
-			String name,
-			String address,
-			int phone,
-			String emailAddress,
-			int sinOrStNo,
-			Date expiryDate,
-			String type)
-	{
-		PreparedStatement  ps;
-
-		try
-		{
-			ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?,?,?,?,?)");
-
-			ps.setInt(1, bid);
-			ps.setString(2, password);
-			ps.setString(3, name);
-			ps.setString(4, address);
-			ps.setInt(5,phone);
-			ps.setString(6, emailAddress);
-			ps.setInt(7, sinOrStNo);
-			ps.setDate(8, expiryDate);
-			ps.setString(9, type);
-
-			ps.executeUpdate();
-
-			// commit work 
-			con.commit();
-
-			ps.close();
-		}
-		
-		catch (SQLException ex)
-		{
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-	}
-}
diff --git a/Project Part III/src/tables/BorrowerType.java b/Project Part III/src/tables/BorrowerType.java
deleted file mode 100644
index b4e188b..0000000
--- a/Project Part III/src/tables/BorrowerType.java	
+++ /dev/null
@@ -1,5 +0,0 @@
-package tables;
-
-public class BorrowerType {
-
-}
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 6195f9a..56c940e 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -1,5 +1,154 @@
 package users;
 
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
 public class ClerkUser {
 
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		
+		try 
+		{
+		    while (!quit)
+		    {
+			System.out.print("\n\nPlease choose one of the following: \n");
+			System.out.print("1.  Add Borrower\n");
+			//System.out.print("2.  Clerk\n");
+			//System.out.print("3.  Librarian\n");
+			System.out.print("4.  Quit\n>>");
+
+			choice = Integer.parseInt(Main.in.readLine());
+			
+			System.out.println(" ");
+
+			switch(choice)
+			{
+			   case 1:  addBorrower(); break;
+			   case 2:  ; break; // TODO checkOutItems()
+			   case 3:  ; break; // TODO processReturn()
+			   case 4:  ; break; // TODO checkOverdueItems()
+			   case 5:  quit = true; 
+			}
+		    }
+
+		    Main.con.close();
+	        Main.in.close();
+		    System.out.println("\nGood Bye!\n\n");
+		    System.exit(0);
+		}
+		catch (IOException e)
+		{
+		    System.out.println("IOException!");
+		    try
+		    {
+			Main.con.close();
+			System.exit(-1);
+		    }
+		    catch (SQLException ex)
+		    {
+			 System.out.println("Message: " + ex.getMessage());
+		    }
+		}
+		catch (SQLException ex)
+		{
+		    System.out.println("Message: " + ex.getMessage());
+		}
+	}
+	
+	
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String                phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+		
+		PreparedStatement  ps;
+		
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?");
+			
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+			
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+			
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+			
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+			
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+			
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+			
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+			
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+			
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+			
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		    try 
+		    {
+			// undo the insert
+			Main.con.rollback();	
+		    }
+		    catch (SQLException ex2)
+		    {
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		    }
+		}
+	}
+	
 }
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
new file mode 100644
index 0000000..af29e54
--- /dev/null
+++ b/Project Part III/table.sql	
@@ -0,0 +1,68 @@
+create table Borrower
+	(bid integer not null PRIMARY KEY,
+	password varchar(20),
+	name varchar(20),
+	address varchar(50),
+	phone varchar(10),
+	emailAddress varchar(50),
+	sinOrStNo integer,
+	expiryDate date,
+	type varchar(10) not null,
+	FOREIGN KEY (type) references BorrowerType);
+
+create table BorrowerType
+	(type varchar(10) not null PRIMARY KEY,
+	bookTimeLimit integer);
+
+create table Book
+	(callNumber integer not null PRIMARY KEY,
+	isbn integer,
+	title varchar(50),
+	mainAuthor varchar(20),
+	publisher varchar(20),
+	year integer);
+
+create table HasAuthor
+	(callNumber integer not null,
+	name varchar(20) not null,
+	PRIMARY KEY (callNumber, name),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HasSubject
+	(callNumber integer not null,
+	subject varchar(50) not null,
+	PRIMARY KEY (callNumber, subject)
+	FOREIGN KEY (callNumber) references Book);
+
+create table BookCopy 
+	(callNumber integer not null,
+	copyNo integer not null,
+	status varchar(10),
+	PRIMARY KEY (callNumber, copyNo),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HoldRequest
+	(hid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber integer not null,
+	issuedDate date,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber) references Book);
+
+create table Borrowing
+	(borid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber integer not null,
+	copyNo integer not null,
+	outDate date,
+	inDate date,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber, copyNo) references BookCopy);
+
+create table Fine
+	(fid integer not null PRIMARY KEY,
+	amount number,
+	issuedDate date,
+	paidDate date,
+	borid integer not  null,
+	FOREIGN KEY (borid) references Borrowing);

commit 214627a503258003c1ddb38acb44f49f2e5ba075
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Thu Mar 27 14:50:02 2014 -0700

    Wrote addBook() method in LibrarianUser class.  Also simple txt ui for
    now.

diff --git a/Project Part III/src/gui/Main.java b/Project Part III/src/gui/Main.java
index 47099e0..ad17259 100644
--- a/Project Part III/src/gui/Main.java	
+++ b/Project Part III/src/gui/Main.java	
@@ -8,6 +8,7 @@ import java.sql.*;
 import javax.swing.*;
 
 import users.ClerkUser;
+import users.LibrarianUser;
 
 
 /**
@@ -213,7 +214,7 @@ public class Main implements ActionListener {
 		{
 		   case 1:  ; break;
 		   case 2:  ClerkUser.main(); break;
-		   case 3:  ; break;
+		   case 3:  LibrarianUser.main(); break;
 		   case 4:  quit = true; 
 		}
 	    }
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 56c940e..58411a8 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -27,10 +27,11 @@ public class ClerkUser {
 		    while (!quit)
 		    {
 			System.out.print("\n\nPlease choose one of the following: \n");
-			System.out.print("1.  Add Borrower\n");
-			//System.out.print("2.  Clerk\n");
-			//System.out.print("3.  Librarian\n");
-			System.out.print("4.  Quit\n>>");
+			System.out.print("1.  Add borrower\n");
+			//System.out.print("2.  Check out items\n");
+			//System.out.print("3.  Process a return\n");
+			//System.out.print("4.  Check overdue items\n");
+			System.out.print("5.  Quit\n>>");
 
 			choice = Integer.parseInt(Main.in.readLine());
 			
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 1be73e6..396eb68 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -1,5 +1,151 @@
 package users;
 
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.Date;
+import java.sql.PreparedStatement;
+import java.sql.SQLException;
+
 public class LibrarianUser {
+	
+	/*
+	 * Loads librarian's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		
+		try 
+		{
+		    while (!quit)
+		    {
+			System.out.print("\n\nPlease choose one of the following: \n");
+			System.out.print("1.  Add book\n");
+			//System.out.print("2.  Check out items\n");
+			//System.out.print("3.  Process a return\n");
+			//System.out.print("4.  Check overdue items\n");
+			System.out.print("5.  Quit\n>>");
+
+			choice = Integer.parseInt(Main.in.readLine());
+			
+			System.out.println(" ");
+
+			switch(choice)
+			{
+			   case 1:  addBook(); break;
+			   case 2:  ; break; // TODO checkOutItems()
+			   case 3:  ; break; // TODO processReturn()
+			   case 4:  ; break; // TODO checkOverdueItems()
+			   case 5:  quit = true; 
+			}
+		    }
+
+		    Main.con.close();
+	        Main.in.close();
+		    System.out.println("\nGood Bye!\n\n");
+		    System.exit(0);
+		}
+		catch (IOException e)
+		{
+		    System.out.println("IOException!");
+		    try
+		    {
+			Main.con.close();
+			System.exit(-1);
+		    }
+		    catch (SQLException ex)
+		    {
+			 System.out.println("Message: " + ex.getMessage());
+		    }
+		}
+		catch (SQLException ex)
+		{
+		    System.out.println("Message: " + ex.getMessage());
+		}
+	}
 
+	
+	/*
+	 * Add a new book to the library.
+	 * Librarian should provide all info for book.
+	 */
+	private static void addBook() {
+		// TODO Auto-generated method stub
+		int                callNumber;
+		String 	           isbn;
+		String             title;
+		String             mainAuthor;
+		String             publisher;
+		int                year;
+		int                copyNo;
+		
+		PreparedStatement  ps1;  // for adding Book
+		PreparedStatement  ps2;  // for adding BookCopies
+		
+		try {
+			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (?,?,?,?,?,?");
+			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?");
+			
+			System.out.print("\n Book call number: ");
+			callNumber = Integer.parseInt(Main.in.readLine());
+			ps1.setInt(1, callNumber);
+			
+			System.out.print("\n Book isbn: ");
+			isbn = Main.in.readLine();
+			ps1.setString(2, isbn);
+			
+			System.out.print("\n Book title: ");
+			title = Main.in.readLine();
+			ps1.setString(3, title);
+			
+			System.out.print("\n Book main author: ");
+			mainAuthor = Main.in.readLine();
+			ps1.setString(4, mainAuthor);
+			
+			System.out.print("\n Book publisher: ");
+			publisher = Main.in.readLine();
+			ps1.setString(5,  publisher);
+			
+			System.out.print("\n Book published year: ");
+			year = Integer.parseInt(Main.in.readLine());
+			ps1.setInt(6, year);
+			
+			System.out.print("\n Book number of copies: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			
+			ps1.executeUpdate();
+			for (int i = 1; i <= copyNo; i++) {
+				ps2.setInt(1, callNumber);
+				ps2.setInt(2, i);
+				ps2.setString(3, "in");
+				
+				ps2.executeUpdate();
+			}
+			// commit work 
+			Main.con.commit();
+			ps1.close();
+			ps2.close();
+		}
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		    try 
+		    {
+			// undo the insert
+			Main.con.rollback();	
+		    }
+		    catch (SQLException ex2)
+		    {
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		    }
+		}
+	}
 }
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index af29e54..1396124 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -16,7 +16,7 @@ create table BorrowerType
 
 create table Book
 	(callNumber integer not null PRIMARY KEY,
-	isbn integer,
+	isbn varchar(9),
 	title varchar(50),
 	mainAuthor varchar(20),
 	publisher varchar(20),

commit 4947469f41f2b491b75d09da87491545208536ad
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Thu Mar 27 23:01:06 2014 -0700

    First crack at borrower's search transaction - not yet tested.

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 43ba413..2db0b86 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -1,5 +1,181 @@
 package users;
 
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+
 public class BorrowerUser {
 
+	/*
+	 * Loads borrower's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Book search\n");
+				//System.out.print("2.  Check account\n");
+				//System.out.print("3.  Place a hold request\n");
+				//System.out.print("4.  Pay fines\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch(choice) {
+				case 1:  searchBook(); break;
+				case 2:  ; break; // TODO checkAccount()
+				case 3:  ; break; // TODO requestHold()
+				case 4:  ; break; // TODO payFine()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+			
+		}
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Keyword book search on titles, authors, and/or subjects.
+	 */
+	private static void searchBook() {
+		// TODO Auto-generated method stub
+
+		// Search by title or author or subject
+		int choice;
+
+		try {
+			System.out.print("\n\nPlease choose one of the following to search by: \n");
+			System.out.print("1.  Title\n");
+			System.out.print("2.  Author\n");
+			System.out.print("3.  Subject\n");
+			System.out.print("4.  Back\n>>");
+
+			choice = Integer.parseInt(Main.in.readLine());
+
+			System.out.println(" ");
+
+			switch (choice) {
+			case 1:  searchBookByTitle(); break;
+			case 2:  searchBookByAuthor(); break;
+			case 3:  searchBookBySubject(); break;
+			case 4:  return;
+			}
+		}
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+	}
+
+	private static void searchBookByTitle() {		
+		String             sTitle;
+		Statement          s;
+
+		try {
+			System.out.print("\n Title keyword: ");
+			sTitle = Main.in.readLine();
+
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT B.callNumber, B.isbn, B.title, B.mainAuthor, C.copyNo, c.status"
+										+ "FROM HasAuthor A, Book B, BookCopy C"
+										+ "WHERE B.callNumber = C.callNumber AND B.callNumber = A.callNumber AND B.title LIKE '%" + sTitle + "%'"
+										+ "GROUP BY B.callNumber");
+
+			// TODO How to get # of copies in or out of library?
+			int           callNumber = 0;
+			String        isbn = null;
+			String        title = null;
+			String        mainAuthor = null;
+			int           copyNo = 0;
+			String        status = null;
+			
+			// keep track of book copies
+			int inLib = 0;
+			int outLib = 0;
+
+			while (rs.next()) {
+				// if this callNumber same as previous tuple's, 
+				// only difference in fields are copyNo and status
+				if (rs.getInt(1) == callNumber) {
+					if (rs.getString(5).equalsIgnoreCase("in")) {
+						inLib++;
+					}
+					else {
+						outLib++;
+					}
+				}
+				// if not the same callNumber as previous tuple
+				// must be next book (because of use of GROUP BY in query)
+				else {
+					// first print out previous book
+					System.out.println("Call number: " + callNumber + "\n"
+									+ "ISBN: " + isbn + "\n"
+									+ "Title: " + title + "\n"
+									+ "Main Author: " + mainAuthor + "\n"
+									+ "Copies in library: " + inLib + "\n"
+									+ "Copies out of library or on hold: " + outLib + "\n\n");
+					
+					// then reset copy counters
+					inLib = 0;  outLib = 0;
+					
+					// then parse in the new book
+					callNumber = rs.getInt(1);
+					isbn = rs.getString(2);
+					title = rs.getString(3);
+					mainAuthor = rs.getString(4);
+					copyNo = rs.getInt(5);
+					status = rs.getString(5);
+				}
+			}
+
+		}
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+	private static void searchBookByAuthor() {
+		// TODO Auto-generated method stub
+
+	}
+
+	private static void searchBookBySubject() {
+		// TODO Auto-generated method stub
+
+	}
 }
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 58411a8..fa4e77b 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -21,57 +21,49 @@ public class ClerkUser {
 		boolean quit;
 
 		quit = false;
-		
-		try 
-		{
-		    while (!quit)
-		    {
-			System.out.print("\n\nPlease choose one of the following: \n");
-			System.out.print("1.  Add borrower\n");
-			//System.out.print("2.  Check out items\n");
-			//System.out.print("3.  Process a return\n");
-			//System.out.print("4.  Check overdue items\n");
-			System.out.print("5.  Quit\n>>");
-
-			choice = Integer.parseInt(Main.in.readLine());
-			
-			System.out.println(" ");
-
-			switch(choice)
-			{
-			   case 1:  addBorrower(); break;
-			   case 2:  ; break; // TODO checkOutItems()
-			   case 3:  ; break; // TODO processReturn()
-			   case 4:  ; break; // TODO checkOverdueItems()
-			   case 5:  quit = true; 
-			}
-		    }
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
 
-		    Main.con.close();
-	        Main.in.close();
-		    System.out.println("\nGood Bye!\n\n");
-		    System.exit(0);
-		}
-		catch (IOException e)
-		{
-		    System.out.println("IOException!");
-		    try
-		    {
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
 			Main.con.close();
-			System.exit(-1);
-		    }
-		    catch (SQLException ex)
-		    {
-			 System.out.println("Message: " + ex.getMessage());
-		    }
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
 		}
-		catch (SQLException ex)
-		{
-		    System.out.println("Message: " + ex.getMessage());
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
 		}
 	}
-	
-	
+
+
 	/*
 	 * Add a new borrower to the library.  
 	 * User should provide all required info.
@@ -86,70 +78,70 @@ public class ClerkUser {
 		int                sinOrStNo;
 		Date               expiryDate;
 		String             type;
-		
+
 		PreparedStatement  ps;
-		
+
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?");
-			
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
 			System.out.print("\n Borrower ID: ");
 			bid = Integer.parseInt(Main.in.readLine());
 			ps.setInt(1, bid);
-			
+
 			System.out.print("\n Borrower password: ");
 			password = Main.in.readLine();
 			ps.setString(2, password);
-			
+
 			System.out.print("\n Borrower name: ");
 			name = Main.in.readLine();
 			ps.setString(3, name);
-			
+
 			System.out.print("\n Borrower address: ");
 			address = Main.in.readLine();
 			ps.setString(4, address);
-			
+
 			System.out.print("\n Borrower phone number: ");
 			phone = Main.in.readLine();
 			ps.setString(5,  phone);
-			
+
 			System.out.print("\n Borrower email address: ");
 			emailAddress = Main.in.readLine();
 			ps.setString(6, emailAddress);
-			
+
 			System.out.print("\n Borrower SIN or student number: ");
 			sinOrStNo = Integer.parseInt(Main.in.readLine());
 			ps.setInt(7, sinOrStNo);
-			
+
 			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
 			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
 			ps.setDate(8, expiryDate);
-			
+
 			System.out.print("\n Borrower type: ");
 			type = Main.in.readLine();
 			ps.setString(9, type);
-			
+
 			ps.executeUpdate();
 			// commit work 
 			Main.con.commit();
 			ps.close();
 		}
-		
+
 		catch (IOException e) {
 			System.out.println("IOException!");
 		}
 		catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
-		    try 
-		    {
-			// undo the insert
-			Main.con.rollback();	
-		    }
-		    catch (SQLException ex2)
-		    {
-			System.out.println("Message: " + ex2.getMessage());
-			System.exit(-1);
-		    }
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
 		}
 	}
-	
+
 }
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 396eb68..2c568e5 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -3,12 +3,10 @@ package users;
 import gui.Main;
 
 import java.io.IOException;
-import java.sql.Date;
-import java.sql.PreparedStatement;
-import java.sql.SQLException;
+import java.sql.*;
 
 public class LibrarianUser {
-	
+
 	/*
 	 * Loads librarian's side of application.
 	 * Uses buffer line reader and connection established in Main class.
@@ -18,63 +16,54 @@ public class LibrarianUser {
 		boolean quit;
 
 		quit = false;
-		
-		try 
-		{
-		    while (!quit)
-		    {
-			System.out.print("\n\nPlease choose one of the following: \n");
-			System.out.print("1.  Add book\n");
-			//System.out.print("2.  Check out items\n");
-			//System.out.print("3.  Process a return\n");
-			//System.out.print("4.  Check overdue items\n");
-			System.out.print("5.  Quit\n>>");
-
-			choice = Integer.parseInt(Main.in.readLine());
-			
-			System.out.println(" ");
-
-			switch(choice)
-			{
-			   case 1:  addBook(); break;
-			   case 2:  ; break; // TODO checkOutItems()
-			   case 3:  ; break; // TODO processReturn()
-			   case 4:  ; break; // TODO checkOverdueItems()
-			   case 5:  quit = true; 
-			}
-		    }
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add book\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
 
-		    Main.con.close();
-	        Main.in.close();
-		    System.out.println("\nGood Bye!\n\n");
-		    System.exit(0);
-		}
-		catch (IOException e)
-		{
-		    System.out.println("IOException!");
-		    try
-		    {
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBook(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
 			Main.con.close();
-			System.exit(-1);
-		    }
-		    catch (SQLException ex)
-		    {
-			 System.out.println("Message: " + ex.getMessage());
-		    }
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
 		}
-		catch (SQLException ex)
-		{
-		    System.out.println("Message: " + ex.getMessage());
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex)	{
+			System.out.println("Message: " + ex.getMessage());
 		}
 	}
 
-	
+
 	/*
 	 * Add a new book to the library.
 	 * Librarian should provide all info for book.
 	 */
 	private static void addBook() {
-		// TODO Auto-generated method stub
 		int                callNumber;
 		String 	           isbn;
 		String             title;
@@ -82,47 +71,47 @@ public class LibrarianUser {
 		String             publisher;
 		int                year;
 		int                copyNo;
-		
+
 		PreparedStatement  ps1;  // for adding Book
 		PreparedStatement  ps2;  // for adding BookCopies
-		
+
 		try {
-			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (?,?,?,?,?,?");
-			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?");
-			
+			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (?,?,?,?,?,?)");
+			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?)");
+
 			System.out.print("\n Book call number: ");
 			callNumber = Integer.parseInt(Main.in.readLine());
 			ps1.setInt(1, callNumber);
-			
+
 			System.out.print("\n Book isbn: ");
 			isbn = Main.in.readLine();
 			ps1.setString(2, isbn);
-			
+
 			System.out.print("\n Book title: ");
 			title = Main.in.readLine();
 			ps1.setString(3, title);
-			
+
 			System.out.print("\n Book main author: ");
 			mainAuthor = Main.in.readLine();
 			ps1.setString(4, mainAuthor);
-			
+
 			System.out.print("\n Book publisher: ");
 			publisher = Main.in.readLine();
 			ps1.setString(5,  publisher);
-			
+
 			System.out.print("\n Book published year: ");
 			year = Integer.parseInt(Main.in.readLine());
 			ps1.setInt(6, year);
-			
+
 			System.out.print("\n Book number of copies: ");
 			copyNo = Integer.parseInt(Main.in.readLine());
-			
+
 			ps1.executeUpdate();
 			for (int i = 1; i <= copyNo; i++) {
 				ps2.setInt(1, callNumber);
 				ps2.setInt(2, i);
 				ps2.setString(3, "in");
-				
+
 				ps2.executeUpdate();
 			}
 			// commit work 
@@ -130,22 +119,22 @@ public class LibrarianUser {
 			ps1.close();
 			ps2.close();
 		}
-		
+
 		catch (IOException e) {
 			System.out.println("IOException!");
 		}
 		catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
-		    try 
-		    {
-			// undo the insert
-			Main.con.rollback();	
-		    }
-		    catch (SQLException ex2)
-		    {
-			System.out.println("Message: " + ex2.getMessage());
-			System.exit(-1);
-		    }
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
 		}
 	}
 }

commit 13783524f0902ec7a85c14a50c731a8d6d0b0d5d
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Fri Mar 28 21:23:06 2014 -0700

    Modified addBorrower() and addBook() to check if borrower/book already
    exist in database using sinOrStNo/isbn.
    
    Modified addBook() to add new book or new copy of an existing book.
    
    Completed searchBook().
    
    Modified table.sql so that it can be run from SQLPlus command line.
    NOTE if you haven't already made the tables, you need to cut the "drop
    table"s from the beginning of the file before you can run the file.

diff --git a/Project Part III/src/gui/Main.java b/Project Part III/src/gui/Main.java
index ad17259..cc9d472 100644
--- a/Project Part III/src/gui/Main.java	
+++ b/Project Part III/src/gui/Main.java	
@@ -7,6 +7,7 @@ import java.sql.*;
 
 import javax.swing.*;
 
+import users.BorrowerUser;
 import users.ClerkUser;
 import users.LibrarianUser;
 
@@ -212,7 +213,7 @@ public class Main implements ActionListener {
 
 		switch(choice)
 		{
-		   case 1:  ; break;
+		   case 1:  BorrowerUser.main(); break;
 		   case 2:  ClerkUser.main(); break;
 		   case 3:  LibrarianUser.main(); break;
 		   case 4:  quit = true; 
diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 2db0b86..f3c2821 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -12,6 +12,7 @@ public class BorrowerUser {
 	 * Uses buffer line reader and connection established in Main class.
 	 */
 	public static void main() {
+		
 		int choice;
 		boolean quit;
 
@@ -41,7 +42,7 @@ public class BorrowerUser {
 			Main.in.close();
 			System.out.println("\nGood Bye!\n\n");
 			System.exit(0);
-			
+
 		}
 		catch (IOException e) {
 			System.out.println("IOException!");
@@ -63,7 +64,6 @@ public class BorrowerUser {
 	 * Keyword book search on titles, authors, and/or subjects.
 	 */
 	private static void searchBook() {
-		// TODO Auto-generated method stub
 
 		// Search by title or author or subject
 		int choice;
@@ -86,7 +86,7 @@ public class BorrowerUser {
 			case 4:  return;
 			}
 		}
-		
+
 		catch (IOException e) {
 			System.out.println("IOException!");
 			try {
@@ -99,68 +99,71 @@ public class BorrowerUser {
 		}
 	}
 
-	private static void searchBookByTitle() {		
+	private static void searchBookByTitle() {	
+
+		// searched title
 		String             sTitle;
+		
+		// search results
+		int          	   callNumber;
+		String             isbn;
+		String             title;
+		String             mainAuthor;
+		
+		// book copies in/out
+		int inLib=0;
+		int outLib=0;
+		
+		// to execute queries
 		Statement          s;
 
 		try {
+			// first search Book table based on title keyword
 			System.out.print("\n Title keyword: ");
 			sTitle = Main.in.readLine();
 
 			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT B.callNumber, B.isbn, B.title, B.mainAuthor, C.copyNo, c.status"
-										+ "FROM HasAuthor A, Book B, BookCopy C"
-										+ "WHERE B.callNumber = C.callNumber AND B.callNumber = A.callNumber AND B.title LIKE '%" + sTitle + "%'"
-										+ "GROUP BY B.callNumber");
-
-			// TODO How to get # of copies in or out of library?
-			int           callNumber = 0;
-			String        isbn = null;
-			String        title = null;
-			String        mainAuthor = null;
-			int           copyNo = 0;
-			String        status = null;
-			
-			// keep track of book copies
-			int inLib = 0;
-			int outLib = 0;
+			ResultSet rs = s.executeQuery("SELECT DISTINCT B.callNumber, B.isbn, B.title, B.mainAuthor "
+					+ "FROM Book B "
+					+ "WHERE B.title LIKE '%" + sTitle + "%'");
 
+			// for each of the results
 			while (rs.next()) {
-				// if this callNumber same as previous tuple's, 
-				// only difference in fields are copyNo and status
-				if (rs.getInt(1) == callNumber) {
-					if (rs.getString(5).equalsIgnoreCase("in")) {
-						inLib++;
-					}
-					else {
-						outLib++;
-					}
+				// parse the book
+				callNumber = rs.getInt(1);
+				isbn = rs.getString(2);
+				title = rs.getString(3);
+				mainAuthor = rs.getString(4);
+
+				// # in library
+				s.executeQuery("SELECT COUNT(*) "
+						+ "FROM Book B, BookCopy C "
+						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
+				while (rs.next()) {
+					inLib = rs.getInt(1);
 				}
-				// if not the same callNumber as previous tuple
-				// must be next book (because of use of GROUP BY in query)
-				else {
-					// first print out previous book
-					System.out.println("Call number: " + callNumber + "\n"
-									+ "ISBN: " + isbn + "\n"
-									+ "Title: " + title + "\n"
-									+ "Main Author: " + mainAuthor + "\n"
-									+ "Copies in library: " + inLib + "\n"
-									+ "Copies out of library or on hold: " + outLib + "\n\n");
-					
-					// then reset copy counters
-					inLib = 0;  outLib = 0;
-					
-					// then parse in the new book
-					callNumber = rs.getInt(1);
-					isbn = rs.getString(2);
-					title = rs.getString(3);
-					mainAuthor = rs.getString(4);
-					copyNo = rs.getInt(5);
-					status = rs.getString(5);
+
+				// # out of library or on hold
+				s.executeQuery("SELECT COUNT(*) "
+						+ "FROM BookB, BookCopy C "
+						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
+						+ "AND (C.status='out' OR C.status='on hold'");
+				while (rs.next()) {
+					outLib = rs.getInt(1);
 				}
-			}
 
+				// print out search results
+				System.out.println("\n Call number: " + callNumber 
+						+ "\n ISBN: " + isbn
+						+ "\n Title: " + title + "\n"
+						+ "\n Main Author: " + mainAuthor 
+						+ "\n Copies in library: " + inLib 
+						+ "\n Copies out of library or on hold: " + outLib + "\n");
+			}
+			System.out.println("No more search results");
+			s.close();
 		}
+
 		catch (IOException e) {
 			System.out.println("IOException!");
 		}
@@ -170,12 +173,152 @@ public class BorrowerUser {
 	}
 
 	private static void searchBookByAuthor() {
-		// TODO Auto-generated method stub
+
+		// searched author
+		String             sAuthor;
+		
+		// search results
+		int          	   callNumber;
+		String             isbn;
+		String             title;
+		String             mainAuthor;
+		
+		// book copies in/out
+		int inLib=0;
+		int outLib=0;
+		
+		// to execute queries
+		Statement          s;
+
+		try {
+			// first search Book table based on author name
+			System.out.print("\n Author name: ");
+			sAuthor = Main.in.readLine();
+
+			s = Main.con.createStatement();
+
+			ResultSet rs = s.executeQuery("SELECT DISTINCT B.callNumber, B.isbn, B.title, B.mainAuthor "
+					+ "FROM HasAuthor A, Book B "
+					+ "WHERE A.callNumber=B.callNumber AND "
+					+ "(B.mainAuthor LIKE '%" + sAuthor + "%' OR A.name LIKE '%" + sAuthor + "%'");
+
+			// for each of the results
+			while (rs.next()) {
+				// parse the book
+				callNumber = rs.getInt(1);
+				isbn = rs.getString(2);
+				title = rs.getString(3);
+				mainAuthor = rs.getString(4);
+
+				// # in library
+				s.executeQuery("SELECT COUNT(*)"
+						+ "FROM Book B, BookCopy C"
+						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
+				while (rs.next()) {
+					inLib = rs.getInt(1);
+				}
+
+				// # out of library or on hold
+				s.executeQuery("SELECT COUNT(*)"
+						+ "FROM BookB, BookCopy C"
+						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
+						+ "AND (C.status='out' OR C.status='on hold')");
+				while (rs.next()) {
+					outLib = rs.getInt(1);
+				}
+
+				// print out search results
+				System.out.println("\n Call number: " + callNumber 
+						+ "\n ISBN: " + isbn
+						+ "\n Title: " + title + "\n"
+						+ "\n Main Author: " + mainAuthor 
+						+ "\n Copies in library: " + inLib 
+						+ "\n Copies out of library or on hold: " + outLib + "\n");
+			}
+			System.out.println("No more search results");
+			s.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
 
 	}
 
 	private static void searchBookBySubject() {
-		// TODO Auto-generated method stub
+		
+		// searched subject
+		String             sSubject;
+		
+		// search results
+		int          	   callNumber;
+		String             isbn;
+		String             title;
+		String             mainAuthor;
+		
+		// book copies in/out
+		int inLib=0;
+		int outLib=0;
+		
+		// to execute queries
+		Statement          s;
+
+		try {
+			// first search Book table based on author name
+			System.out.print("\n Author name: ");
+			sSubject = Main.in.readLine();
+
+			s = Main.con.createStatement();
 
+			ResultSet rs = s.executeQuery("SELECT DISTINCT B.callNumber, B.isbn, B.title, B.mainAuthor "
+					+ "FROM HasSubject S, Book B "
+					+ "WHERE S.callNumber=B.callNumber AND S.subject=" + sSubject);
+
+			// for each of the results
+			while (rs.next()) {
+				// parse the book
+				callNumber = rs.getInt(1);
+				isbn = rs.getString(2);
+				title = rs.getString(3);
+				mainAuthor = rs.getString(4);
+
+				// # in library
+				s.executeQuery("SELECT COUNT(*)"
+						+ "FROM Book B, BookCopy C"
+						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
+				while (rs.next()) {
+					inLib = rs.getInt(1);
+				}
+
+				// # out of library or on hold
+				s.executeQuery("SELECT COUNT(*)"
+						+ "FROM BookB, BookCopy C"
+						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
+						+ "AND (C.status='out' OR C.status='on hold'");
+				while (rs.next()) {
+					outLib = rs.getInt(1);
+				}
+
+				// print out search results
+				System.out.println("\n Call number: " + callNumber 
+						+ "\n ISBN: " + isbn
+						+ "\n Title: " + title + "\n"
+						+ "\n Main Author: " + mainAuthor 
+						+ "\n Copies in library: " + inLib 
+						+ "\n Copies out of library or on hold: " + outLib + "\n");
+			}
+			System.out.println("No more search results");
+			s.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
 	}
 }
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index fa4e77b..45598ee 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -17,6 +17,7 @@ public class ClerkUser {
 	 * Uses buffer line reader and connection established in Main class.
 	 */
 	public static void main() {
+		
 		int choice;
 		boolean quit;
 
@@ -69,50 +70,74 @@ public class ClerkUser {
 	 * User should provide all required info.
 	 */
 	private static void addBorrower() {
+		
+		// attributes of new borrower
 		int                bid;
 		String             password; 
 		String             name;
 		String             address;
-		String                phone;
+		String             phone;
 		String             emailAddress;
-		int                sinOrStNo;
+		int	               sinOrStNo;
 		Date               expiryDate;
 		String             type;
+		
+		Statement          s;   // to check if borrower already exists in database
 
-		PreparedStatement  ps;
+		PreparedStatement  ps;  // to add new borrower
 
 		try {
 			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
 
-			System.out.print("\n Borrower ID: ");
+			// TODO use a sequence
+			System.out.print("Borrower ID: ");
 			bid = Integer.parseInt(Main.in.readLine());
 			ps.setInt(1, bid);
 
-			System.out.print("\n Borrower password: ");
+			System.out.print("Borrower password: ");
 			password = Main.in.readLine();
 			ps.setString(2, password);
 
-			System.out.print("\n Borrower name: ");
+			System.out.print("Borrower name: ");
 			name = Main.in.readLine();
 			ps.setString(3, name);
 
-			System.out.print("\n Borrower address: ");
+			System.out.print("Borrower address: ");
 			address = Main.in.readLine();
 			ps.setString(4, address);
 
-			System.out.print("\n Borrower phone number: ");
+			System.out.print("Borrower phone number: ");
 			phone = Main.in.readLine();
 			ps.setString(5,  phone);
 
-			System.out.print("\n Borrower email address: ");
+			System.out.print("Borrower email address: ");
 			emailAddress = Main.in.readLine();
 			ps.setString(6, emailAddress);
 
-			System.out.print("\n Borrower SIN or student number: ");
+			System.out.print("Borrower SIN or student number: ");
+			if (Main.in.readLine().length() == 0) {
+				System.out.println("SIN or student number is a required field.  Please try again.");
+				ps.close();
+				return;
+			}
+			
 			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			
+			// check if this book already in database
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT * "
+										+ "FROM Borrower "
+										+ "WHERE sinOrStNo=" + sinOrStNo);
+			if (rs.next()) {
+				System.out.println("An account for this borrower already exists in the library database.");
+				s.close();
+				ps.close();
+				return;
+			}
+			
 			ps.setInt(7, sinOrStNo);
 
-			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			System.out.print("Borrower expiry date: ");  // Clerk should set to 2 years from today
 			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
 			ps.setDate(8, expiryDate);
 
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 2c568e5..dbf872c 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -12,6 +12,7 @@ public class LibrarianUser {
 	 * Uses buffer line reader and connection established in Main class.
 	 */
 	public static void main() {
+
 		int choice;
 		boolean quit;
 
@@ -42,7 +43,7 @@ public class LibrarianUser {
 			System.out.println("\nGood Bye!\n\n");
 			System.exit(0);
 		}
-		
+
 		catch (IOException e) {
 			System.out.println("IOException!");
 			try {
@@ -64,60 +65,120 @@ public class LibrarianUser {
 	 * Librarian should provide all info for book.
 	 */
 	private static void addBook() {
+		// Search by title or author or subject
+		int choice;
+
+		try {
+			System.out.print("\n\nPlease choose one of the following to add: \n");
+			System.out.print("1.  New book\n");
+			System.out.print("2.  New copy of an existing book\n");
+			System.out.print("3.  Back\n>>");
+
+			choice = Integer.parseInt(Main.in.readLine());
+
+			System.out.println(" ");
+
+			switch (choice) {
+			case 1:  addNewBook(); break;
+			case 2:  addNewBookCopy(); break;
+			case 3:  return;
+			}
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+	}
+
+	private static void addNewBook() {
+
+		// attributes of new book
 		int                callNumber;
-		String 	           isbn;
+		int 	           isbn;
 		String             title;
 		String             mainAuthor;
 		String             publisher;
 		int                year;
-		int                copyNo;
+
+		Statement          s;    // to check if added book already exists in database
 
 		PreparedStatement  ps1;  // for adding Book
-		PreparedStatement  ps2;  // for adding BookCopies
+		PreparedStatement  ps2;  // for adding BookCopy
 
 		try {
+
 			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (?,?,?,?,?,?)");
 			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?)");
 
-			System.out.print("\n Book call number: ");
+			// new book
+			// TODO use a sequence 
+			System.out.print("Book call number: ");
 			callNumber = Integer.parseInt(Main.in.readLine());
 			ps1.setInt(1, callNumber);
 
-			System.out.print("\n Book isbn: ");
-			isbn = Main.in.readLine();
-			ps1.setString(2, isbn);
+			System.out.print("Book ISBN: ");
+			if (Main.in.readLine().length() == 0) {
+				System.out.println("Book ISBN is a required field.  Please try again.");
+				ps1.close();
+				ps2.close();
+				return;
+			}
+			
+			isbn = Integer.parseInt(Main.in.readLine());
+			
+			// check if this book already in database
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT * "
+										+ "FROM Book "
+										+ "WHERE isbn=" + isbn);
+			if (rs.next()) {
+				System.out.println("This book already exists in the library database."
+						+ "Please select 'New copy' in the 'Add book' menu.");
+				s.close();
+				ps1.close();
+				ps2.close();
+				return;
+			}
+			
+			ps1.setInt(2, isbn);
 
-			System.out.print("\n Book title: ");
+			System.out.print("Book title: ");
 			title = Main.in.readLine();
 			ps1.setString(3, title);
 
-			System.out.print("\n Book main author: ");
+			System.out.print("Book main author: ");
 			mainAuthor = Main.in.readLine();
 			ps1.setString(4, mainAuthor);
 
-			System.out.print("\n Book publisher: ");
+			System.out.print("Book publisher: ");
 			publisher = Main.in.readLine();
 			ps1.setString(5,  publisher);
 
-			System.out.print("\n Book published year: ");
+			System.out.print("Book published year: ");
 			year = Integer.parseInt(Main.in.readLine());
 			ps1.setInt(6, year);
 
-			System.out.print("\n Book number of copies: ");
-			copyNo = Integer.parseInt(Main.in.readLine());
+			// new book copy
+			ps2.setInt(1, callNumber);
+			ps2.setInt(2, 1);
+			ps2.setString(3, "in");
 
+			// add book and book copy to database tables
 			ps1.executeUpdate();
-			for (int i = 1; i <= copyNo; i++) {
-				ps2.setInt(1, callNumber);
-				ps2.setInt(2, i);
-				ps2.setString(3, "in");
+			ps2.executeUpdate();
 
-				ps2.executeUpdate();
-			}
 			// commit work 
 			Main.con.commit();
 			ps1.close();
 			ps2.close();
+			s.close();
 		}
 
 		catch (IOException e) {
@@ -137,4 +198,85 @@ public class LibrarianUser {
 			}
 		}
 	}
+
+	private static void addNewBookCopy() {
+		// TODO Auto-generated method stub
+
+		// attributes of new copy
+		int                callNumber = 0;
+		int                copyNo     = 0;
+		String             status     = "in";
+
+		// to get existing callNumber of this book
+		int                isbn; 
+		Statement          s; 
+
+		// to add new copy into database
+		PreparedStatement  ps;
+
+		try {
+			// use ISBN to get existing callNumber
+			System.out.print("Book ISBN: ");
+			isbn = Integer.parseInt(Main.in.readLine());
+
+			s = Main.con.createStatement();
+			ResultSet rs1 = s.executeQuery("SELECT callNumber "
+					+ "FROM Book "
+					+ "WHERE isbn=" + isbn);
+
+			while (rs1.next()) {
+				callNumber = rs1.getInt(1);
+			}
+
+			// use callNumber to get #copies already existing in database
+			ResultSet rs2 = s.executeQuery("SELECT COUNT(C.callNumber) "
+					+ "FROM BookCopy C "
+					+ "WHERE C.callNumber=" + callNumber);
+
+			while (rs2.next()) {
+				copyNo = rs2.getInt(1);
+			}
+
+			// use callNumber and copyNo to add book copy to database
+			ps = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?)");
+
+			if (callNumber != 0 || copyNo != 0) {
+				ps.setInt(1, callNumber);
+				ps.setInt(2, copyNo);
+				ps.setString(3, status);
+
+				// add copy to database table
+				ps.execute();
+			}
+			else {
+				System.out.println("This book does not exist in the database yet."
+						+ "  Please select 'New book' in the 'Add book' menu.");
+			}
+
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			s.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+
+
+
+	}
 }
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 1396124..5953e6a 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -1,26 +1,44 @@
+drop table Fine;
+drop table Borrowing;
+drop table HoldRequest;
+drop table HasSubject;
+drop table HasAuthor;
+drop table BookCopy;
+drop table Book;
+drop table Borrower;
+drop table BorrowerType;
+
+
+create table BorrowerType
+	(type varchar(10) not null PRIMARY KEY,
+	bookTimeLimit integer null);
+
 create table Borrower
 	(bid integer not null PRIMARY KEY,
-	password varchar(20),
-	name varchar(20),
-	address varchar(50),
-	phone varchar(10),
-	emailAddress varchar(50),
-	sinOrStNo integer,
-	expiryDate date,
+	password varchar(20) null,
+	name varchar(20) null,
+	address varchar(50) null,
+	phone varchar(10) null,
+	emailAddress varchar(50) null,
+	sinOrStNo integer not null,
+	expiryDate date null,
 	type varchar(10) not null,
 	FOREIGN KEY (type) references BorrowerType);
 
-create table BorrowerType
-	(type varchar(10) not null PRIMARY KEY,
-	bookTimeLimit integer);
-
 create table Book
 	(callNumber integer not null PRIMARY KEY,
-	isbn varchar(9),
-	title varchar(50),
-	mainAuthor varchar(20),
-	publisher varchar(20),
-	year integer);
+	isbn integer not null,
+	title varchar(50) null,
+	mainAuthor varchar(20) null,
+	publisher varchar(20) null,
+	year integer null);
+
+create table BookCopy 
+	(callNumber integer not null,
+	copyNo integer not null,
+	status varchar(10) null,
+	PRIMARY KEY (callNumber, copyNo),
+	FOREIGN KEY (callNumber) references Book);
 
 create table HasAuthor
 	(callNumber integer not null,
@@ -31,21 +49,14 @@ create table HasAuthor
 create table HasSubject
 	(callNumber integer not null,
 	subject varchar(50) not null,
-	PRIMARY KEY (callNumber, subject)
-	FOREIGN KEY (callNumber) references Book);
-
-create table BookCopy 
-	(callNumber integer not null,
-	copyNo integer not null,
-	status varchar(10),
-	PRIMARY KEY (callNumber, copyNo),
+	PRIMARY KEY (callNumber, subject),
 	FOREIGN KEY (callNumber) references Book);
 
 create table HoldRequest
 	(hid integer not null PRIMARY KEY,
 	bid integer not null,
 	callNumber integer not null,
-	issuedDate date,
+	issuedDate date null,
 	FOREIGN KEY (bid) references Borrower,
 	FOREIGN KEY (callNumber) references Book);
 
@@ -54,15 +65,19 @@ create table Borrowing
 	bid integer not null,
 	callNumber integer not null,
 	copyNo integer not null,
-	outDate date,
-	inDate date,
+	outDate date null,
+	inDate date null,
 	FOREIGN KEY (bid) references Borrower,
 	FOREIGN KEY (callNumber, copyNo) references BookCopy);
 
 create table Fine
 	(fid integer not null PRIMARY KEY,
-	amount number,
-	issuedDate date,
-	paidDate date,
-	borid integer not  null,
+	amount number null,
+	issuedDate date null,
+	paidDate date null,
+	borid integer not null,
 	FOREIGN KEY (borid) references Borrowing);
+	
+
+insert into BorrowerType values
+( 'student', 
diff --git a/table.sql b/table.sql
deleted file mode 100644
index 199dc5c..0000000
--- a/table.sql
+++ /dev/null
@@ -1,68 +0,0 @@
-create table Borrower
-	(bid integer not null PRIMARY KEY,
-	password varchar(20),
-	name varchar(20),
-	address varchar(50),
-	phone integer,
-	emailAddress varchar(50),
-	sinOrStNo integer,
-	expiryDate date,
-	type varchar(10) not null,
-	FOREIGN KEY (type) references BorrowerType);
-
-create table BorrowerType
-	(type varchar(10) not null PRIMARY KEY,
-	bookTimeLimit integer);
-
-create table Book
-	(callNumber varchar(10) not null PRIMARY KEY,
-	isbn integer,
-	title varchar(50),
-	mainAuthor varchar(20),
-	publisher varchar(20),
-	year integer);
-
-create table HasAuthor
-	(callNumber varchar(10) not null,
-	name varchar(20) not null,
-	PRIMARY KEY (callNumber, name),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HasSubject
-	(callNumber varchar(10) not null,
-	subject varchar(50) not null,
-	PRIMARY KEY (callNumber, subject)
-	FOREIGN KEY (callNumber) references Book);
-
-create table BookCopy 
-	(callNumber varchar(10) not null,
-	copyNo integer not null,
-	status varchar(10),
-	PRIMARY KEY (callNumber, copyNo),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HoldRequest
-	(hid integer not null PRIMARY KEY,
-	bid integer not null,
-	callNumber varchar(10) not null,
-	issuedDate date,
-	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber) references Book);
-
-create table Borrowing
-	(borid integer not null PRIMARY KEY,
-	bid integer not null,
-	callNumber varchar(10) not null,
-	copyNo integer not null,
-	outDate date,
-	inDate date,
-	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber, copyNo) references BookCopy);
-
-create table Fine
-	(fid integer not null PRIMARY KEY,
-	amount number,
-	issuedDate date,
-	paidDate date,
-	borid integer not  null,
-	FOREIGN KEY (borid) references Borrowing);

commit 6219f6c15f229a7b2faac04d59eb2aed2228a5a5
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Fri Mar 28 23:48:45 2014 -0700

    Ran and tested.  See TODO comments about parts of methods that don't
    work/cause errors.

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index f3c2821..e7f258c 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -200,7 +200,7 @@ public class BorrowerUser {
 			ResultSet rs = s.executeQuery("SELECT DISTINCT B.callNumber, B.isbn, B.title, B.mainAuthor "
 					+ "FROM HasAuthor A, Book B "
 					+ "WHERE A.callNumber=B.callNumber AND "
-					+ "(B.mainAuthor LIKE '%" + sAuthor + "%' OR A.name LIKE '%" + sAuthor + "%'");
+					+ "(B.mainAuthor LIKE '%" + sAuthor + "%' OR A.name LIKE '%" + sAuthor + "%')");
 
 			// for each of the results
 			while (rs.next()) {
@@ -211,16 +211,16 @@ public class BorrowerUser {
 				mainAuthor = rs.getString(4);
 
 				// # in library
-				s.executeQuery("SELECT COUNT(*)"
-						+ "FROM Book B, BookCopy C"
+				s.executeQuery("SELECT COUNT(*) "
+						+ "FROM Book B, BookCopy C "
 						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
 				while (rs.next()) {
 					inLib = rs.getInt(1);
 				}
 
 				// # out of library or on hold
-				s.executeQuery("SELECT COUNT(*)"
-						+ "FROM BookB, BookCopy C"
+				s.executeQuery("SELECT COUNT(*) "
+						+ "FROM BookB, BookCopy C "
 						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
 						+ "AND (C.status='out' OR C.status='on hold')");
 				while (rs.next()) {
@@ -268,14 +268,14 @@ public class BorrowerUser {
 
 		try {
 			// first search Book table based on author name
-			System.out.print("\n Author name: ");
+			System.out.print("\n Subject: ");
 			sSubject = Main.in.readLine();
 
 			s = Main.con.createStatement();
 
 			ResultSet rs = s.executeQuery("SELECT DISTINCT B.callNumber, B.isbn, B.title, B.mainAuthor "
 					+ "FROM HasSubject S, Book B "
-					+ "WHERE S.callNumber=B.callNumber AND S.subject=" + sSubject);
+					+ "WHERE S.callNumber=B.callNumber AND S.subject='" + sSubject + "'");
 
 			// for each of the results
 			while (rs.next()) {
@@ -286,18 +286,18 @@ public class BorrowerUser {
 				mainAuthor = rs.getString(4);
 
 				// # in library
-				s.executeQuery("SELECT COUNT(*)"
-						+ "FROM Book B, BookCopy C"
+				s.executeQuery("SELECT COUNT(*) "
+						+ "FROM Book B, BookCopy C "
 						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
 				while (rs.next()) {
 					inLib = rs.getInt(1);
 				}
 
 				// # out of library or on hold
-				s.executeQuery("SELECT COUNT(*)"
-						+ "FROM BookB, BookCopy C"
+				s.executeQuery("SELECT COUNT(*) "
+						+ "FROM BookB, BookCopy C "
 						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
-						+ "AND (C.status='out' OR C.status='on hold'");
+						+ "AND (C.status='out' OR C.status='on hold')");
 				while (rs.next()) {
 					outLib = rs.getInt(1);
 				}
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 45598ee..116cb46 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -87,7 +87,7 @@ public class ClerkUser {
 		PreparedStatement  ps;  // to add new borrower
 
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,{d ?},?)");
 
 			// TODO use a sequence
 			System.out.print("Borrower ID: ");
@@ -115,17 +115,20 @@ public class ClerkUser {
 			ps.setString(6, emailAddress);
 
 			System.out.print("Borrower SIN or student number: ");
-			if (Main.in.readLine().length() == 0) {
+			String tempSinOrStNo = Main.in.readLine();
+			
+			// TODO test when GUI is working; leaving blank in simple text console ui causes error
+			if (tempSinOrStNo.length() == 0) {
 				System.out.println("SIN or student number is a required field.  Please try again.");
 				ps.close();
 				return;
 			}
 			
-			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			sinOrStNo = Integer.parseInt(tempSinOrStNo);
 			
 			// check if this book already in database
 			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT * "
+			ResultSet rs = s.executeQuery("SELECT bid "
 										+ "FROM Borrower "
 										+ "WHERE sinOrStNo=" + sinOrStNo);
 			if (rs.next()) {
@@ -137,17 +140,22 @@ public class ClerkUser {
 			
 			ps.setInt(7, sinOrStNo);
 
+			// TODO need to convert between JDBC and Oracle date types, doesn't run as is.
 			System.out.print("Borrower expiry date: ");  // Clerk should set to 2 years from today
-			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format dd-mm-yyyy format
 			ps.setDate(8, expiryDate);
 
-			System.out.print("\n Borrower type: ");
+			System.out.print("Borrower type: ");
 			type = Main.in.readLine();
 			ps.setString(9, type);
 
+			// add borrower
 			ps.executeUpdate();
+			
 			// commit work 
 			Main.con.commit();
+			System.out.println("Borrower has been added successfully.");
+			
 			ps.close();
 		}
 
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index dbf872c..4d1ed95 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -123,15 +123,18 @@ public class LibrarianUser {
 			callNumber = Integer.parseInt(Main.in.readLine());
 			ps1.setInt(1, callNumber);
 
+			// TODO test when GUI is working; leaving blank in simple text console ui causes error
 			System.out.print("Book ISBN: ");
-			if (Main.in.readLine().length() == 0) {
+			String tempIsbn = Main.in.readLine();
+			
+			if (tempIsbn.length() == 0) {
 				System.out.println("Book ISBN is a required field.  Please try again.");
 				ps1.close();
 				ps2.close();
 				return;
 			}
 			
-			isbn = Integer.parseInt(Main.in.readLine());
+			isbn = Integer.parseInt(tempIsbn);
 			
 			// check if this book already in database
 			s = Main.con.createStatement();
@@ -176,6 +179,8 @@ public class LibrarianUser {
 
 			// commit work 
 			Main.con.commit();
+			System.out.println("Book has been added successfully.");
+			
 			ps1.close();
 			ps2.close();
 			s.close();
@@ -242,19 +247,21 @@ public class LibrarianUser {
 
 			if (callNumber != 0 || copyNo != 0) {
 				ps.setInt(1, callNumber);
-				ps.setInt(2, copyNo);
+				ps.setInt(2, copyNo+1);
 				ps.setString(3, status);
 
 				// add copy to database table
 				ps.execute();
+				
+				// commit work 
+				Main.con.commit();
+				System.out.println("Book copy has been added successfully.");
 			}
 			else {
 				System.out.println("This book does not exist in the database yet."
 						+ "  Please select 'New book' in the 'Add book' menu.");
 			}
-
-			// commit work 
-			Main.con.commit();
+			
 			ps.close();
 			s.close();
 		}
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 5953e6a..e013d32 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -80,4 +80,10 @@ create table Fine
 	
 
 insert into BorrowerType values
-( 'student', 
+('student', 2);
+insert into BorrowerType values
+('faculty', 12);
+insert into BorrowerType values
+('staff', 6);
+insert into BorrowerType values
+('general', 2);

commit 653aac748d51528623ea333879102ee94d1f9160
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Fri Mar 28 23:11:36 2014 -0700

    table .sql modification.
    
    There were some parts to be fixed so that it is runnable in sql plus.
    added drop table too.

diff --git a/Project Part III/classes12.zip b/Project Part III/classes12.zip
deleted file mode 100644
index 860bb5a..0000000
Binary files a/Project Part III/classes12.zip and /dev/null differ
diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index e7f258c..85e0eae 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -12,7 +12,7 @@ public class BorrowerUser {
 	 * Uses buffer line reader and connection established in Main class.
 	 */
 	public static void main() {
-		
+
 		int choice;
 		boolean quit;
 
@@ -32,7 +32,7 @@ public class BorrowerUser {
 
 				switch(choice) {
 				case 1:  searchBook(); break;
-				case 2:  ; break; // TODO checkAccount()
+				case 2:  checkAccount(); break;
 				case 3:  ; break; // TODO requestHold()
 				case 4:  ; break; // TODO payFine()
 				case 5:  quit = true; 
@@ -103,17 +103,17 @@ public class BorrowerUser {
 
 		// searched title
 		String             sTitle;
-		
+
 		// search results
 		int          	   callNumber;
 		String             isbn;
 		String             title;
 		String             mainAuthor;
-		
+
 		// book copies in/out
 		int inLib=0;
 		int outLib=0;
-		
+
 		// to execute queries
 		Statement          s;
 
@@ -176,17 +176,17 @@ public class BorrowerUser {
 
 		// searched author
 		String             sAuthor;
-		
+
 		// search results
 		int          	   callNumber;
 		String             isbn;
 		String             title;
 		String             mainAuthor;
-		
+
 		// book copies in/out
 		int inLib=0;
 		int outLib=0;
-		
+
 		// to execute queries
 		Statement          s;
 
@@ -249,20 +249,20 @@ public class BorrowerUser {
 	}
 
 	private static void searchBookBySubject() {
-		
+
 		// searched subject
 		String             sSubject;
-		
+
 		// search results
 		int          	   callNumber;
 		String             isbn;
 		String             title;
 		String             mainAuthor;
-		
+
 		// book copies in/out
 		int inLib=0;
 		int outLib=0;
-		
+
 		// to execute queries
 		Statement          s;
 
@@ -321,4 +321,127 @@ public class BorrowerUser {
 			System.out.println("Message: " + ex.getMessage());
 		}
 	}
-}
+	
+	/*
+	 * Displays the items the borrower has currently borrowed and
+	 * not yet returned, any outstanding fines and 
+	 * the hold requests that have been placed by the borrower.
+	 */
+	private static void checkAccount() {
+		String title;
+		String isbn;
+		String mainAuthor;
+		Statement stmt;
+		ResultSet rs;
+
+		try {
+			stmt = Main.con.createStatement();
+
+			// query of title, isbn and mainAuthor when borrowing's inDate is null.
+			rs = stmt.executeQuery("SELECT A.title, A.isbn, A.mainAuthor "
+					+ "FROM Book A, Borrowing B, BookCopy C, Borrower D "
+					+ "WHERE B.bid = D.bid AND B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND C.callNumber = A.callNumber AND B.inDate IS NULL "
+					+ "GROUP BY A.title");
+
+			// get info on ResultSet
+			ResultSetMetaData rsmd = rs.getMetaData();
+
+			// get number of columns
+			int numCols = rsmd.getColumnCount();
+
+			System.out.println(" ");
+
+			// display column names;
+			for (int i = 0; i < numCols; i++) {
+				// get column name and print it
+
+				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
+			}
+
+			System.out.println(" ");
+
+			while (rs.next()) {
+				// for display purposes get everything from Oracle
+				// as a string
+
+				// simplified output formatting; truncation may occur
+
+				title = rs.getString("title");
+				if (rs.wasNull()) {
+					System.out.printf("%-50.50s", " ");
+				} else {
+					System.out.printf("%-50.50s", title);
+				}
+
+				isbn = rs.getString("isbn");
+				if (rs.wasNull()) {
+					System.out.printf("%-9.9s", " ");
+				} else {
+					System.out.printf("%-9.9s", isbn);
+				}
+
+				mainAuthor = rs.getString("mainAuthor");
+				if (rs.wasNull()) {
+					System.out.printf("%-20.20s\n", " ");
+				} else {
+					System.out.printf("%-20.20s\n", mainAuthor);
+				}
+			}
+			///////////////////////////////////////		
+			// query of title, isbn and mainAuthor when borrowing's inDate is null.
+			
+			//TODO: Need to show outstanding fines and the hold request that have been placed by borrower
+			rs = stmt.executeQuery("");
+
+			// get info on ResultSet
+			rsmd = rs.getMetaData();
+
+			// get number of columns
+			numCols = rsmd.getColumnCount();
+
+			System.out.println(" ");
+
+			// display column names;
+			for (int i = 0; i < numCols; i++) {
+				// get column name and print it
+
+				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
+			}
+
+			System.out.println(" ");
+
+			while (rs.next()) {
+				// for display purposes get everything from Oracle
+				// as a string
+
+				// simplified output formatting; truncation may occur
+
+				title = rs.getString("title");
+				if (rs.wasNull()) {
+					System.out.printf("%-50.50s", " ");
+				} else {
+					System.out.printf("%-50.50s", title);
+				}
+
+				isbn = rs.getString("isbn");
+				if (rs.wasNull()) {
+					System.out.printf("%-9.9s", " ");
+				} else {
+					System.out.printf("%-9.9s", isbn);
+				}
+
+				mainAuthor = rs.getString("mainAuthor");
+				if (rs.wasNull()) {
+					System.out.printf("%-20.20s", " ");
+				} else {
+					System.out.printf("%-20.20s", mainAuthor);
+				}
+			}
+			// close the statement;
+			// the ResultSet will also be closed
+			stmt.close();
+		} catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+}
\ No newline at end of file
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index e013d32..9d24a10 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -77,7 +77,7 @@ create table Fine
 	paidDate date null,
 	borid integer not null,
 	FOREIGN KEY (borid) references Borrowing);
-	
+
 
 insert into BorrowerType values
 ('student', 2);
@@ -86,4 +86,4 @@ insert into BorrowerType values
 insert into BorrowerType values
 ('staff', 6);
 insert into BorrowerType values
-('general', 2);
+('general', 2);
\ No newline at end of file

commit 177ce9db8d7e26cc229ffc50fe62a3631a8f61ab
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Fri Mar 28 23:25:51 2014 -0700

    fixed table again. classes12 added again, (sorry)
    
    table attributes type has changed back to original version that was in
    github.

diff --git a/Project Part III/classes12.zip b/Project Part III/classes12.zip
new file mode 100644
index 0000000..860bb5a
Binary files /dev/null and b/Project Part III/classes12.zip differ

commit 175e741fe267f19f8d1ae33fd137942464dc0d11
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 02:53:06 2014 -0700

    checkAccount in BorrowerUser done, (not Tested)

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 85e0eae..98ec71b 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -328,19 +328,31 @@ public class BorrowerUser {
 	 * the hold requests that have been placed by the borrower.
 	 */
 	private static void checkAccount() {
+		String userBid;
+		
 		String title;
 		String isbn;
 		String mainAuthor;
+		int amount;
+		int totalAmount = 0;
+		Date issuedDate;
 		Statement stmt;
 		ResultSet rs;
 
+		
 		try {
+			System.out.printf("Put your Borrower ID: ");
+			userBid = Main.in.readLine(); //TODO: I should put constraint.
+			
 			stmt = Main.con.createStatement();
 
 			// query of title, isbn and mainAuthor when borrowing's inDate is null.
+			System.out.println("List of items you currently borrowed:");
 			rs = stmt.executeQuery("SELECT A.title, A.isbn, A.mainAuthor "
 					+ "FROM Book A, Borrowing B, BookCopy C, Borrower D "
-					+ "WHERE B.bid = D.bid AND B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND C.callNumber = A.callNumber AND B.inDate IS NULL "
+					+ "WHERE B.bid = D.bid AND B.callNumber = C.callNumber "
+					+ "AND B.copyNo = C.copyNo AND C.callNumber = A.callNumber AND B.inDate IS NULL "
+					+ "AND D.bid=" + userBid
 					+ "GROUP BY A.title");
 
 			// get info on ResultSet
@@ -354,7 +366,6 @@ public class BorrowerUser {
 			// display column names;
 			for (int i = 0; i < numCols; i++) {
 				// get column name and print it
-
 				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
 			}
 
@@ -387,12 +398,14 @@ public class BorrowerUser {
 					System.out.printf("%-20.20s\n", mainAuthor);
 				}
 			}
-			///////////////////////////////////////		
-			// query of title, isbn and mainAuthor when borrowing's inDate is null.
-			
-			//TODO: Need to show outstanding fines and the hold request that have been placed by borrower
-			rs = stmt.executeQuery("");
 
+			//total outstanding fine
+			System.out.println("Outstanding fine:");
+			rs = stmt.executeQuery("SELECT A.amount, A.issuedDate, D.title "
+					+ "FROM Fine A, Borrowing B, Borrower C, BookCopy D, Book E "
+					+ "WHERE A.borid=B.borid AND B.bid=C.bid AND D.callNumber=E.callNumber "
+					+ "AND B.callNumber=D.callNumber AND B.copyNo=D.copyNo "
+					+ "AND A.payDate IS NULL AND C.bid=" + userBid);
 			// get info on ResultSet
 			rsmd = rs.getMetaData();
 
@@ -404,8 +417,7 @@ public class BorrowerUser {
 			// display column names;
 			for (int i = 0; i < numCols; i++) {
 				// get column name and print it
-
-				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
+				System.out.printf("%-20s", rsmd.getColumnName(i + 1));
 			}
 
 			System.out.println(" ");
@@ -416,32 +428,77 @@ public class BorrowerUser {
 
 				// simplified output formatting; truncation may occur
 
+				amount = rs.getInt("amount");
+				if (rs.wasNull()) {
+					System.out.printf("%-20.20s", " ");
+				} else {
+					System.out.printf("%-20.20s", amount);
+				}
+				totalAmount += amount;
+				issuedDate = rs.getDate("issuedDate");
+				if (rs.wasNull()) {
+					System.out.printf("%-15.15s", " ");
+				} else {
+					System.out.printf("%-15.15s", issuedDate);
+				}
 				title = rs.getString("title");
 				if (rs.wasNull()) {
-					System.out.printf("%-50.50s", " ");
+					System.out.printf("%-50.50s\n", " ");
 				} else {
-					System.out.printf("%-50.50s", title);
+					System.out.printf("%-50.50s\n", title);
 				}
+			}
+			System.out.println("Total amount of outstanding fine is: " + totalAmount);
+			System.out.println(" ");
 
-				isbn = rs.getString("isbn");
+			//Hold Request List
+			System.out.println("HOLD REQUEST LIST placed by you:");
+			rs = stmt.executeQuery("SELECT B.title, A.issuedDate "
+					+ "FROM HoldRequest A, Book B, Borrower C "
+					+ "WHERE A.callNumber=B.callNumber AND A.bid=C.bid "
+					+ "AND C.bid=" + userBid);
+			// get info on ResultSet
+			rsmd = rs.getMetaData();
+
+			// get number of columns
+			numCols = rsmd.getColumnCount();
+
+			System.out.println(" ");
+
+			// display column names;
+			for (int i = 0; i < numCols; i++) {
+				// get column name and print it
+				System.out.printf("%-20s", rsmd.getColumnName(i + 1));
+			}
+
+			System.out.println(" ");
+
+			while (rs.next()) {
+				// for display purposes get everything from Oracle
+				// as a string
+
+				// simplified output formatting; truncation may occur
+				title = rs.getString("title");
 				if (rs.wasNull()) {
-					System.out.printf("%-9.9s", " ");
+					System.out.printf("%-50.50s", " ");
 				} else {
-					System.out.printf("%-9.9s", isbn);
+					System.out.printf("%-50.50s", title);
 				}
-
-				mainAuthor = rs.getString("mainAuthor");
+				issuedDate = rs.getDate("issuedDate");
 				if (rs.wasNull()) {
-					System.out.printf("%-20.20s", " ");
+					System.out.printf("%-15.15s\n", " ");
 				} else {
-					System.out.printf("%-20.20s", mainAuthor);
+					System.out.printf("%-15.15s\n", issuedDate);
 				}
 			}
+			
 			// close the statement;
 			// the ResultSet will also be closed
 			stmt.close();
 		} catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
+		} catch (IOException e) {
+			System.out.println("Message: " + e.getMessage());
 		}
 	}
 }
\ No newline at end of file

commit bf18e3f31382d274a4b4759518600a7d5356c984
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 15:40:02 2014 -0700

    In table.sql, changed isbn type to char(9) and sinOrStNo type to
    varchar(10).  Isbn is always 9 digits, sin is 9 digits but student
    numbers can have different lengths.  Changed java types in transactions
    to reflect this.  Please pay attention to the types used in table.sql
    when coding!
    
    In process of debugging searchBook() in BorrowerUser.  Sql queries for
    searchBySubject() and searchByAuthor() are buggy.

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 98ec71b..af5ba4e 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -127,39 +127,63 @@ public class BorrowerUser {
 					+ "FROM Book B "
 					+ "WHERE B.title LIKE '%" + sTitle + "%'");
 
-			// for each of the results
-			while (rs.next()) {
-				// parse the book
+			// get info on ResultSet
+			ResultSetMetaData rsmd = rs.getMetaData();
+
+			// get number of columns
+			int numCols = rsmd.getColumnCount();
+
+			System.out.println(" ");
+
+			// display column names;
+			for (int i = 0; i < numCols; i++)
+			{
+				// get column name and print it
+
+				System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+			}
+			// add columns for in/out count
+			System.out.printf("%-15s", "in library");
+			System.out.printf("%-15s", "out/on hold");
+
+			System.out.println(" ");
+
+			while(rs.next())
+			{
+				// simplified output formatting; truncation may occur
+
 				callNumber = rs.getInt(1);
+				System.out.printf("%-15.15s", callNumber);
+
 				isbn = rs.getString(2);
+				System.out.printf("%-15.15s", isbn);
+
 				title = rs.getString(3);
+				System.out.printf("%-15.15s", title);
+
 				mainAuthor = rs.getString(4);
+				System.out.printf("%-15.15s", mainAuthor);    
 
 				// # in library
-				s.executeQuery("SELECT COUNT(*) "
+				ResultSet rsi = s.executeQuery("SELECT COUNT(*) "
 						+ "FROM Book B, BookCopy C "
 						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
-				while (rs.next()) {
-					inLib = rs.getInt(1);
+				while (rsi.next()) {
+					inLib = rsi.getInt(1);
 				}
+				System.out.printf("%-15.15s", inLib);
 
 				// # out of library or on hold
-				s.executeQuery("SELECT COUNT(*) "
+				ResultSet rso = s.executeQuery("SELECT COUNT(*) "
 						+ "FROM BookB, BookCopy C "
 						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
 						+ "AND (C.status='out' OR C.status='on hold'");
-				while (rs.next()) {
-					outLib = rs.getInt(1);
+				while (rso.next()) {
+					outLib = rso.getInt(1);
 				}
-
-				// print out search results
-				System.out.println("\n Call number: " + callNumber 
-						+ "\n ISBN: " + isbn
-						+ "\n Title: " + title + "\n"
-						+ "\n Main Author: " + mainAuthor 
-						+ "\n Copies in library: " + inLib 
-						+ "\n Copies out of library or on hold: " + outLib + "\n");
+				System.out.printf("%-15.15s", outLib);
 			}
+
 			System.out.println("No more search results");
 			s.close();
 		}
@@ -199,42 +223,66 @@ public class BorrowerUser {
 
 			ResultSet rs = s.executeQuery("SELECT DISTINCT B.callNumber, B.isbn, B.title, B.mainAuthor "
 					+ "FROM HasAuthor A, Book B "
-					+ "WHERE A.callNumber=B.callNumber AND "
-					+ "(B.mainAuthor LIKE '%" + sAuthor + "%' OR A.name LIKE '%" + sAuthor + "%')");
+					+ "WHERE (A.callNumber=B.callNumber AND A.name LIKE '%" + sAuthor + "%') "
+					+ "OR B.mainAuthor LIKE '%" + sAuthor + "%'");
+
+			// get info on ResultSet
+			ResultSetMetaData rsmd = rs.getMetaData();
+
+			// get number of columns
+			int numCols = rsmd.getColumnCount();
+
+			System.out.println(" ");
+
+			// display column names;
+			for (int i = 0; i < numCols; i++)
+			{
+				// get column name and print it
+
+				System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+			}
+			// add columns for in/out count
+			System.out.printf("%-15s", "in library");
+			System.out.printf("%-15s", "out/on hold");
+
+			System.out.println(" ");
+
+			while(rs.next())
+			{
+				// simplified output formatting; truncation may occur
 
-			// for each of the results
-			while (rs.next()) {
-				// parse the book
 				callNumber = rs.getInt(1);
+				System.out.printf("%-15.15s", callNumber);
+
 				isbn = rs.getString(2);
+				System.out.printf("%-15.15s", isbn);
+
 				title = rs.getString(3);
+				System.out.printf("%-15.15s", title);
+
 				mainAuthor = rs.getString(4);
+				System.out.printf("%-15.15s", mainAuthor);    
 
 				// # in library
-				s.executeQuery("SELECT COUNT(*) "
+				ResultSet rsi = s.executeQuery("SELECT COUNT(*) "
 						+ "FROM Book B, BookCopy C "
 						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
-				while (rs.next()) {
-					inLib = rs.getInt(1);
+				while (rsi.next()) {
+					inLib = rsi.getInt(1);
 				}
+				System.out.printf("%-15.15s", inLib);
 
 				// # out of library or on hold
-				s.executeQuery("SELECT COUNT(*) "
+				ResultSet rso = s.executeQuery("SELECT COUNT(*) "
 						+ "FROM BookB, BookCopy C "
 						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
-						+ "AND (C.status='out' OR C.status='on hold')");
-				while (rs.next()) {
-					outLib = rs.getInt(1);
+						+ "AND (C.status='out' OR C.status='on hold'");
+				while (rso.next()) {
+					outLib = rso.getInt(1);
 				}
-
-				// print out search results
-				System.out.println("\n Call number: " + callNumber 
-						+ "\n ISBN: " + isbn
-						+ "\n Title: " + title + "\n"
-						+ "\n Main Author: " + mainAuthor 
-						+ "\n Copies in library: " + inLib 
-						+ "\n Copies out of library or on hold: " + outLib + "\n");
+				System.out.printf("%-15.15s", outLib);
 			}
+
 			System.out.println("No more search results");
 			s.close();
 		}
@@ -321,7 +369,7 @@ public class BorrowerUser {
 			System.out.println("Message: " + ex.getMessage());
 		}
 	}
-	
+
 	/*
 	 * Displays the items the borrower has currently borrowed and
 	 * not yet returned, any outstanding fines and 
@@ -329,7 +377,7 @@ public class BorrowerUser {
 	 */
 	private static void checkAccount() {
 		String userBid;
-		
+
 		String title;
 		String isbn;
 		String mainAuthor;
@@ -339,11 +387,11 @@ public class BorrowerUser {
 		Statement stmt;
 		ResultSet rs;
 
-		
+
 		try {
 			System.out.printf("Put your Borrower ID: ");
 			userBid = Main.in.readLine(); //TODO: I should put constraint.
-			
+
 			stmt = Main.con.createStatement();
 
 			// query of title, isbn and mainAuthor when borrowing's inDate is null.
@@ -491,7 +539,7 @@ public class BorrowerUser {
 					System.out.printf("%-15.15s\n", issuedDate);
 				}
 			}
-			
+
 			// close the statement;
 			// the ResultSet will also be closed
 			stmt.close();
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 116cb46..fd35dd1 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -78,7 +78,7 @@ public class ClerkUser {
 		String             address;
 		String             phone;
 		String             emailAddress;
-		int	               sinOrStNo;
+		String             sinOrStNo;
 		Date               expiryDate;
 		String             type;
 		
@@ -115,16 +115,7 @@ public class ClerkUser {
 			ps.setString(6, emailAddress);
 
 			System.out.print("Borrower SIN or student number: ");
-			String tempSinOrStNo = Main.in.readLine();
-			
-			// TODO test when GUI is working; leaving blank in simple text console ui causes error
-			if (tempSinOrStNo.length() == 0) {
-				System.out.println("SIN or student number is a required field.  Please try again.");
-				ps.close();
-				return;
-			}
-			
-			sinOrStNo = Integer.parseInt(tempSinOrStNo);
+			sinOrStNo = Main.in.readLine();
 			
 			// check if this book already in database
 			s = Main.con.createStatement();
@@ -138,7 +129,7 @@ public class ClerkUser {
 				return;
 			}
 			
-			ps.setInt(7, sinOrStNo);
+			ps.setString(7, sinOrStNo);
 
 			// TODO need to convert between JDBC and Oracle date types, doesn't run as is.
 			System.out.print("Borrower expiry date: ");  // Clerk should set to 2 years from today
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 4d1ed95..bd74478 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -4,6 +4,7 @@ import gui.Main;
 
 import java.io.IOException;
 import java.sql.*;
+import java.util.*;
 
 public class LibrarianUser {
 
@@ -101,21 +102,26 @@ public class LibrarianUser {
 
 		// attributes of new book
 		int                callNumber;
-		int 	           isbn;
+		String 	           isbn;
 		String             title;
 		String             mainAuthor;
 		String             publisher;
 		int                year;
+		
+		//
+		List<String>       subjects;
 
 		Statement          s;    // to check if added book already exists in database
 
 		PreparedStatement  ps1;  // for adding Book
 		PreparedStatement  ps2;  // for adding BookCopy
+		PreparedStatement  ps3;  // for adding HasSubject
 
 		try {
 
 			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (?,?,?,?,?,?)");
 			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?)");
+			ps3 = Main.con.prepareStatement("INSERT INTO HasSubject VALUES (?,?)");
 
 			// new book
 			// TODO use a sequence 
@@ -123,18 +129,8 @@ public class LibrarianUser {
 			callNumber = Integer.parseInt(Main.in.readLine());
 			ps1.setInt(1, callNumber);
 
-			// TODO test when GUI is working; leaving blank in simple text console ui causes error
 			System.out.print("Book ISBN: ");
-			String tempIsbn = Main.in.readLine();
-			
-			if (tempIsbn.length() == 0) {
-				System.out.println("Book ISBN is a required field.  Please try again.");
-				ps1.close();
-				ps2.close();
-				return;
-			}
-			
-			isbn = Integer.parseInt(tempIsbn);
+			isbn = Main.in.readLine();
 			
 			// check if this book already in database
 			s = Main.con.createStatement();
@@ -150,7 +146,7 @@ public class LibrarianUser {
 				return;
 			}
 			
-			ps1.setInt(2, isbn);
+			ps1.setString(2, isbn);
 
 			System.out.print("Book title: ");
 			title = Main.in.readLine();
@@ -172,10 +168,21 @@ public class LibrarianUser {
 			ps2.setInt(1, callNumber);
 			ps2.setInt(2, 1);
 			ps2.setString(3, "in");
+			
+			// add subjects of book
+			System.out.print("Book subjects: ");
+			String temp = Main.in.readLine();
+			subjects = Arrays.asList(temp.split(","));
+			
+			for (String subject : subjects) {
+				ps3.setInt(1, callNumber);
+				ps3.setString(2, subject.trim());
+			}
 
-			// add book and book copy to database tables
+			// add book and book copy and subjects to database tables
 			ps1.executeUpdate();
 			ps2.executeUpdate();
+			ps3.executeUpdate();
 
 			// commit work 
 			Main.con.commit();
@@ -213,7 +220,7 @@ public class LibrarianUser {
 		String             status     = "in";
 
 		// to get existing callNumber of this book
-		int                isbn; 
+		String             isbn; 
 		Statement          s; 
 
 		// to add new copy into database
@@ -222,7 +229,7 @@ public class LibrarianUser {
 		try {
 			// use ISBN to get existing callNumber
 			System.out.print("Book ISBN: ");
-			isbn = Integer.parseInt(Main.in.readLine());
+			isbn = Main.in.readLine();
 
 			s = Main.con.createStatement();
 			ResultSet rs1 = s.executeQuery("SELECT callNumber "
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 9d24a10..356b1ad 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -18,16 +18,16 @@ create table Borrower
 	password varchar(20) null,
 	name varchar(20) null,
 	address varchar(50) null,
-	phone varchar(10) null,
+	phone char(10) null,
 	emailAddress varchar(50) null,
-	sinOrStNo integer not null,
+	sinOrStNo varchar(10) not null,
 	expiryDate date null,
 	type varchar(10) not null,
 	FOREIGN KEY (type) references BorrowerType);
 
 create table Book
 	(callNumber integer not null PRIMARY KEY,
-	isbn integer not null,
+	isbn char(9) not null,
 	title varchar(50) null,
 	mainAuthor varchar(20) null,
 	publisher varchar(20) null,
@@ -86,4 +86,17 @@ insert into BorrowerType values
 insert into BorrowerType values
 ('staff', 6);
 insert into BorrowerType values
-('general', 2);
\ No newline at end of file
+('general', 2);
+
+insert into Book values
+(1000, '123456789', 'ABCs', 'Sammy Foo', 'Foo Readers', 2000);
+
+insert into BookCopy values
+(1000, 1, 'in');
+insert into BookCopy values
+(1000, 2, 'out');
+insert into BookCopy values
+(1000, 3, 'on hold');
+
+insert into HasSubject values
+(1000, 'kindergarten');
\ No newline at end of file

commit 67449cd2eca50f3df796c3f0920ff4c2d4c4fbc6
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 16:53:33 2014 -0700

    Modified addBook() transaction in LibrarianUser, so that other authors
    and subjects are also added as tuples to HasAuthor and HasSubject
    tables.

diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index bd74478..b22012e 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -107,21 +107,24 @@ public class LibrarianUser {
 		String             mainAuthor;
 		String             publisher;
 		int                year;
-		
+
 		//
 		List<String>       subjects;
+		List<String>       authors;
 
 		Statement          s;    // to check if added book already exists in database
 
 		PreparedStatement  ps1;  // for adding Book
 		PreparedStatement  ps2;  // for adding BookCopy
 		PreparedStatement  ps3;  // for adding HasSubject
+		PreparedStatement  ps4;  // for adding HasAuthor
 
 		try {
 
 			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (?,?,?,?,?,?)");
 			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?)");
 			ps3 = Main.con.prepareStatement("INSERT INTO HasSubject VALUES (?,?)");
+			ps4 = Main.con.prepareStatement("INSERT INTO HasAuthor VALUES (?,?)");
 
 			// new book
 			// TODO use a sequence 
@@ -131,12 +134,12 @@ public class LibrarianUser {
 
 			System.out.print("Book ISBN: ");
 			isbn = Main.in.readLine();
-			
+
 			// check if this book already in database
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT * "
-										+ "FROM Book "
-										+ "WHERE isbn=" + isbn);
+					+ "FROM Book "
+					+ "WHERE isbn=" + isbn);
 			if (rs.next()) {
 				System.out.println("This book already exists in the library database."
 						+ "Please select 'New copy' in the 'Add book' menu.");
@@ -145,7 +148,7 @@ public class LibrarianUser {
 				ps2.close();
 				return;
 			}
-			
+
 			ps1.setString(2, isbn);
 
 			System.out.print("Book title: ");
@@ -164,32 +167,64 @@ public class LibrarianUser {
 			year = Integer.parseInt(Main.in.readLine());
 			ps1.setInt(6, year);
 
+			ps1.executeUpdate();
+
+
 			// new book copy
 			ps2.setInt(1, callNumber);
 			ps2.setInt(2, 1);
 			ps2.setString(3, "in");
 			
+			ps2.executeUpdate();
+
+
 			// add subjects of book
 			System.out.print("Book subjects: ");
 			String temp = Main.in.readLine();
 			subjects = Arrays.asList(temp.split(","));
-			
+
 			for (String subject : subjects) {
 				ps3.setInt(1, callNumber);
-				ps3.setString(2, subject.trim());
+				
+				if (subject.length() == 0) {
+					ps3.setString(2, null);
+				} else {
+					ps3.setString(2, subject.trim());
+				}
+				
+				ps3.executeUpdate();
 			}
 
-			// add book and book copy and subjects to database tables
-			ps1.executeUpdate();
-			ps2.executeUpdate();
-			ps3.executeUpdate();
 
+			// add other authors of book
+			System.out.print("Book's other authors: ");
+			String temp2 = Main.in.readLine();
+			
+			if (temp2.length() != 0) {
+				authors = Arrays.asList(temp2.split(","));
+				
+				for (String author: authors) {
+					ps4.setInt(1, callNumber);
+					
+					if (author.length() == 0) {
+						ps4.setString(2, null);
+					} else {
+						ps4.setString(2, author.trim());
+					}
+					
+					ps4.executeUpdate();
+				}
+			}
+
+			
 			// commit work 
 			Main.con.commit();
 			System.out.println("Book has been added successfully.");
-			
+
 			ps1.close();
 			ps2.close();
+			ps3.close();
+			ps4.close();
 			s.close();
 		}
 
@@ -259,7 +294,7 @@ public class LibrarianUser {
 
 				// add copy to database table
 				ps.execute();
-				
+
 				// commit work 
 				Main.con.commit();
 				System.out.println("Book copy has been added successfully.");
@@ -268,7 +303,7 @@ public class LibrarianUser {
 				System.out.println("This book does not exist in the database yet."
 						+ "  Please select 'New book' in the 'Add book' menu.");
 			}
-			
+
 			ps.close();
 			s.close();
 		}

commit 5ee643a495f747618f17721d33f37504b17842cc
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 17:23:54 2014 -0700

    checkaccount modification

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 98ec71b..f139482 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -21,7 +21,7 @@ public class BorrowerUser {
 			while (!quit) {
 				System.out.print("\n\nPlease choose one of the following: \n");
 				System.out.print("1.  Book search\n");
-				//System.out.print("2.  Check account\n");
+				System.out.print("2.  Check account\n");
 				//System.out.print("3.  Place a hold request\n");
 				//System.out.print("4.  Pay fines\n");
 				System.out.print("5.  Quit\n>>");
@@ -353,7 +353,7 @@ public class BorrowerUser {
 					+ "WHERE B.bid = D.bid AND B.callNumber = C.callNumber "
 					+ "AND B.copyNo = C.copyNo AND C.callNumber = A.callNumber AND B.inDate IS NULL "
 					+ "AND D.bid=" + userBid
-					+ "GROUP BY A.title");
+					+ "ORDER BY A.title ASC");
 
 			// get info on ResultSet
 			ResultSetMetaData rsmd = rs.getMetaData();
@@ -400,12 +400,12 @@ public class BorrowerUser {
 			}
 
 			//total outstanding fine
-			System.out.println("Outstanding fine:");
-			rs = stmt.executeQuery("SELECT A.amount, A.issuedDate, D.title "
+			System.out.println("\nOutstanding fine:");
+			rs = stmt.executeQuery("SELECT A.amount, A.issuedDate, E.title "
 					+ "FROM Fine A, Borrowing B, Borrower C, BookCopy D, Book E "
 					+ "WHERE A.borid=B.borid AND B.bid=C.bid AND D.callNumber=E.callNumber "
 					+ "AND B.callNumber=D.callNumber AND B.copyNo=D.copyNo "
-					+ "AND A.payDate IS NULL AND C.bid=" + userBid);
+					+ "AND A.paidDate IS NULL AND C.bid=" + userBid);
 			// get info on ResultSet
 			rsmd = rs.getMetaData();
 
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 9d24a10..b36cf01 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -86,4 +86,50 @@ insert into BorrowerType values
 insert into BorrowerType values
 ('staff', 6);
 insert into BorrowerType values
-('general', 2);
\ No newline at end of file
+('general', 2);
+
+insert into Borrower values
+('12345678', 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '12345678', '2015-09-09', 'faculty');
+insert into Borrower values
+('56781234', 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '12345678', '2014-09-09', 'staff');
+insert into Borrower values
+('87654321', 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '12345678', '2015-12-12', 'general');
+insert into Borrower values
+('11111111', 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '12345678', '2015-09-09', 'staff');
+insert into Borrower values
+('22222222', 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
+
+insert into Book values
+('1000', '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
+insert into Book values
+('2000', '02000000', 'Hi Database', 'Laks', 'SFU','2000');
+insert into Book values
+('3000', '03000000', 'Advanced Data Structure and Algorithm', 'Michelle Ng', 'UBC','2008');
+insert into Book values
+('4000', '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
+insert into Book values
+('5000', '05000000', 'Hi C++', 'Laks', 'UBC','2014');
+insert into Book values
+('6000', '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
+
+insert into BookCopy values
+(1000, 1, 'in');
+insert into BookCopy values
+(1000, 2, 'out');
+insert into BookCopy values
+(1000, 3, 'on hold');
+
+insert into HasSubject values
+(1000, 'kindergarten');
+
+insert into Borrowing values
+('11111','12345678','1000','2','2014-03-29',null);
+insert into Borrowing values
+('22222','12345678','1000','1','2014-02-22','2014-03-29');
+insert into Borrowing values
+('33333','12345678','1000','1','2014-01-29','2014-01-31');
+insert into Borrowing values
+('44444','12345678','1000','1','2013-09-01','2013-10-10');
+
+insert into HoldRequest values
+('1111','12345678','1000', '2014-03-30');
\ No newline at end of file

commit 7fdb69a3042e118308e442cf6edc44be1ada1947
Merge: 5ee643a 67449cd
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 17:28:09 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam
    
    Conflicts:
    	Project Part III/table.sql

commit 90cc63492a9611bea1a677b30f2caebb65174702
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 17:51:33 2014 -0700

    searchBookByTitle(), addBook() updated and functioning.

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index af5ba4e..4c594f2 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -166,8 +166,8 @@ public class BorrowerUser {
 
 				// # in library
 				ResultSet rsi = s.executeQuery("SELECT COUNT(*) "
-						+ "FROM Book B, BookCopy C "
-						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
+						+ "FROM BookCopy "
+						+ "WHERE callNumber=" + callNumber + " AND status='in'");
 				while (rsi.next()) {
 					inLib = rsi.getInt(1);
 				}
@@ -175,16 +175,15 @@ public class BorrowerUser {
 
 				// # out of library or on hold
 				ResultSet rso = s.executeQuery("SELECT COUNT(*) "
-						+ "FROM BookB, BookCopy C "
-						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
-						+ "AND (C.status='out' OR C.status='on hold'");
+						+ "FROM BookCopy "
+						+ "WHERE callNumber=" + callNumber + " AND (status='out' OR status='on hold')");
 				while (rso.next()) {
 					outLib = rso.getInt(1);
 				}
 				System.out.printf("%-15.15s", outLib);
 			}
 
-			System.out.println("No more search results");
+			System.out.println("\n No more search results");
 			s.close();
 		}
 
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index fd35dd1..ffe54be 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -72,7 +72,6 @@ public class ClerkUser {
 	private static void addBorrower() {
 		
 		// attributes of new borrower
-		int                bid;
 		String             password; 
 		String             name;
 		String             address;
@@ -87,12 +86,7 @@ public class ClerkUser {
 		PreparedStatement  ps;  // to add new borrower
 
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,{d ?},?)");
-
-			// TODO use a sequence
-			System.out.print("Borrower ID: ");
-			bid = Integer.parseInt(Main.in.readLine());
-			ps.setInt(1, bid);
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (bid_c.nextval,?,?,?,?,?,?,{d ?},?)");
 
 			System.out.print("Borrower password: ");
 			password = Main.in.readLine();
@@ -117,7 +111,7 @@ public class ClerkUser {
 			System.out.print("Borrower SIN or student number: ");
 			sinOrStNo = Main.in.readLine();
 			
-			// check if this book already in database
+			// check if this borrower already in database
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT bid "
 										+ "FROM Borrower "
@@ -132,9 +126,11 @@ public class ClerkUser {
 			ps.setString(7, sinOrStNo);
 
 			// TODO need to convert between JDBC and Oracle date types, doesn't run as is.
-			System.out.print("Borrower expiry date: ");  // Clerk should set to 2 years from today
-			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format dd-mm-yyyy format
-			ps.setDate(8, expiryDate);
+			System.out.print("Borrower expiry date (yyyy-mm-dd): ");  // Clerk should set to 2 years from today
+			//expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			//ps.setDate(8, expiryDate);
+			String date = Main.in.readLine();
+			ps.setString(8, date);
 
 			System.out.print("Borrower type: ");
 			type = Main.in.readLine();
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index b22012e..0a02096 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -101,7 +101,6 @@ public class LibrarianUser {
 	private static void addNewBook() {
 
 		// attributes of new book
-		int                callNumber;
 		String 	           isbn;
 		String             title;
 		String             mainAuthor;
@@ -121,17 +120,12 @@ public class LibrarianUser {
 
 		try {
 
-			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (?,?,?,?,?,?)");
-			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?)");
-			ps3 = Main.con.prepareStatement("INSERT INTO HasSubject VALUES (?,?)");
-			ps4 = Main.con.prepareStatement("INSERT INTO HasAuthor VALUES (?,?)");
+			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (bid_c.nextval,?,?,?,?,?)");
+			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (bid_c.nextval,?,?)");
+			ps3 = Main.con.prepareStatement("INSERT INTO HasSubject VALUES (bid_c.nextval,?)");
+			ps4 = Main.con.prepareStatement("INSERT INTO HasAuthor VALUES (bid_c,?)");
 
 			// new book
-			// TODO use a sequence 
-			System.out.print("Book call number: ");
-			callNumber = Integer.parseInt(Main.in.readLine());
-			ps1.setInt(1, callNumber);
-
 			System.out.print("Book ISBN: ");
 			isbn = Main.in.readLine();
 
@@ -171,7 +165,6 @@ public class LibrarianUser {
 
 
 			// new book copy
-			ps2.setInt(1, callNumber);
 			ps2.setInt(2, 1);
 			ps2.setString(3, "in");
 			
@@ -183,9 +176,7 @@ public class LibrarianUser {
 			String temp = Main.in.readLine();
 			subjects = Arrays.asList(temp.split(","));
 
-			for (String subject : subjects) {
-				ps3.setInt(1, callNumber);
-				
+			for (String subject : subjects) {				
 				if (subject.length() == 0) {
 					ps3.setString(2, null);
 				} else {
@@ -203,9 +194,7 @@ public class LibrarianUser {
 			if (temp2.length() != 0) {
 				authors = Arrays.asList(temp2.split(","));
 				
-				for (String author: authors) {
-					ps4.setInt(1, callNumber);
-					
+				for (String author: authors) {					
 					if (author.length() == 0) {
 						ps4.setString(2, null);
 					} else {
@@ -247,7 +236,6 @@ public class LibrarianUser {
 	}
 
 	private static void addNewBookCopy() {
-		// TODO Auto-generated method stub
 
 		// attributes of new copy
 		int                callNumber = 0;
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 356b1ad..836e9a8 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -9,6 +9,27 @@ drop table Borrower;
 drop table BorrowerType;
 
 
+create sequence bid_c
+	start with 1000 
+	increment by 1;
+	
+create sequence callNumber_c
+	start with 1000
+	increment by 1;
+	
+create sequence hid_c
+	start with 1000
+	increment by 1;
+	
+create sequence borid_c
+	start with 1000
+	increment by 1;
+	
+create sequence fid_c
+	start with 1000
+	increment by 1;
+
+
 create table BorrowerType
 	(type varchar(10) not null PRIMARY KEY,
 	bookTimeLimit integer null);

commit 2a1cbc2a1017d472de064839f3214b8e6ca4356a
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 18:08:38 2014 -0700

    Changed bid to integer, changed bid types in table.sql to integer too.

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index b2315e9..211f82a 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -376,7 +376,7 @@ public class BorrowerUser {
 	 * the hold requests that have been placed by the borrower.
 	 */
 	private static void checkAccount() {
-		String userBid;
+		int userBid;
 
 		String title;
 		String isbn;
@@ -390,7 +390,7 @@ public class BorrowerUser {
 
 		try {
 			System.out.printf("Put your Borrower ID: ");
-			userBid = Main.in.readLine(); //TODO: I should put constraint.
+			userBid = Integer.parseInt(Main.in.readLine()); //TODO: I should put constraint.
 
 			stmt = Main.con.createStatement();
 
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 1881716..5f552ee 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -90,15 +90,15 @@ insert into BorrowerType values
 
 
 insert into Borrower values
-('12345678', 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '12345678', '2015-09-09', 'faculty');
+(12345678, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '12345678', '2015-09-09', 'faculty');
 insert into Borrower values
-('56781234', 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '12345678', '2014-09-09', 'staff');
+(56781234, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '12345678', '2014-09-09', 'staff');
 insert into Borrower values
-('87654321', 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '12345678', '2015-12-12', 'general');
+(87654321, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '12345678', '2015-12-12', 'general');
 insert into Borrower values
-('11111111', 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '12345678', '2015-09-09', 'staff');
+(11111111, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '12345678', '2015-09-09', 'staff');
 insert into Borrower values
-('22222222', 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
+(22222222, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
 
 insert into Book values
 (1500, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
@@ -127,13 +127,13 @@ insert into HasSubject values
 (1000, 'kindergarten');
 
 insert into Borrowing values
-('11111','12345678',1000,'2','2014-03-29',null);
+(11111, 12345678, 1000, 2,'2014-03-29',null);
 insert into Borrowing values
-('22222','12345678',1000,'1','2014-02-22','2014-03-29');
+(22222, 12345678, 1000, 1,'2014-02-22','2014-03-29');
 insert into Borrowing values
-('33333','12345678',1000,'1','2014-01-29','2014-01-31');
+(33333, 12345678, 1000, 1,'2014-01-29','2014-01-31');
 insert into Borrowing values
-('44444','12345678',1000,'1','2013-09-01','2013-10-10');
+(44444, 12345678, 1000, 1,'2013-09-01','2013-10-10');
 
 insert into HoldRequest values
-('1111','12345678',1000, '2014-03-30');
+(1111, 12345678, 1000, '2014-03-30');

commit 6c2b800185def9c839dfd6f880d9b3dfe28aa8fc
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 18:09:25 2014 -0700

    bid to integer

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 211f82a..e56fe50 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -386,7 +386,7 @@ public class BorrowerUser {
 		Date issuedDate;
 		Statement stmt;
 		ResultSet rs;
-
+		
 
 		try {
 			System.out.printf("Put your Borrower ID: ");

commit 310c9004a2e2bade418e3ae4e68cbabbc8feb057
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 18:11:26 2014 -0700

    merge conflicts

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index b2315e9..4b98a43 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -402,7 +402,6 @@ public class BorrowerUser {
 					+ "AND B.copyNo = C.copyNo AND C.callNumber = A.callNumber AND B.inDate IS NULL "
 					+ "AND D.bid=" + userBid
 					+ "ORDER BY A.title ASC");
-
 			// get info on ResultSet
 			ResultSetMetaData rsmd = rs.getMetaData();
 
@@ -460,8 +459,6 @@ public class BorrowerUser {
 			// get number of columns
 			numCols = rsmd.getColumnCount();
 
-			System.out.println(" ");
-
 			// display column names;
 			for (int i = 0; i < numCols; i++) {
 				// get column name and print it
@@ -511,8 +508,6 @@ public class BorrowerUser {
 			// get number of columns
 			numCols = rsmd.getColumnCount();
 
-			System.out.println(" ");
-
 			// display column names;
 			for (int i = 0; i < numCols; i++) {
 				// get column name and print it
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 1881716..e5df39f 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -127,13 +127,13 @@ insert into HasSubject values
 (1000, 'kindergarten');
 
 insert into Borrowing values
-('11111','12345678',1000,'2','2014-03-29',null);
+(11111,12345678,1000,2,'2014-03-29',null);
 insert into Borrowing values
-('22222','12345678',1000,'1','2014-02-22','2014-03-29');
+(22222,12345678,1000,1,'2014-02-22','2014-03-29');
 insert into Borrowing values
-('33333','12345678',1000,'1','2014-01-29','2014-01-31');
+(33333,12345678,1000,1,'2014-01-29','2014-01-31');
 insert into Borrowing values
-('44444','12345678',1000,'1','2013-09-01','2013-10-10');
+(44444,12345678,1000,1,'2013-09-01','2013-10-10');
 
 insert into HoldRequest values
-('1111','12345678',1000, '2014-03-30');
+(1111,12345678,1000, '2014-03-30');

commit 842b18f07afd075b1ab7bc05efd31a53c38e0b6f
Merge: 310c900 6c2b800
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 18:12:55 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam
    
    Conflicts:
    	Project Part III/table.sql

commit ccacffe43e1e5a676c5272f24d7b452aeb50d936
Merge: 90cc634 6c2b800
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 18:22:07 2014 -0700

    Merge remote-tracking branch 'origin/master'

commit bcfc0817d3ad3eda43a5906096544fa701526a30
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 18:47:41 2014 -0700

    Added bid constraint to checkAccount() in BorrowerUser.

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index e65bfc9..d3bb30f 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -383,19 +383,30 @@ public class BorrowerUser {
 		int amount;
 		int totalAmount = 0;
 		Date issuedDate;
-		Statement stmt;
-		ResultSet rs;
+		
+		Statement s;
 		
 
 		try {
-			System.out.printf("Put your Borrower ID: ");
-			userBid = Integer.parseInt(Main.in.readLine()); //TODO: I should put constraint.
+			s = Main.con.createStatement();
+			
+			System.out.printf("Please enter your Borrower ID: ");
+			userBid = Integer.parseInt(Main.in.readLine());
+			
+			// check that this is a valid Borrower account
+			ResultSet rs = s.executeQuery("SELECT * "
+										 + "FROM Borrower "
+										 + "WHERE bid=" + userBid);
+			if (rs.next() == false) {
+				System.out.println("This is not a valid borrower ID.");
+				s.close();
+				return;
+			}
 
-			stmt = Main.con.createStatement();
 
 			// query of title, isbn and mainAuthor when borrowing's inDate is null.
 			System.out.println("List of items you currently borrowed:");
-			rs = stmt.executeQuery("SELECT A.title, A.isbn, A.mainAuthor "
+			rs = s.executeQuery("SELECT A.title, A.isbn, A.mainAuthor "
 					+ "FROM Book A, Borrowing B, BookCopy C, Borrower D "
 					+ "WHERE B.bid = D.bid AND B.callNumber = C.callNumber "
 					+ "AND B.copyNo = C.copyNo AND C.callNumber = A.callNumber AND B.inDate IS NULL "
@@ -448,7 +459,7 @@ public class BorrowerUser {
 
 			//total outstanding fine
 			System.out.println("\nOutstanding fine:");
-			rs = stmt.executeQuery("SELECT A.amount, A.issuedDate, E.title "
+			rs = s.executeQuery("SELECT A.amount, A.issuedDate, E.title "
 					+ "FROM Fine A, Borrowing B, Borrower C, BookCopy D, Book E "
 					+ "WHERE A.borid=B.borid AND B.bid=C.bid AND D.callNumber=E.callNumber "
 					+ "AND B.callNumber=D.callNumber AND B.copyNo=D.copyNo "
@@ -500,7 +511,7 @@ public class BorrowerUser {
 
 			//Hold Request List
 			System.out.println("HOLD REQUEST LIST placed by you:");
-			rs = stmt.executeQuery("SELECT B.title, A.issuedDate "
+			rs = s.executeQuery("SELECT B.title, A.issuedDate "
 					+ "FROM HoldRequest A, Book B, Borrower C "
 					+ "WHERE A.callNumber=B.callNumber AND A.bid=C.bid "
 					+ "AND C.bid=" + userBid);
@@ -541,7 +552,7 @@ public class BorrowerUser {
 
 			// close the statement;
 			// the ResultSet will also be closed
-			stmt.close();
+			s.close();
 		} catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
 		} catch (IOException e) {

commit b2894d7a95f20e6fcd31dae1cb6e35d0bca769bb
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 19:27:22 2014 -0700

    Modified table.sql so that Book, BookCopy, HasSubject and HasAuthor
    inserts comply with integrity and participation constraints.
    
    Borrowing and HoldRequest inserts have not been modified yet.

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index d3bb30f..b35cc94 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -369,6 +369,7 @@ public class BorrowerUser {
 		}
 	}
 
+	
 	/*
 	 * Displays the items the borrower has currently borrowed and
 	 * not yet returned, any outstanding fines and 
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index f3ddcdc..ecf5fe2 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -121,31 +121,80 @@ insert into Borrower values
 insert into Borrower values
 (22222222, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
 
+
 insert into Book values
-(1500, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
+(100, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
 insert into Book values
-(2000, '02000000', 'Hi Database', 'Laks', 'SFU','2000');
+(200, '02000000', 'Hi Database', 'Laks', 'SFU','2000');
 insert into Book values
-(3000, '03000000', 'Advanced Data Structure and Algorithm', 'Michelle Ng', 'UBC','2008');
+(300, '03000000', 'Advanced Data Structures and Algorithms', 'Michelle Ng', 'UBC','2008');
 insert into Book values
-(4000, '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
+(400, '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
 insert into Book values
-(5000, '05000000', 'Hi C++', 'Laks', 'UBC','2014');
+(500, '05000000', 'Hi C++', 'Laks', 'UBC','2014');
 insert into Book values
-(6000, '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
+(600, '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
 insert into Book values
-(1000, '123456789', 'ABCs', 'Sammy Foo', 'Foo Readers', 2000);
+(999, '123456789', 'ABCs', 'Sammy', 'Foo Readers', 2000);
 
 
 insert into BookCopy values
-(1000, 1, 'in');
+(100, 1, 'out');
+insert into BookCopy values
+(200, 1, 'on hold');
+insert into BookCopy values
+(300, 1, 'out');
+insert into BookCopy values
+(300, 2, 'on hold');
+insert into BookCopy values
+(400, 1, 'in');
+insert into BookCopy values
+(500, 1, 'in');
 insert into BookCopy values
-(1000, 2, 'out');
+(500, 1, 'in');
 insert into BookCopy values
-(1000, 3, 'on hold');
+(600, 1, 'out');
+insert into BookCopy values
+(999, 1, 'in');
+insert into BookCopy values
+(999, 2, 'out');
+insert into BookCopy values
+(999, 3, 'on hold');
+
+
+insert into HasAuthor values
+(200, 'Gregor');
+insert into HasAuthor values
+(200, 'Mike');
+insert into HasAuthor values
+(500, 'Patrice');
+insert into HasAuthor values
+(999, 'Bobby');
+
 
 insert into HasSubject values
-(1000, 'kindergarten');
+(100, 'java');
+insert into HasSubject values
+(100, 'computer');
+insert into HasSubject values
+(200, 'database');
+insert into HasSubject values
+(200, 'computer');
+insert into HasSubject values
+(300, 'computer');
+insert into HasSubject values
+(400, 'computer');
+insert into HasSubject values
+(500, 'c++');
+insert into HasSubject values
+(500, 'computer');
+insert into HasSubject values
+(600, 'computer');
+insert into HasSubject values
+(999, 'kindergarten');
+insert into HasSubject values
+(999, 'letters');
+
 
 insert into Borrowing values
 (11111, 12345678, 1000, 2,'2014-03-29',null);

commit 777610df00be47d07bd24779dfd4c29d4384ed9d
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sat Mar 29 20:04:25 2014 -0700

    checkoutitem first version

diff --git a/Project_Part_III/src/users/BorrowerUser.java b/Project_Part_III/src/users/BorrowerUser.java
new file mode 100644
index 0000000..2db0b86
--- /dev/null
+++ b/Project_Part_III/src/users/BorrowerUser.java
@@ -0,0 +1,181 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+
+public class BorrowerUser {
+
+	/*
+	 * Loads borrower's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Book search\n");
+				//System.out.print("2.  Check account\n");
+				//System.out.print("3.  Place a hold request\n");
+				//System.out.print("4.  Pay fines\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch(choice) {
+				case 1:  searchBook(); break;
+				case 2:  ; break; // TODO checkAccount()
+				case 3:  ; break; // TODO requestHold()
+				case 4:  ; break; // TODO payFine()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+			
+		}
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Keyword book search on titles, authors, and/or subjects.
+	 */
+	private static void searchBook() {
+		// TODO Auto-generated method stub
+
+		// Search by title or author or subject
+		int choice;
+
+		try {
+			System.out.print("\n\nPlease choose one of the following to search by: \n");
+			System.out.print("1.  Title\n");
+			System.out.print("2.  Author\n");
+			System.out.print("3.  Subject\n");
+			System.out.print("4.  Back\n>>");
+
+			choice = Integer.parseInt(Main.in.readLine());
+
+			System.out.println(" ");
+
+			switch (choice) {
+			case 1:  searchBookByTitle(); break;
+			case 2:  searchBookByAuthor(); break;
+			case 3:  searchBookBySubject(); break;
+			case 4:  return;
+			}
+		}
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+	}
+
+	private static void searchBookByTitle() {		
+		String             sTitle;
+		Statement          s;
+
+		try {
+			System.out.print("\n Title keyword: ");
+			sTitle = Main.in.readLine();
+
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT B.callNumber, B.isbn, B.title, B.mainAuthor, C.copyNo, c.status"
+										+ "FROM HasAuthor A, Book B, BookCopy C"
+										+ "WHERE B.callNumber = C.callNumber AND B.callNumber = A.callNumber AND B.title LIKE '%" + sTitle + "%'"
+										+ "GROUP BY B.callNumber");
+
+			// TODO How to get # of copies in or out of library?
+			int           callNumber = 0;
+			String        isbn = null;
+			String        title = null;
+			String        mainAuthor = null;
+			int           copyNo = 0;
+			String        status = null;
+			
+			// keep track of book copies
+			int inLib = 0;
+			int outLib = 0;
+
+			while (rs.next()) {
+				// if this callNumber same as previous tuple's, 
+				// only difference in fields are copyNo and status
+				if (rs.getInt(1) == callNumber) {
+					if (rs.getString(5).equalsIgnoreCase("in")) {
+						inLib++;
+					}
+					else {
+						outLib++;
+					}
+				}
+				// if not the same callNumber as previous tuple
+				// must be next book (because of use of GROUP BY in query)
+				else {
+					// first print out previous book
+					System.out.println("Call number: " + callNumber + "\n"
+									+ "ISBN: " + isbn + "\n"
+									+ "Title: " + title + "\n"
+									+ "Main Author: " + mainAuthor + "\n"
+									+ "Copies in library: " + inLib + "\n"
+									+ "Copies out of library or on hold: " + outLib + "\n\n");
+					
+					// then reset copy counters
+					inLib = 0;  outLib = 0;
+					
+					// then parse in the new book
+					callNumber = rs.getInt(1);
+					isbn = rs.getString(2);
+					title = rs.getString(3);
+					mainAuthor = rs.getString(4);
+					copyNo = rs.getInt(5);
+					status = rs.getString(5);
+				}
+			}
+
+		}
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+	private static void searchBookByAuthor() {
+		// TODO Auto-generated method stub
+
+	}
+
+	private static void searchBookBySubject() {
+		// TODO Auto-generated method stub
+
+	}
+}
diff --git a/Project_Part_III/src/users/ClerkUser.java b/Project_Part_III/src/users/ClerkUser.java
new file mode 100644
index 0000000..77ee3dd
--- /dev/null
+++ b/Project_Part_III/src/users/ClerkUser.java
@@ -0,0 +1,352 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
diff --git a/Project_Part_III/src/users/LibrarianUser.java b/Project_Part_III/src/users/LibrarianUser.java
new file mode 100644
index 0000000..2c568e5
--- /dev/null
+++ b/Project_Part_III/src/users/LibrarianUser.java
@@ -0,0 +1,140 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+
+public class LibrarianUser {
+
+	/*
+	 * Loads librarian's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add book\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBook(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex)	{
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new book to the library.
+	 * Librarian should provide all info for book.
+	 */
+	private static void addBook() {
+		int                callNumber;
+		String 	           isbn;
+		String             title;
+		String             mainAuthor;
+		String             publisher;
+		int                year;
+		int                copyNo;
+
+		PreparedStatement  ps1;  // for adding Book
+		PreparedStatement  ps2;  // for adding BookCopies
+
+		try {
+			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (?,?,?,?,?,?)");
+			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?)");
+
+			System.out.print("\n Book call number: ");
+			callNumber = Integer.parseInt(Main.in.readLine());
+			ps1.setInt(1, callNumber);
+
+			System.out.print("\n Book isbn: ");
+			isbn = Main.in.readLine();
+			ps1.setString(2, isbn);
+
+			System.out.print("\n Book title: ");
+			title = Main.in.readLine();
+			ps1.setString(3, title);
+
+			System.out.print("\n Book main author: ");
+			mainAuthor = Main.in.readLine();
+			ps1.setString(4, mainAuthor);
+
+			System.out.print("\n Book publisher: ");
+			publisher = Main.in.readLine();
+			ps1.setString(5,  publisher);
+
+			System.out.print("\n Book published year: ");
+			year = Integer.parseInt(Main.in.readLine());
+			ps1.setInt(6, year);
+
+			System.out.print("\n Book number of copies: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+
+			ps1.executeUpdate();
+			for (int i = 1; i <= copyNo; i++) {
+				ps2.setInt(1, callNumber);
+				ps2.setInt(2, i);
+				ps2.setString(3, "in");
+
+				ps2.executeUpdate();
+			}
+			// commit work 
+			Main.con.commit();
+			ps1.close();
+			ps2.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+}

commit faf04c3cfa3f631e74cd3415125666a4ce6a36b6
Merge: 777610d b2894d7
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sat Mar 29 20:06:33 2014 -0700

    merge

commit cc65c6a24dbf8d00fcdf841e08ea8696b4521e12
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sat Mar 29 20:26:35 2014 -0700

    recommit

diff --git a/.DS_Store b/.DS_Store
new file mode 100644
index 0000000..5008ddf
Binary files /dev/null and b/.DS_Store differ
diff --git a/.metadata/.log b/.metadata/.log
index 5eb0d3f..a5d6c8e 100644
--- a/.metadata/.log
+++ b/.metadata/.log
@@ -8,3 +8,67 @@ Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.
 
 !ENTRY org.eclipse.core.net 1 0 2014-03-24 12:25:26.806
 !MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
+
+!ENTRY org.eclipse.ui 4 0 2014-03-29 20:20:56.876
+!MESSAGE Unhandled event loop exception
+!STACK 0
+java.lang.ClassCastException: java.lang.IndexOutOfBoundsException cannot be cast to org.eclipse.core.runtime.CoreException
+	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaApplicationLaunchShortcut.findTypes(JavaApplicationLaunchShortcut.java:134)
+	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut.searchAndLaunch(JavaLaunchShortcut.java:112)
+	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut.launch(JavaLaunchShortcut.java:277)
+	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.launch(LaunchShortcutExtension.java:434)
+	at org.eclipse.debug.internal.ui.actions.LaunchShortcutAction.run(LaunchShortcutAction.java:73)
+	at org.eclipse.debug.internal.ui.actions.LaunchShortcutAction.runWithEvent(LaunchShortcutAction.java:121)
+	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584)
+	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501)
+	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411)
+	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
+	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4166)
+	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
+	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1489)
+	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1474)
+	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1279)
+	at org.eclipse.jface.action.ActionContributionItem$9.handleEvent(ActionContributionItem.java:1284)
+	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
+	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4166)
+	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
+	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1489)
+	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1474)
+	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1279)
+	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4012)
+	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3651)
+	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
+	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
+	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
+	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
+	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
+	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
+	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
+	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
+	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
+	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
+	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
+	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
+	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
+	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
+	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
+	at java.lang.reflect.Method.invoke(Method.java:606)
+	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
+	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
+	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
+
+!ENTRY org.eclipse.jdt.core 4 4 2014-03-29 20:25:37.511
+!MESSAGE Background Indexer Crash Recovery
+!STACK 0
+java.lang.StringIndexOutOfBoundsException: String index out of range: 0
+	at java.lang.String.charAt(String.java:658)
+	at org.eclipse.jdt.internal.core.index.DiskIndex.writeAllDocumentNames(DiskIndex.java:1032)
+	at org.eclipse.jdt.internal.core.index.DiskIndex.mergeWith(DiskIndex.java:531)
+	at org.eclipse.jdt.internal.core.index.Index.save(Index.java:197)
+	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndex(IndexManager.java:859)
+	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndexes(IndexManager.java:901)
+	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.notifyIdle(IndexManager.java:618)
+	at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:388)
+	at java.lang.Thread.run(Thread.java:724)
diff --git a/.metadata/.plugins/com.google.gwt.eclipse.core/uiBinderReferences b/.metadata/.plugins/com.google.gwt.eclipse.core/uiBinderReferences
new file mode 100644
index 0000000..25df3bc
--- /dev/null
+++ b/.metadata/.plugins/com.google.gwt.eclipse.core/uiBinderReferences
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<uiBinderReferences>
+<referenceManager>
+<references/>
+</referenceManager>
+<uiBinderSubtypeToOwner/>
+<uiBinderSubtypeToUiXml/>
+<uiXmlReferencedFields/>
+</uiBinderReferences>
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/1a/e0706feab3b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/1a/e0706feab3b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..4e3e047
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/1a/e0706feab3b600131d4c9f1dfbb6ab58
@@ -0,0 +1,520 @@
+
+// We need to import the java.sql package to use JDBC
+import java.sql.*;
+
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1522:ug"; 
+
+      try 
+      {
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/1b/f0eb024ab8b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/1b/f0eb024ab8b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..f3dc5a1
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/1b/f0eb024ab8b600131d4c9f1dfbb6ab58
@@ -0,0 +1,254 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1521:ug"; 
+		System.out.println(connectURL);
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+//		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/20/50ad2cf6bab700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/20/50ad2cf6bab700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..ffe54be
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/20/50ad2cf6bab700131d4c9f1dfbb6ab58
@@ -0,0 +1,167 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		
+		// attributes of new borrower
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		String             sinOrStNo;
+		Date               expiryDate;
+		String             type;
+		
+		Statement          s;   // to check if borrower already exists in database
+
+		PreparedStatement  ps;  // to add new borrower
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (bid_c.nextval,?,?,?,?,?,?,{d ?},?)");
+
+			System.out.print("Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("Borrower SIN or student number: ");
+			sinOrStNo = Main.in.readLine();
+			
+			// check if this borrower already in database
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE sinOrStNo=" + sinOrStNo);
+			if (rs.next()) {
+				System.out.println("An account for this borrower already exists in the library database.");
+				s.close();
+				ps.close();
+				return;
+			}
+			
+			ps.setString(7, sinOrStNo);
+
+			// TODO need to convert between JDBC and Oracle date types, doesn't run as is.
+			System.out.print("Borrower expiry date (yyyy-mm-dd): ");  // Clerk should set to 2 years from today
+			//expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			//ps.setDate(8, expiryDate);
+			String date = Main.in.readLine();
+			ps.setString(8, date);
+
+			System.out.print("Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			// add borrower
+			ps.executeUpdate();
+			
+			// commit work 
+			Main.con.commit();
+			System.out.println("Borrower has been added successfully.");
+			
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/26/a0c13fabb6b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/26/a0c13fabb6b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..e69e5f6
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/26/a0c13fabb6b700131d4c9f1dfbb6ab58
@@ -0,0 +1,352 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/2b/50e44d1faeb600131d39c921b502693d b/.metadata/.plugins/org.eclipse.core.resources/.history/2b/50e44d1faeb600131d39c921b502693d
new file mode 100644
index 0000000..1727581
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/2b/50e44d1faeb600131d39c921b502693d
@@ -0,0 +1,253 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/3d/90de3d82b7b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/3d/90de3d82b7b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..a42fa7c
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/3d/90de3d82b7b600131d4c9f1dfbb6ab58
@@ -0,0 +1,256 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+		System.out.println(connectURL);
+
+		try 
+		{
+			System.out.println("trying");
+			con = DriverManager.getConnection(connectURL,username,password);
+			System.out.println("did it");
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+//		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/4/f0875418acb600131d39c921b502693d b/.metadata/.plugins/org.eclipse.core.resources/.history/4/f0875418acb600131d39c921b502693d
new file mode 100644
index 0000000..c15bb85
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/4/f0875418acb600131d39c921b502693d
@@ -0,0 +1 @@
+/gui
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/4d/50099d72b3b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/4d/50099d72b3b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..483e597
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/4d/50099d72b3b700131d4c9f1dfbb6ab58
@@ -0,0 +1,314 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		GregorianCalendar gregCalendar = new GregorianCalendar();
+		gregCalendar.add(Calendar.DATE, 0);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/4f/50586291b2b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/4f/50586291b2b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..038eaf7
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/4f/50586291b2b700131d4c9f1dfbb6ab58
@@ -0,0 +1,315 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+				System.out.println("Due Date: " + getDueDate(bid, )
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate));
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		GregorianCalendar gregCalendar = new GregorianCalendar();
+		gregCalendar.add(Calendar.DATE, 0);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/4f/b0edbaa9b6b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/4f/b0edbaa9b6b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..c15bb85
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/4f/b0edbaa9b6b600131d4c9f1dfbb6ab58
@@ -0,0 +1 @@
+/gui
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/5a/8064ad0cb6b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/5a/8064ad0cb6b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..ad901ea
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/5a/8064ad0cb6b600131d4c9f1dfbb6ab58
@@ -0,0 +1,596 @@
+
+// We need to import the java.sql package to use JDBC
+import gui.Main;
+
+import java.sql.*;
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1521:ug"; 
+
+      try 
+      {
+    	  System.out.println(username);
+    	  System.out.println(password);
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
+private static void checkoutBorrower() {
+	int                bid;
+	int 			   borid;
+	int   			   callNumber;
+	int 			   copyNo;
+	int 			   outDate;
+	int 			   inDate;
+
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+		System.out.print("\n Borrower ID: ");
+		bid = Integer.parseInt(Main.in.readLine());
+		ps.setInt(1, bid);
+
+		System.out.print("\n Borrower password: ");
+		password = Main.in.readLine();
+		ps.setString(2, password);
+
+		System.out.print("\n Borrower name: ");
+		name = Main.in.readLine();
+		ps.setString(3, name);
+
+		System.out.print("\n Borrower address: ");
+		address = Main.in.readLine();
+		ps.setString(4, address);
+
+		System.out.print("\n Borrower phone number: ");
+		phone = Main.in.readLine();
+		ps.setString(5,  phone);
+
+		System.out.print("\n Borrower email address: ");
+		emailAddress = Main.in.readLine();
+		ps.setString(6, emailAddress);
+
+		System.out.print("\n Borrower SIN or student number: ");
+		sinOrStNo = Integer.parseInt(Main.in.readLine());
+		ps.setInt(7, sinOrStNo);
+
+		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+		ps.setDate(8, expiryDate);
+
+		System.out.print("\n Borrower type: ");
+		type = Main.in.readLine();
+		ps.setString(9, type);
+
+		ps.executeUpdate();
+		// commit work 
+		Main.con.commit();
+		ps.close();
+	}
+
+	catch (IOException e) {
+		System.out.println("IOException!");
+	}
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/70/9016a08ab5b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/70/9016a08ab5b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..fa34828
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/70/9016a08ab5b600131d4c9f1dfbb6ab58
@@ -0,0 +1,594 @@
+
+// We need to import the java.sql package to use JDBC
+import gui.Main;
+
+import java.sql.*;
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+      String connectURL = "jdbc:oracle:thin:@//dbhost.ugrad.cs.ubc.ca:1522/ug"; 
+
+      try 
+      {
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
+private static void checkoutBorrower() {
+	int                bid;
+	int 			   borid;
+	int   			   callNumber;
+	int 			   copyNo;
+	int 			   outDate;
+	int 			   inDate;
+
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+		System.out.print("\n Borrower ID: ");
+		bid = Integer.parseInt(Main.in.readLine());
+		ps.setInt(1, bid);
+
+		System.out.print("\n Borrower password: ");
+		password = Main.in.readLine();
+		ps.setString(2, password);
+
+		System.out.print("\n Borrower name: ");
+		name = Main.in.readLine();
+		ps.setString(3, name);
+
+		System.out.print("\n Borrower address: ");
+		address = Main.in.readLine();
+		ps.setString(4, address);
+
+		System.out.print("\n Borrower phone number: ");
+		phone = Main.in.readLine();
+		ps.setString(5,  phone);
+
+		System.out.print("\n Borrower email address: ");
+		emailAddress = Main.in.readLine();
+		ps.setString(6, emailAddress);
+
+		System.out.print("\n Borrower SIN or student number: ");
+		sinOrStNo = Integer.parseInt(Main.in.readLine());
+		ps.setInt(7, sinOrStNo);
+
+		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+		ps.setDate(8, expiryDate);
+
+		System.out.print("\n Borrower type: ");
+		type = Main.in.readLine();
+		ps.setString(9, type);
+
+		ps.executeUpdate();
+		// commit work 
+		Main.con.commit();
+		ps.close();
+	}
+
+	catch (IOException e) {
+		System.out.println("IOException!");
+	}
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/71/60f2f909b8b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/71/60f2f909b8b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..91e2af3
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/71/60f2f909b8b600131d4c9f1dfbb6ab58
@@ -0,0 +1,255 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1522:ug"; 
+		System.out.println(connectURL);
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+			System.out.println("did it");
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+//		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/80/20594235aeb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/80/20594235aeb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..e35da24
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/80/20594235aeb700131d4c9f1dfbb6ab58
@@ -0,0 +1,327 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				
+				
+			}
+			
+		}
+		
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/87/f07a6469b7b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/87/f07a6469b7b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..914c340
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/87/f07a6469b7b600131d4c9f1dfbb6ab58
@@ -0,0 +1,255 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		System.out.println(username);
+		System.out.println(password);
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+//		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/89/b0923824b5b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/89/b0923824b5b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..16e6d4e
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/89/b0923824b5b600131d4c9f1dfbb6ab58
@@ -0,0 +1,594 @@
+
+// We need to import the java.sql package to use JDBC
+import gui.Main;
+
+import java.sql.*;
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1522:ug"; 
+
+      try 
+      {
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
+private static void checkoutBorrower() {
+	int                bid;
+	int 			   borid;
+	int   			   callNumber;
+	int 			   copyNo;
+	int 			   outDate;
+	int 			   inDate;
+
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+		System.out.print("\n Borrower ID: ");
+		bid = Integer.parseInt(Main.in.readLine());
+		ps.setInt(1, bid);
+
+		System.out.print("\n Borrower password: ");
+		password = Main.in.readLine();
+		ps.setString(2, password);
+
+		System.out.print("\n Borrower name: ");
+		name = Main.in.readLine();
+		ps.setString(3, name);
+
+		System.out.print("\n Borrower address: ");
+		address = Main.in.readLine();
+		ps.setString(4, address);
+
+		System.out.print("\n Borrower phone number: ");
+		phone = Main.in.readLine();
+		ps.setString(5,  phone);
+
+		System.out.print("\n Borrower email address: ");
+		emailAddress = Main.in.readLine();
+		ps.setString(6, emailAddress);
+
+		System.out.print("\n Borrower SIN or student number: ");
+		sinOrStNo = Integer.parseInt(Main.in.readLine());
+		ps.setInt(7, sinOrStNo);
+
+		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+		ps.setDate(8, expiryDate);
+
+		System.out.print("\n Borrower type: ");
+		type = Main.in.readLine();
+		ps.setString(9, type);
+
+		ps.executeUpdate();
+		// commit work 
+		Main.con.commit();
+		ps.close();
+	}
+
+	catch (IOException e) {
+		System.out.println("IOException!");
+	}
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/8a/d0e91631acb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/8a/d0e91631acb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..de531a4
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/8a/d0e91631acb700131d4c9f1dfbb6ab58
@@ -0,0 +1,148 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/90/d0515eb6b4b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/90/d0515eb6b4b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..caa9c40
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/90/d0515eb6b4b600131d4c9f1dfbb6ab58
@@ -0,0 +1,594 @@
+
+// We need to import the java.sql package to use JDBC
+import gui.Main;
+
+import java.sql.*;
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1521:ug"; 
+
+      try 
+      {
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
+private static void checkoutBorrower() {
+	int                bid;
+	int 			   borid;
+	int   			   callNumber;
+	int 			   copyNo;
+	int 			   outDate;
+	int 			   inDate;
+
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+		System.out.print("\n Borrower ID: ");
+		bid = Integer.parseInt(Main.in.readLine());
+		ps.setInt(1, bid);
+
+		System.out.print("\n Borrower password: ");
+		password = Main.in.readLine();
+		ps.setString(2, password);
+
+		System.out.print("\n Borrower name: ");
+		name = Main.in.readLine();
+		ps.setString(3, name);
+
+		System.out.print("\n Borrower address: ");
+		address = Main.in.readLine();
+		ps.setString(4, address);
+
+		System.out.print("\n Borrower phone number: ");
+		phone = Main.in.readLine();
+		ps.setString(5,  phone);
+
+		System.out.print("\n Borrower email address: ");
+		emailAddress = Main.in.readLine();
+		ps.setString(6, emailAddress);
+
+		System.out.print("\n Borrower SIN or student number: ");
+		sinOrStNo = Integer.parseInt(Main.in.readLine());
+		ps.setInt(7, sinOrStNo);
+
+		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+		ps.setDate(8, expiryDate);
+
+		System.out.print("\n Borrower type: ");
+		type = Main.in.readLine();
+		ps.setString(9, type);
+
+		ps.executeUpdate();
+		// commit work 
+		Main.con.commit();
+		ps.close();
+	}
+
+	catch (IOException e) {
+		System.out.println("IOException!");
+	}
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/92/407e6bdbb7b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/92/407e6bdbb7b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..c15bb85
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/92/407e6bdbb7b700131d4c9f1dfbb6ab58
@@ -0,0 +1 @@
+/gui
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/93/20d871a0b8b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/93/20d871a0b8b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..c00aa1c
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/93/20d871a0b8b600131d4c9f1dfbb6ab58
@@ -0,0 +1,254 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+		System.out.println(connectURL);
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+//		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/93/501e3743adb600131d39c921b502693d b/.metadata/.plugins/org.eclipse.core.resources/.history/93/501e3743adb600131d39c921b502693d
new file mode 100644
index 0000000..ad17259
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/93/501e3743adb600131d39c921b502693d
@@ -0,0 +1,252 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/9a/0087d35cb1b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/9a/0087d35cb1b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..fa4e77b
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/9a/0087d35cb1b600131d4c9f1dfbb6ab58
@@ -0,0 +1,147 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String                phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/9d/e0270b7ab2b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/9d/e0270b7ab2b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..695ebc0
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/9d/e0270b7ab2b700131d4c9f1dfbb6ab58
@@ -0,0 +1,305 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				
+				
+			}
+			
+		}
+		
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/a7/0069d83eb6b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/a7/0069d83eb6b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..44c407b
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/a7/0069d83eb6b600131d4c9f1dfbb6ab58
@@ -0,0 +1,597 @@
+
+// We need to import the java.sql package to use JDBC
+import gui.Main;
+
+import java.sql.*;
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+    	  System.out.println(username);
+    	  System.out.println(password);
+
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1521:ug"; 
+
+      try 
+      {
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
+private static void checkoutBorrower() {
+	int                bid;
+	int 			   borid;
+	int   			   callNumber;
+	int 			   copyNo;
+	int 			   outDate;
+	int 			   inDate;
+
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+		System.out.print("\n Borrower ID: ");
+		bid = Integer.parseInt(Main.in.readLine());
+		ps.setInt(1, bid);
+
+		System.out.print("\n Borrower password: ");
+		password = Main.in.readLine();
+		ps.setString(2, password);
+
+		System.out.print("\n Borrower name: ");
+		name = Main.in.readLine();
+		ps.setString(3, name);
+
+		System.out.print("\n Borrower address: ");
+		address = Main.in.readLine();
+		ps.setString(4, address);
+
+		System.out.print("\n Borrower phone number: ");
+		phone = Main.in.readLine();
+		ps.setString(5,  phone);
+
+		System.out.print("\n Borrower email address: ");
+		emailAddress = Main.in.readLine();
+		ps.setString(6, emailAddress);
+
+		System.out.print("\n Borrower SIN or student number: ");
+		sinOrStNo = Integer.parseInt(Main.in.readLine());
+		ps.setInt(7, sinOrStNo);
+
+		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+		ps.setDate(8, expiryDate);
+
+		System.out.print("\n Borrower type: ");
+		type = Main.in.readLine();
+		ps.setString(9, type);
+
+		ps.executeUpdate();
+		// commit work 
+		Main.con.commit();
+		ps.close();
+	}
+
+	catch (IOException e) {
+		System.out.println("IOException!");
+	}
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/aa/0011aadfb4b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/aa/0011aadfb4b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..b10b6c4
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/aa/0011aadfb4b600131d4c9f1dfbb6ab58
@@ -0,0 +1,594 @@
+
+// We need to import the java.sql package to use JDBC
+import gui.Main;
+
+import java.sql.*;
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1510:ug"; 
+
+      try 
+      {
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
+private static void checkoutBorrower() {
+	int                bid;
+	int 			   borid;
+	int   			   callNumber;
+	int 			   copyNo;
+	int 			   outDate;
+	int 			   inDate;
+
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+		System.out.print("\n Borrower ID: ");
+		bid = Integer.parseInt(Main.in.readLine());
+		ps.setInt(1, bid);
+
+		System.out.print("\n Borrower password: ");
+		password = Main.in.readLine();
+		ps.setString(2, password);
+
+		System.out.print("\n Borrower name: ");
+		name = Main.in.readLine();
+		ps.setString(3, name);
+
+		System.out.print("\n Borrower address: ");
+		address = Main.in.readLine();
+		ps.setString(4, address);
+
+		System.out.print("\n Borrower phone number: ");
+		phone = Main.in.readLine();
+		ps.setString(5,  phone);
+
+		System.out.print("\n Borrower email address: ");
+		emailAddress = Main.in.readLine();
+		ps.setString(6, emailAddress);
+
+		System.out.print("\n Borrower SIN or student number: ");
+		sinOrStNo = Integer.parseInt(Main.in.readLine());
+		ps.setInt(7, sinOrStNo);
+
+		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+		ps.setDate(8, expiryDate);
+
+		System.out.print("\n Borrower type: ");
+		type = Main.in.readLine();
+		ps.setString(9, type);
+
+		ps.executeUpdate();
+		// commit work 
+		Main.con.commit();
+		ps.close();
+	}
+
+	catch (IOException e) {
+		System.out.println("IOException!");
+	}
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/ab/401a01e6b3b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/ab/401a01e6b3b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..9757253
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/ab/401a01e6b3b600131d4c9f1dfbb6ab58
@@ -0,0 +1,222 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkoutBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String                phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/b/b0614f19b7b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/b/b0614f19b7b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..a8322a0
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/b/b0614f19b7b600131d4c9f1dfbb6ab58
@@ -0,0 +1,254 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		System.out.println("I'm here");
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+//		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/b1/50c8ed78b2b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/b1/50c8ed78b2b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..f42de36
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/b1/50c8ed78b2b600131d4c9f1dfbb6ab58
@@ -0,0 +1,7 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
+org.eclipse.jdt.core.compiler.compliance=1.7
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.7
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/b5/00485a94b4b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/b5/00485a94b4b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..16e6d4e
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/b5/00485a94b4b600131d4c9f1dfbb6ab58
@@ -0,0 +1,594 @@
+
+// We need to import the java.sql package to use JDBC
+import gui.Main;
+
+import java.sql.*;
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1522:ug"; 
+
+      try 
+      {
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
+private static void checkoutBorrower() {
+	int                bid;
+	int 			   borid;
+	int   			   callNumber;
+	int 			   copyNo;
+	int 			   outDate;
+	int 			   inDate;
+
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+		System.out.print("\n Borrower ID: ");
+		bid = Integer.parseInt(Main.in.readLine());
+		ps.setInt(1, bid);
+
+		System.out.print("\n Borrower password: ");
+		password = Main.in.readLine();
+		ps.setString(2, password);
+
+		System.out.print("\n Borrower name: ");
+		name = Main.in.readLine();
+		ps.setString(3, name);
+
+		System.out.print("\n Borrower address: ");
+		address = Main.in.readLine();
+		ps.setString(4, address);
+
+		System.out.print("\n Borrower phone number: ");
+		phone = Main.in.readLine();
+		ps.setString(5,  phone);
+
+		System.out.print("\n Borrower email address: ");
+		emailAddress = Main.in.readLine();
+		ps.setString(6, emailAddress);
+
+		System.out.print("\n Borrower SIN or student number: ");
+		sinOrStNo = Integer.parseInt(Main.in.readLine());
+		ps.setInt(7, sinOrStNo);
+
+		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+		ps.setDate(8, expiryDate);
+
+		System.out.print("\n Borrower type: ");
+		type = Main.in.readLine();
+		ps.setString(9, type);
+
+		ps.executeUpdate();
+		// commit work 
+		Main.con.commit();
+		ps.close();
+	}
+
+	catch (IOException e) {
+		System.out.println("IOException!");
+	}
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/c4/2024a737aeb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/c4/2024a737aeb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..4b79238
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/c4/2024a737aeb700131d4c9f1dfbb6ab58
@@ -0,0 +1,307 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				
+				
+			}
+			
+		}
+		
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDate(int bid, int ){
+		
+	}
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/d/500684c2b6b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/d/500684c2b6b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..3214d42
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/d/500684c2b6b700131d4c9f1dfbb6ab58
@@ -0,0 +1,352 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/d9/b053a39bb6b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/d9/b053a39bb6b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..676d3b3
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/d9/b053a39bb6b700131d4c9f1dfbb6ab58
@@ -0,0 +1,350 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar();
+		gregCalendar.add(Calendar.DATE, 0);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/dd/8026f84daeb600131d39c921b502693d b/.metadata/.plugins/org.eclipse.core.resources/.history/dd/8026f84daeb600131d39c921b502693d
new file mode 100644
index 0000000..48f530c
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/dd/8026f84daeb600131d39c921b502693d
@@ -0,0 +1,253 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1521:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/e2/507aa583b6b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/e2/507aa583b6b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..b04bbc1
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/e2/507aa583b6b600131d4c9f1dfbb6ab58
@@ -0,0 +1,598 @@
+
+// We need to import the java.sql package to use JDBC
+import gui.Main;
+
+import java.sql.*;
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+    	  System.out.println(username);
+    	  System.out.println(password);
+
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+    	System.out.println("Trying to connect");
+      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1521:ug"; 
+
+      try 
+      {
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
+private static void checkoutBorrower() {
+	int                bid;
+	int 			   borid;
+	int   			   callNumber;
+	int 			   copyNo;
+	int 			   outDate;
+	int 			   inDate;
+
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+		System.out.print("\n Borrower ID: ");
+		bid = Integer.parseInt(Main.in.readLine());
+		ps.setInt(1, bid);
+
+		System.out.print("\n Borrower password: ");
+		password = Main.in.readLine();
+		ps.setString(2, password);
+
+		System.out.print("\n Borrower name: ");
+		name = Main.in.readLine();
+		ps.setString(3, name);
+
+		System.out.print("\n Borrower address: ");
+		address = Main.in.readLine();
+		ps.setString(4, address);
+
+		System.out.print("\n Borrower phone number: ");
+		phone = Main.in.readLine();
+		ps.setString(5,  phone);
+
+		System.out.print("\n Borrower email address: ");
+		emailAddress = Main.in.readLine();
+		ps.setString(6, emailAddress);
+
+		System.out.print("\n Borrower SIN or student number: ");
+		sinOrStNo = Integer.parseInt(Main.in.readLine());
+		ps.setInt(7, sinOrStNo);
+
+		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+		ps.setDate(8, expiryDate);
+
+		System.out.print("\n Borrower type: ");
+		type = Main.in.readLine();
+		ps.setString(9, type);
+
+		ps.executeUpdate();
+		// commit work 
+		Main.con.commit();
+		ps.close();
+	}
+
+	catch (IOException e) {
+		System.out.println("IOException!");
+	}
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/e6/70c3f9c5b6b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/e6/70c3f9c5b6b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..1727581
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/e6/70c3f9c5b6b600131d4c9f1dfbb6ab58
@@ -0,0 +1,253 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/e7/002656d6b6b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/e7/002656d6b6b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..ab50e6a
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/e7/002656d6b6b600131d4c9f1dfbb6ab58
@@ -0,0 +1,253 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+//		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/eb/70e3cfd9b6b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/eb/70e3cfd9b6b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..f199fde
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/eb/70e3cfd9b6b600131d4c9f1dfbb6ab58
@@ -0,0 +1,254 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		System.out.println("I'm here";)
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+//		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/ee/1096a6d2b7b600131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/ee/1096a6d2b7b600131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..1b91966
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/ee/1096a6d2b7b600131d4c9f1dfbb6ab58
@@ -0,0 +1,255 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1521:ug"; 
+		System.out.println(connectURL);
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+			System.out.println("did it");
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+//		ex.printStackTrace();
+		System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  ; break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.indexes/af/history.index b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.indexes/af/history.index
new file mode 100644
index 0000000..6b14808
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.indexes/af/history.index differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.indexes/history.index b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.indexes/history.index
new file mode 100644
index 0000000..f946ba8
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.indexes/history.index differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.markers.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.markers.snap
new file mode 100644
index 0000000..4eb4941
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.markers.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.syncinfo.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.syncinfo.snap
new file mode 100644
index 0000000..4eb4941
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.syncinfo.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/7/history.index b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/7/history.index
new file mode 100644
index 0000000..e0ff703
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/7/history.index differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/properties.index b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/properties.index
new file mode 100644
index 0000000..1e099f3
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/properties.index differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap
index 91d6c54..223fbff 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap
index 91d6c54..1253ec8 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/org.eclipse.egit.core/GitProjectData.properties b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/org.eclipse.egit.core/GitProjectData.properties
new file mode 100644
index 0000000..9ec4794
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/org.eclipse.egit.core/GitProjectData.properties	
@@ -0,0 +1,3 @@
+#GitProjectData
+#Sat Mar 29 20:03:22 PDT 2014
+.gitdir=../.git
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.root/.indexes/history.version b/.metadata/.plugins/org.eclipse.core.resources/.root/.indexes/history.version
new file mode 100644
index 0000000..25cb955
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.root/.indexes/history.version
@@ -0,0 +1 @@
+
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.root/.indexes/properties.version b/.metadata/.plugins/org.eclipse.core.resources/.root/.indexes/properties.version
new file mode 100644
index 0000000..6b2aaa7
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.root/.indexes/properties.version
@@ -0,0 +1 @@
+
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap b/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap
index 91d6c54..1253ec8 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap and b/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.root/3.tree b/.metadata/.plugins/org.eclipse.core.resources/.root/3.tree
new file mode 100644
index 0000000..f6d25d6
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.root/3.tree differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources b/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources
index 0888ae8..917ee53 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources and b/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.snap b/.metadata/.plugins/org.eclipse.core.resources/.snap
index 35aea47..1472c1c 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.snap and b/.metadata/.plugins/org.eclipse.core.resources/.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.google.appengine.eclipse.core.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.google.appengine.eclipse.core.prefs
new file mode 100644
index 0000000..a6029a5
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.google.appengine.eclipse.core.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+sdkSetXml=PHNka3MgZGVmYXVsdFNkaz0iQXBwIEVuZ2luZSI+Cgk8c2RrIG5hbWU9IkFwcCBFbmdpbmUiIGxvY2F0aW9uPSIvVXNlcnMvRW5vY2gvRG93bmxvYWRzL2VjbGlwc2UvcGx1Z2lucy9jb20uZ29vZ2xlLmFwcGVuZ2luZS5lY2xpcHNlLnNka2J1bmRsZV8xLjguNC9hcHBlbmdpbmUtamF2YS1zZGstMS44LjQvIiB2ZXJzaW9uPSIxLjguNCIvPgo8L3Nka3M+Cg\=\=
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.google.gdt.eclipse.suite.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.google.gdt.eclipse.suite.prefs
new file mode 100644
index 0000000..f9afb4f
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.google.gdt.eclipse.suite.prefs
@@ -0,0 +1,2 @@
+SdkRegistrants_1379097365263=com.google.appengine.eclipse.sdkbundle_1.8.4,com.google.gwt.eclipse.sdkbundle_2.5.1
+eclipse.preferences.version=1
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.google.gwt.eclipse.core.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.google.gwt.eclipse.core.prefs
new file mode 100644
index 0000000..f1a3d4d
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.google.gwt.eclipse.core.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+sdkSetXml=PHNka3MgZGVmYXVsdFNkaz0iR1dUIj4KCTxzZGsgbmFtZT0iR1dUIiBsb2NhdGlvbj0iL1VzZXJzL0Vub2NoL0Rvd25sb2Fkcy9lY2xpcHNlL3BsdWdpbnMvY29tLmdvb2dsZS5nd3QuZWNsaXBzZS5zZGtidW5kbGVfMi41LjEvZ3d0LTIuNS4xLyIgdmVyc2lvbj0iMi41LjEiLz4KPC9zZGtzPgo\=
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.debug.ui.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.debug.ui.prefs
new file mode 100644
index 0000000..a2e2ec3
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.debug.ui.prefs
@@ -0,0 +1,3 @@
+eclipse.preferences.version=1
+org.eclipse.debug.ui.PREF_LAUNCH_PERSPECTIVES=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<launchPerspectives/>\n
+preferredTargets=default\:default|
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.egit.core.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.egit.core.prefs
new file mode 100644
index 0000000..31be196
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.egit.core.prefs
@@ -0,0 +1,3 @@
+GitRepositoriesView.GitDirectories=/Users/Enoch/Documents/CPSC304/Project/CPSC304CoolTeam/.git\:
+RepositorySearchDialogSearchPath=/Users/Enoch/Documents/CPSC304/Project/CPSC304CoolTeam
+eclipse.preferences.version=1
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.pde.api.tools.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.pde.api.tools.prefs
new file mode 100644
index 0000000..d2ed603
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.pde.api.tools.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+knownEEFragments=
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.team.ui.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.team.ui.prefs
new file mode 100644
index 0000000..56cd496
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.team.ui.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+org.eclipse.team.ui.first_time=false
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.editors.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.editors.prefs
new file mode 100644
index 0000000..61f3bb8
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.editors.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+overviewRuler_migration=migrated_3.1
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs
new file mode 100644
index 0000000..3ef4c81
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs
@@ -0,0 +1,5 @@
+PROBLEMS_FILTERS_MIGRATE=true
+eclipse.preferences.version=1
+platformState=1393612165981
+quickStart=false
+tipsAndTricks=true
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.wst.jsdt.ui.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.wst.jsdt.ui.prefs
new file mode 100644
index 0000000..8b2877d
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.wst.jsdt.ui.prefs
@@ -0,0 +1,10 @@
+eclipse.preferences.version=1
+fontPropagated=true
+org.eclipse.jface.textfont=1|Monaco|11.0|0|COCOA|1|;
+org.eclipse.wst.jsdt.ui.editor.tab.width=
+org.eclipse.wst.jsdt.ui.formatterprofiles.version=11
+org.eclipse.wst.jsdt.ui.javadoclocations.migrated=true
+proposalOrderMigrated=true
+tabWidthPropagated=true
+useAnnotationsPrefPage=true
+useQuickDiffPrefPage=true
diff --git a/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.wst.server.core.prefs b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.wst.server.core.prefs
new file mode 100644
index 0000000..114f6b9
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.wst.server.core.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+runtimes=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<runtimes>\n  <runtime gae-sdk-name\="App Engine" gae-sdk-version\="1.8.4" id\="Google App Engine" location\="/Users/Enoch/Downloads/eclipse/plugins/com.google.appengine.eclipse.sdkbundle_1.8.4/appengine-java-sdk-1.8.4/" name\="Google App Engine" runtime-type-id\="com.google.appengine.runtime.id1" timestamp\="0"/>\n</runtimes>\n
diff --git a/.metadata/.plugins/org.eclipse.debug.core/.launches/Main.launch b/.metadata/.plugins/org.eclipse.debug.core/.launches/Main.launch
new file mode 100644
index 0000000..f6f31f3
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.debug.core/.launches/Main.launch
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.jdt.launching.localJavaApplication">
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/Project Part III/src/gui/Main.java"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="gui.Main"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="Project Part III"/>
+</launchConfiguration>
diff --git a/.metadata/.plugins/org.eclipse.debug.ui/launchConfigurationHistory.xml b/.metadata/.plugins/org.eclipse.debug.ui/launchConfigurationHistory.xml
new file mode 100644
index 0000000..27fdf16
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.debug.ui/launchConfigurationHistory.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchHistory>
+<launchGroup id="org.eclipse.ui.externaltools.launchGroup">
+<mruHistory/>
+<favorites/>
+</launchGroup>
+<launchGroup id="org.eclipse.debug.ui.launchGroup.profile">
+<mruHistory/>
+<favorites/>
+</launchGroup>
+<launchGroup id="org.eclipse.debug.ui.launchGroup.debug">
+<mruHistory>
+<launch memento="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;launchConfiguration local=&quot;true&quot; path=&quot;Main&quot;/&gt;&#10;"/>
+</mruHistory>
+<favorites/>
+</launchGroup>
+<launchGroup id="org.eclipse.debug.ui.launchGroup.run">
+<mruHistory>
+<launch memento="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;launchConfiguration local=&quot;true&quot; path=&quot;Main&quot;/&gt;&#10;"/>
+</mruHistory>
+<favorites/>
+</launchGroup>
+</launchHistory>
diff --git a/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi b/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
new file mode 100644
index 0000000..07990f1
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
@@ -0,0 +1,2495 @@
+<?xml version="1.0" encoding="ASCII"?>
+<application:Application xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:advanced="http://www.eclipse.org/ui/2010/UIModel/application/ui/advanced" xmlns:application="http://www.eclipse.org/ui/2010/UIModel/application" xmlns:basic="http://www.eclipse.org/ui/2010/UIModel/application/ui/basic" xmlns:menu="http://www.eclipse.org/ui/2010/UIModel/application/ui/menu" xmi:id="_eXnDsLe6EeOxntPoYxjofg" elementId="org.eclipse.e4.legacy.ide.application" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_eXnDsbe6EeOxntPoYxjofg" bindingContexts="_eXqHTLe6EeOxntPoYxjofg">
+  <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workbench>&#xA;&lt;mruList>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;ClerkUser.java&quot; tooltip=&quot;Project Part III/src/users/ClerkUser.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/users/ClerkUser.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;LibrarianUser.java&quot; tooltip=&quot;Project Part III/src/users/LibrarianUser.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/users/LibrarianUser.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;BorrowerUser.java&quot; tooltip=&quot;Project Part III/src/users/BorrowerUser.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/users/BorrowerUser.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;Main.java&quot; tooltip=&quot;Project Part III/src/gui/Main.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/gui/Main.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;branch.java&quot; tooltip=&quot;Branch/branch.java&quot;>&#xA;&lt;persistable path=&quot;/Branch/branch.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.jdt.ui.ClassFileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.ClassFileEditor&quot; name=&quot;DatabaseError.class&quot; tooltip=&quot;oracle.jdbc.driver.DatabaseError&quot;>&#xA;&lt;persistable org.eclipse.jdt.ui.ClassFileIdentifier=&quot;=Project Part III/classes12.zip&amp;lt;oracle.jdbc.driver(DatabaseError.class&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.ui.DefaultTextEditor&quot; name=&quot;table.sql&quot; tooltip=&quot;Project Part III/table.sql&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/table.sql&quot;/>&#xA;&lt;/file>&#xA;&lt;/mruList>&#xA;&lt;/workbench>"/>
+  <tags>activeSchemeId:org.eclipse.ui.defaultAcceleratorConfiguration</tags>
+  <children xsi:type="basic:TrimmedWindow" xmi:id="_eXnDsbe6EeOxntPoYxjofg" elementId="IDEWindow" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_eXnDsre6EeOxntPoYxjofg" label="%trimmedwindow.label.eclipseSDK" x="26" y="22" width="1027" height="768">
+    <persistedState key="coolBarVisible" value="true"/>
+    <persistedState key="perspectiveBarVisible" value="true"/>
+    <persistedState key="workingSets" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workingSets/>"/>
+    <persistedState key="aggregateWorkingSetId" value="Aggregate for window 1395689134483"/>
+    <tags>topLevel</tags>
+    <tags>shellMaximized</tags>
+    <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDsre6EeOxntPoYxjofg" selectedElement="_eXnDs7e6EeOxntPoYxjofg" horizontal="true">
+      <children xsi:type="advanced:PerspectiveStack" xmi:id="_eXnDs7e6EeOxntPoYxjofg" elementId="PerspectiveStack" containerData="7500" selectedElement="_eXnDtLe6EeOxntPoYxjofg">
+        <children xsi:type="advanced:Perspective" xmi:id="_eXnDtLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaPerspective" selectedElement="_eXnDtbe6EeOxntPoYxjofg" label="Java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/jperspective.gif">
+          <persistedState key="persp.hiddenItems" value="persp.hideToolbarSC:org.eclipse.debug.ui.commands.RunToLine,persp.hideToolbarSC:org.eclipse.jdt.ui.actions.OpenProjectWizard,persp.hideToolbarSC:org.eclipse.ui.edit.text.toggleShowSelectedElementOnly,"/>
+          <tags>persp.actionSet:org.eclipse.ui.cheatsheets.actionSet</tags>
+          <tags>persp.actionSet:org.eclipse.search.searchActionSet</tags>
+          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.annotationNavigation</tags>
+          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.navigation</tags>
+          <tags>persp.actionSet:org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo</tags>
+          <tags>persp.actionSet:org.eclipse.ui.externaltools.ExternalToolsSet</tags>
+          <tags>persp.actionSet:org.eclipse.ui.actionSet.keyBindings</tags>
+          <tags>persp.actionSet:org.eclipse.ui.actionSet.openFiles</tags>
+          <tags>persp.actionSet:com.google.gdt.eclipse.core.actionSet</tags>
+          <tags>persp.actionSet:org.eclipse.wb.core.ui.actionset</tags>
+          <tags>persp.actionSet:org.eclipse.debug.ui.launchActionSet</tags>
+          <tags>persp.actionSet:org.eclipse.jdt.ui.JavaActionSet</tags>
+          <tags>persp.actionSet:org.eclipse.jdt.ui.JavaElementCreationActionSet</tags>
+          <tags>persp.actionSet:org.eclipse.ui.NavigateActionSet</tags>
+          <tags>persp.viewSC:org.eclipse.jdt.ui.PackageExplorer</tags>
+          <tags>persp.viewSC:org.eclipse.jdt.ui.TypeHierarchy</tags>
+          <tags>persp.viewSC:org.eclipse.jdt.ui.SourceView</tags>
+          <tags>persp.viewSC:org.eclipse.jdt.ui.JavadocView</tags>
+          <tags>persp.viewSC:org.eclipse.search.ui.views.SearchView</tags>
+          <tags>persp.viewSC:org.eclipse.ui.console.ConsoleView</tags>
+          <tags>persp.viewSC:org.eclipse.ui.views.ContentOutline</tags>
+          <tags>persp.viewSC:org.eclipse.ui.views.ProblemView</tags>
+          <tags>persp.viewSC:org.eclipse.ui.views.ResourceNavigator</tags>
+          <tags>persp.viewSC:org.eclipse.ui.views.TaskList</tags>
+          <tags>persp.viewSC:org.eclipse.ui.views.ProgressView</tags>
+          <tags>persp.viewSC:org.eclipse.ui.navigator.ProjectExplorer</tags>
+          <tags>persp.viewSC:org.eclipse.ui.texteditor.TemplatesView</tags>
+          <tags>persp.viewSC:org.eclipse.pde.runtime.LogView</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.JavaProjectWizard</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewPackageCreationWizard</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewClassCreationWizard</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewInterfaceCreationWizard</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewEnumCreationWizard</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewAnnotationCreationWizard</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewSourceFolderCreationWizard</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewSnippetFileCreationWizard</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.ui.wizards.NewJavaWorkingSetWizard</tags>
+          <tags>persp.newWizSC:org.eclipse.ui.wizards.new.folder</tags>
+          <tags>persp.newWizSC:org.eclipse.ui.wizards.new.file</tags>
+          <tags>persp.newWizSC:org.eclipse.ui.editors.wizards.UntitledTextFileWizard</tags>
+          <tags>persp.perspSC:org.eclipse.jdt.ui.JavaBrowsingPerspective</tags>
+          <tags>persp.perspSC:org.eclipse.debug.ui.DebugPerspective</tags>
+          <tags>persp.newWizSC:com.google.gdt.eclipse.suite.wizards.newProjectWizard</tags>
+          <tags>persp.newWizSC:com.google.gwt.eclipse.core.newEntryPointWizard</tags>
+          <tags>persp.newWizSC:com.google.gwt.eclipse.core.newHostPageWizard</tags>
+          <tags>persp.newWizSC:com.google.gwt.eclipse.core.newModuleWizard</tags>
+          <tags>persp.newWizSC:com.google.gwt.eclipse.core.newClientBundleWizard</tags>
+          <tags>persp.newWizSC:com.google.gwt.eclipse.core.newUiBinderWizard</tags>
+          <tags>persp.viewSC:org.eclipse.ant.ui.views.AntView</tags>
+          <tags>persp.showIn:org.eclipse.egit.ui.RepositoriesView</tags>
+          <tags>persp.actionSet:org.eclipse.debug.ui.breakpointActionSet</tags>
+          <tags>persp.actionSet:org.eclipse.jdt.debug.ui.JDTDebugActionSet</tags>
+          <tags>persp.newWizSC:org.eclipse.jdt.junit.wizards.NewTestCaseCreationWizard</tags>
+          <tags>persp.actionSet:org.eclipse.jdt.junit.JUnitActionSet</tags>
+          <tags>persp.showIn:org.eclipse.jdt.ui.PackageExplorer</tags>
+          <tags>persp.showIn:org.eclipse.team.ui.GenericHistoryView</tags>
+          <tags>persp.showIn:org.eclipse.ui.views.ResourceNavigator</tags>
+          <tags>persp.showIn:org.eclipse.ui.navigator.ProjectExplorer</tags>
+          <tags>persp.viewSC:org.eclipse.wb.core.StructureView</tags>
+          <tags>persp.viewSC:org.eclipse.wb.core.PaletteView</tags>
+          <tags>persp.perspSC:org.eclipse.wst.jsdt.ui.JavaPerspective</tags>
+          <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDtbe6EeOxntPoYxjofg" selectedElement="_eXnDwbe6EeOxntPoYxjofg" horizontal="true">
+            <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDtre6EeOxntPoYxjofg" containerData="2500" selectedElement="_eXnDt7e6EeOxntPoYxjofg">
+              <children xsi:type="basic:PartStack" xmi:id="_eXnDt7e6EeOxntPoYxjofg" elementId="left" containerData="6000" selectedElement="_eXnDuLe6EeOxntPoYxjofg">
+                <tags>newtablook</tags>
+                <tags>org.eclipse.e4.primaryNavigationStack</tags>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDuLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer" ref="_eXnE_re6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDube6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypeHierarchy" toBeRendered="false" ref="_eXnrGLe6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDure6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ResourceNavigator" toBeRendered="false" ref="_eXnrGbe6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDu7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigator.ProjectExplorer" toBeRendered="false" ref="_eXnrGre6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDvLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.ResultView" toBeRendered="false" ref="_eXnrYbe6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDvbe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.StructureView" toBeRendered="false" ref="_eXnrYre6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDvre6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.PaletteView" toBeRendered="false" ref="_eXnrY7e6EeOxntPoYxjofg"/>
+              </children>
+              <children xsi:type="basic:PartStack" xmi:id="_eXnDv7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewMStack" toBeRendered="false" containerData="4000">
+                <tags>newtablook</tags>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDwLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" toBeRendered="false" ref="_eXnrYLe6EeOxntPoYxjofg"/>
+              </children>
+            </children>
+            <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDwbe6EeOxntPoYxjofg" containerData="7500" selectedElement="_eXnDwre6EeOxntPoYxjofg">
+              <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDwre6EeOxntPoYxjofg" containerData="7928" selectedElement="_eXnDw7e6EeOxntPoYxjofg" horizontal="true">
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDw7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.editorss" containerData="7979" ref="_eXnE7Le6EeOxntPoYxjofg"/>
+                <children xsi:type="basic:PartStack" xmi:id="_eXnDxLe6EeOxntPoYxjofg" elementId="right" containerData="2021" selectedElement="_eXnDxbe6EeOxntPoYxjofg">
+                  <tags>newtablook</tags>
+                  <tags>org.eclipse.e4.secondaryNavigationStack</tags>
+                  <children xsi:type="advanced:Placeholder" xmi:id="_eXnDxbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline" ref="_eXnrNLe6EeOxntPoYxjofg"/>
+                  <children xsi:type="advanced:Placeholder" xmi:id="_eXnDxre6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.TemplatesView" toBeRendered="false" ref="_eXnrXbe6EeOxntPoYxjofg"/>
+                  <children xsi:type="advanced:Placeholder" xmi:id="_eXnDx7e6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.views.AntView" toBeRendered="false" ref="_eXnrX7e6EeOxntPoYxjofg"/>
+                </children>
+              </children>
+              <children xsi:type="basic:PartStack" xmi:id="_eXnDyLe6EeOxntPoYxjofg" elementId="bottom" containerData="2072" selectedElement="_eXnDzbe6EeOxntPoYxjofg">
+                <tags>newtablook</tags>
+                <tags>org.eclipse.e4.secondaryDataStack</tags>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDybe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" ref="_eXnrG7e6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDyre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavadocView" ref="_eXnrH7e6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDy7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SourceView" ref="_eXnrILe6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDzLe6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.views.SearchView" toBeRendered="false" ref="_eXnrIbe6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDzbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" ref="_eXnrIre6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDzre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.BookmarkView" toBeRendered="false" ref="_eXnrMre6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDz7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProgressView" toBeRendered="false" ref="_eXnrM7e6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_eXnD0Le6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.DevModeView" toBeRendered="false" ref="_eXnrXre6EeOxntPoYxjofg"/>
+              </children>
+            </children>
+          </children>
+        </children>
+      </children>
+      <children xsi:type="basic:PartStack" xmi:id="_eXnD0be6EeOxntPoYxjofg" elementId="stickyFolderRight" visible="false" containerData="2500" selectedElement="_eXnD07e6EeOxntPoYxjofg">
+        <tags>Minimized</tags>
+        <children xsi:type="advanced:Placeholder" xmi:id="_eXnD0re6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.HelpView" toBeRendered="false" ref="_eXnE4Le6EeOxntPoYxjofg"/>
+        <children xsi:type="advanced:Placeholder" xmi:id="_eXnD07e6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview" ref="_eXnE4be6EeOxntPoYxjofg"/>
+        <children xsi:type="advanced:Placeholder" xmi:id="_eXnD1Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" toBeRendered="false" ref="_eXnE67e6EeOxntPoYxjofg"/>
+      </children>
+    </children>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnE4Le6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.HelpView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:Help</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnE4be6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.gif" tooltip="" closeable="true">
+      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view>&#xA;&lt;presentation currentPage=&quot;root&quot; restore=&quot;true&quot;/>&#xA;&lt;standbyPart/>&#xA;&lt;/view>"/>
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+      <tags>activeOnClose</tags>
+      <menus xmi:id="_eXnE4re6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview">
+        <tags>ViewMenu</tags>
+        <tags>menuContribution:menu</tags>
+      </menus>
+      <toolbar xmi:id="_eXnE47e6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview"/>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnE67e6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:Help</tags>
+    </sharedElements>
+    <sharedElements xsi:type="advanced:Area" xmi:id="_eXnE7Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.editorss" selectedElement="_eXnE7be6EeOxntPoYxjofg">
+      <children xsi:type="basic:PartStack" xmi:id="_eXnE7be6EeOxntPoYxjofg" elementId="org.eclipse.e4.primaryDataStack" selectedElement="_eXnE9re6EeOxntPoYxjofg">
+        <tags>newtablook</tags>
+        <tags>org.eclipse.e4.primaryDataStack</tags>
+        <tags>EditorStack</tags>
+        <tags>active</tags>
+        <children xsi:type="basic:Part" xmi:id="_eXnE7re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="Main.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/gui/Main.java" closeable="true">
+          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/gui/Main.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;5520&quot; selectionTopPixel=&quot;0&quot;/>&#xA;&lt;/editor>"/>
+          <tags>Editor</tags>
+          <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
+          <tags>removeOnHide</tags>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE77e6EeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#CompilationUnitEditorContext</tags>
+            <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.EditorContext</tags>
+            <tags>popup:#AbstractTextEditorContext</tags>
+          </menus>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE8Le6EeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#CompilationUnitRulerContext</tags>
+            <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.RulerContext</tags>
+            <tags>popup:#AbstractTextEditorRulerContext</tags>
+          </menus>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE8be6EeOxntPoYxjofg" elementId="#OverviewRulerContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#OverviewRulerContext</tags>
+          </menus>
+        </children>
+        <children xsi:type="basic:Part" xmi:id="_eXnE8re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="BorrowerUser.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/users/BorrowerUser.java" closeable="true">
+          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/users/BorrowerUser.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;0&quot; selectionTopPixel=&quot;0&quot;/>&#xA;&lt;/editor>"/>
+          <tags>Editor</tags>
+          <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
+          <tags>removeOnHide</tags>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE87e6EeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#CompilationUnitEditorContext</tags>
+            <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.EditorContext</tags>
+            <tags>popup:#AbstractTextEditorContext</tags>
+          </menus>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE9Le6EeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#CompilationUnitRulerContext</tags>
+            <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.RulerContext</tags>
+            <tags>popup:#AbstractTextEditorRulerContext</tags>
+          </menus>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE9be6EeOxntPoYxjofg" elementId="#OverviewRulerContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#OverviewRulerContext</tags>
+          </menus>
+        </children>
+        <children xsi:type="basic:Part" xmi:id="_eXnE9re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="ClerkUser.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/users/ClerkUser.java" closeable="true">
+          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/users/ClerkUser.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;27&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;0&quot; selectionTopPixel=&quot;633&quot;/>&#xA;&lt;/editor>"/>
+          <tags>Editor</tags>
+          <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
+          <tags>removeOnHide</tags>
+          <tags>active</tags>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE97e6EeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#CompilationUnitEditorContext</tags>
+            <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.EditorContext</tags>
+            <tags>popup:#AbstractTextEditorContext</tags>
+          </menus>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE-Le6EeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#CompilationUnitRulerContext</tags>
+            <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.RulerContext</tags>
+            <tags>popup:#AbstractTextEditorRulerContext</tags>
+          </menus>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE-be6EeOxntPoYxjofg" elementId="#OverviewRulerContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#OverviewRulerContext</tags>
+          </menus>
+        </children>
+        <children xsi:type="basic:Part" xmi:id="_eXnE-re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="LibrarianUser.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/users/LibrarianUser.java" closeable="true">
+          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/users/LibrarianUser.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;0&quot; selectionTopPixel=&quot;4238&quot;/>&#xA;&lt;/editor>"/>
+          <tags>Editor</tags>
+          <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
+          <tags>removeOnHide</tags>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE-7e6EeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#CompilationUnitEditorContext</tags>
+            <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.EditorContext</tags>
+            <tags>popup:#AbstractTextEditorContext</tags>
+          </menus>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE_Le6EeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#CompilationUnitRulerContext</tags>
+            <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.RulerContext</tags>
+            <tags>popup:#AbstractTextEditorRulerContext</tags>
+          </menus>
+          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE_be6EeOxntPoYxjofg" elementId="#OverviewRulerContext">
+            <tags>menuContribution:popup</tags>
+            <tags>popup:#OverviewRulerContext</tags>
+          </menus>
+        </children>
+      </children>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnE_re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.gif" tooltip="Workspace" closeable="true">
+      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view group_libraries=&quot;1&quot; layout=&quot;2&quot; linkWithEditor=&quot;0&quot; rootMode=&quot;1&quot; workingSetName=&quot;Aggregate for window 1395689134483&quot;>&#xA;&lt;customFilters userDefinedPatternsEnabled=&quot;false&quot;>&#xA;&lt;xmlDefinedFilters>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LocalTypesFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.StaticsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.pde.ui.ExternalPluginLibrariesFilter1&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ClosedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonSharedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaElementFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ContainedLibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.CuAndClassFileFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackageFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.PackageDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyPackageFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;com.google.gdt.eclipse.managedapis.ui.ManagedApiContainerFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ImportDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.FieldsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.HideInnerClassFilesFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonPublicFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.EmptyLibraryContainerFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.pde.ui.BinaryProjectFilter1&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.SyntheticMembersFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;/xmlDefinedFilters>&#xA;&lt;/customFilters>&#xA;&lt;/view>"/>
+      <tags>View</tags>
+      <tags>categoryTag:Java</tags>
+      <menus xmi:id="_eXnE_7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer">
+        <tags>ViewMenu</tags>
+        <tags>menuContribution:menu</tags>
+      </menus>
+      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnFFbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer">
+        <tags>menuContribution:popup</tags>
+        <tags>popup:org.eclipse.jdt.ui.PackageExplorer</tags>
+      </menus>
+      <toolbar xmi:id="_eXnrFLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer"/>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrGLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypeHierarchy" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:Java</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrGbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ResourceNavigator" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrGre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigator.ProjectExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrG7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.gif" tooltip="" closeable="true">
+      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view PRIMARY_SORT_FIELD=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot; categoryGroup=&quot;org.eclipse.ui.ide.severity&quot; markerContentGenerator=&quot;org.eclipse.ui.ide.problemsGenerator&quot; partName=&quot;Problems&quot;>&#xA;&lt;expanded>&#xA;&lt;category IMemento.internal.id=&quot;Warnings (3 items)&quot;/>&#xA;&lt;category IMemento.internal.id=&quot;Errors&quot;/>&#xA;&lt;/expanded>&#xA;&lt;columnWidths org.eclipse.ui.ide.locationField=&quot;90&quot; org.eclipse.ui.ide.markerType=&quot;90&quot; org.eclipse.ui.ide.pathField=&quot;120&quot; org.eclipse.ui.ide.resourceField=&quot;90&quot; org.eclipse.ui.ide.severityAndDescriptionField=&quot;300&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.resourceField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.pathField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.locationField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.markerType&quot;/>&#xA;&lt;/view>"/>
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+      <menus xmi:id="_eXnrHLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView">
+        <tags>ViewMenu</tags>
+        <tags>menuContribution:menu</tags>
+      </menus>
+      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrHbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView">
+        <tags>menuContribution:popup</tags>
+        <tags>popup:org.eclipse.ui.views.ProblemView</tags>
+        <tags>popup:org.eclipse.ui.ide.MarkersView</tags>
+      </menus>
+      <toolbar xmi:id="_eXnrHre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" visible="false"/>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrH7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavadocView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:Java</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrILe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SourceView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:Java</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrIbe6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.views.SearchView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrIre6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.gif" tooltip="" closeable="true">
+      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view/>"/>
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+      <menus xmi:id="_eXnrI7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView">
+        <tags>ViewMenu</tags>
+        <tags>menuContribution:menu</tags>
+      </menus>
+      <toolbar xmi:id="_eXnrJLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView"/>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrMre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.BookmarkView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrM7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProgressView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrNLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.gif" tooltip="" closeable="true">
+      <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view/>"/>
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+      <menus xmi:id="_eXnrNbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline">
+        <tags>ViewMenu</tags>
+        <tags>menuContribution:menu</tags>
+      </menus>
+      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrQLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
+        <tags>menuContribution:popup</tags>
+        <tags>popup:org.eclipse.jdt.ui.outline</tags>
+      </menus>
+      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrQbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
+        <tags>menuContribution:popup</tags>
+        <tags>popup:org.eclipse.jdt.ui.outline</tags>
+      </menus>
+      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrQre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
+        <tags>menuContribution:popup</tags>
+        <tags>popup:org.eclipse.jdt.ui.outline</tags>
+      </menus>
+      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrQ7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
+        <tags>menuContribution:popup</tags>
+        <tags>popup:org.eclipse.jdt.ui.outline</tags>
+      </menus>
+      <toolbar xmi:id="_eXnrRLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline"/>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrXbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.TemplatesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:General</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrXre6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.DevModeView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Development Mode" iconURI="platform:/plugin/com.google.gwt.eclipse.oophm/icons/gwt_oophm_16x16.png" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:Google</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrX7e6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.views.AntView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:Ant</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrYLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:Git</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrYbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.ResultView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:Java</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrYre6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.StructureView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:WindowBuilder</tags>
+    </sharedElements>
+    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrY7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.PaletteView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" closeable="true">
+      <tags>View</tags>
+      <tags>categoryTag:WindowBuilder</tags>
+    </sharedElements>
+    <trimBars xmi:id="_eXnrZLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.main.toolbar">
+      <children xsi:type="menu:ToolBar" xmi:id="_eXnrZbe6EeOxntPoYxjofg" elementId="group.file" toBeRendered="false">
+        <tags>toolbarSeparator</tags>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXnrZre6EeOxntPoYxjofg" elementId="group.file" toBeRendered="false"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXnrZ7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.file">
+        <tags>Draggable</tags>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnraLe6EeOxntPoYxjofg" elementId="new.group"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrabe6EeOxntPoYxjofg" elementId="newWizardDropDown"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrare6EeOxntPoYxjofg" elementId="new.ext" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnra7e6EeOxntPoYxjofg" elementId="save.group" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrbLe6EeOxntPoYxjofg" elementId="save"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrbbe6EeOxntPoYxjofg" elementId="saveAll"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrbre6EeOxntPoYxjofg" elementId="save.ext" visible="false"/>
+        <children xsi:type="menu:HandledToolItem" xmi:id="_eXnrb7e6EeOxntPoYxjofg" elementId="print" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/print_edit.gif" tooltip="Print" command="_eYB6ire6EeOxntPoYxjofg"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrcLe6EeOxntPoYxjofg" elementId="print.ext" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrcbe6EeOxntPoYxjofg" elementId="build.group"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrcre6EeOxntPoYxjofg" elementId="build.ext" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrc7e6EeOxntPoYxjofg" elementId="additions"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrdLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.wizards.actions.NewDesignerTypeDropDownAction"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXnrebe6EeOxntPoYxjofg" elementId="additions" toBeRendered="false">
+        <tags>toolbarSeparator</tags>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXnrere6EeOxntPoYxjofg" elementId="additions" toBeRendered="false"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR0Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.presentation">
+        <tags>Draggable</tags>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR0be6EeOxntPoYxjofg" elementId="Presentation"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR0re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleBreadcrumb"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR07e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleMarkOccurrences"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR1Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleBlockSelectionMode"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR1be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowWhitespaceCharacters"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR1re6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowSelectedElementOnly"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR17e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.breakpointActionSet">
+        <tags>Draggable</tags>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR2Le6EeOxntPoYxjofg" elementId="breakpointGroup"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR2be6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.actions.SkipAllBreakpoints"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR2re6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.launchActionSet">
+        <tags>Draggable</tags>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR27e6EeOxntPoYxjofg" elementId="debug"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR3Le6EeOxntPoYxjofg" elementId="org.eclipse.debug.internal.ui.actions.DebugDropDownAction"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR3be6EeOxntPoYxjofg" elementId="org.eclipse.debug.internal.ui.actions.RunDropDownAction"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR3re6EeOxntPoYxjofg" elementId="org.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR37e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet">
+        <tags>Draggable</tags>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR4Le6EeOxntPoYxjofg" elementId="JavaWizards"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR4be6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.actions.OpenProjectWizard"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR4re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.actions.OpenPackageWizard"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR47e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.actions.NewTypeDropDown"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR5Le6EeOxntPoYxjofg" elementId="org.eclipse.search.searchActionSet">
+        <tags>Draggable</tags>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR5be6EeOxntPoYxjofg" elementId="Search"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR5re6EeOxntPoYxjofg" elementId="openType"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR57e6EeOxntPoYxjofg" elementId="org.eclipse.search.OpenSearchDialogPage"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR6Le6EeOxntPoYxjofg" elementId="group.nav" toBeRendered="false">
+        <tags>toolbarSeparator</tags>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXoR6be6EeOxntPoYxjofg" elementId="group.nav" toBeRendered="false"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR6re6EeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.navigate">
+        <tags>Draggable</tags>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR67e6EeOxntPoYxjofg" elementId="history.group"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR7Le6EeOxntPoYxjofg" elementId="group.application" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR7be6EeOxntPoYxjofg" elementId="backardHistory"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR7re6EeOxntPoYxjofg" elementId="forwardHistory"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR77e6EeOxntPoYxjofg" elementId="pin.group"/>
+        <children xsi:type="menu:HandledToolItem" xmi:id="_eXoR8Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.pinEditor" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/pin_editor.gif" tooltip="Pin Editor" enabled="false" command="_eX8a6be6EeOxntPoYxjofg"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR8be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoNextAnnotation"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR8re6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoPreviousAnnotation"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR87e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoLastEditPosition"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR9Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.CompilationUnitEditor" visible="false">
+        <tags>Draggable</tags>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR9be6EeOxntPoYxjofg" elementId="group.editor" toBeRendered="false">
+        <tags>toolbarSeparator</tags>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXoR9re6EeOxntPoYxjofg" elementId="group.editor" toBeRendered="false"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR97e6EeOxntPoYxjofg" elementId="group.help" toBeRendered="false">
+        <tags>toolbarSeparator</tags>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXoR-Le6EeOxntPoYxjofg" elementId="group.help" toBeRendered="false"/>
+      </children>
+      <children xsi:type="menu:ToolBar" xmi:id="_eXoR-be6EeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.help" visible="false">
+        <tags>Draggable</tags>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR-re6EeOxntPoYxjofg" elementId="group.help"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR-7e6EeOxntPoYxjofg" elementId="group.application" visible="false"/>
+      </children>
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoR_Le6EeOxntPoYxjofg" elementId="PerspectiveSpacer" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
+        <tags>stretch</tags>
+      </children>
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoR_be6EeOxntPoYxjofg" elementId="Spacer Glue" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
+        <tags>glue</tags>
+      </children>
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoR_re6EeOxntPoYxjofg" elementId="SearchField" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.quickaccess.SearchField"/>
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoR_7e6EeOxntPoYxjofg" elementId="Search-PS Glue" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
+        <tags>glue</tags>
+      </children>
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoSALe6EeOxntPoYxjofg" elementId="PerspectiveSwitcher" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.e4.ui.workbench.addons.perspectiveswitcher.PerspectiveSwitcher">
+        <tags>Draggable</tags>
+      </children>
+    </trimBars>
+    <trimBars xmi:id="_eXoSAbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.trim.status" side="Bottom">
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoSAre6EeOxntPoYxjofg" elementId="org.eclipse.ui.StatusLine" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
+        <tags>stretch</tags>
+      </children>
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoSA7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.HeapStatus" toBeRendered="false" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim"/>
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoSBLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ProgressBar" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
+        <tags>Draggable</tags>
+      </children>
+    </trimBars>
+    <trimBars xmi:id="_eXoSB7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.trim.vertical1" toBeRendered="false" side="Left">
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoSCLe6EeOxntPoYxjofg" elementId="PerspectiveStack(minimized)" toBeRendered="false" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
+        <tags>TrimStack</tags>
+      </children>
+    </trimBars>
+    <trimBars xmi:id="_eXoSCbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.trim.vertical2" side="Right">
+      <children xsi:type="menu:ToolControl" xmi:id="_eXoSCre6EeOxntPoYxjofg" elementId="stickyFolderRight(minimized)" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
+        <tags>TrimStack</tags>
+      </children>
+    </trimBars>
+  </children>
+  <handlers xmi:id="_eXoSC7e6EeOxntPoYxjofg" elementId="_UW9TY_r3Ed6gmo7caOxU9g" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.ExitHandler" command="_eXz4Jbe6EeOxntPoYxjofg"/>
+  <handlers xmi:id="_eXoSDLe6EeOxntPoYxjofg" elementId="_BESTZfr3Ed6gmo7caOxU04" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.swt/org.eclipse.e4.ui.internal.workbench.swt.handlers.ShowViewHandler" command="_eX0fELe6EeOxntPoYxjofg"/>
+  <handlers xmi:id="_eXoSDbe6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveHandler" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.handlers.SaveHandler" command="_eX0fEre6EeOxntPoYxjofg"/>
+  <handlers xmi:id="_eXoSDre6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveAllHandler" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.handlers.SaveAllHandler" command="_eX0fE7e6EeOxntPoYxjofg"/>
+  <handlers xmi:id="_eXoSD7e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ArrangeWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ArrangeWindowHandler" command="_eYFk3Le6EeOxntPoYxjofg"/>
+  <handlers xmi:id="_eXoSELe6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.MinimizeWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.MinimizeWindowHandler" command="_eYFk3be6EeOxntPoYxjofg"/>
+  <handlers xmi:id="_eXoSEbe6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.FullscreenWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.FullscreenWindowHandler" command="_eYFk3re6EeOxntPoYxjofg"/>
+  <handlers xmi:id="_eXoSEre6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ZoomWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ZoomWindowHandler" command="_eYFk37e6EeOxntPoYxjofg"/>
+  <handlers xmi:id="_eXoSE7e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CloseDialogHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CloseDialogHandler" command="_eYFk4Le6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXoSFLe6EeOxntPoYxjofg" contributorURI="platform:/plugin/org.eclipse.platform" bindingContext="_eXqHTLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXoSFbe6EeOxntPoYxjofg" elementId="_UW9TZfr3Ed6gmo7caOxU9g" contributorURI="platform:/plugin/org.eclipse.platform" keySequence="CTRL+Q" command="_eXz4Jbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSFre6EeOxntPoYxjofg" elementId="_oRr6EAFSEd-Z8rQksLwRYw" contributorURI="platform:/plugin/org.eclipse.platform" keySequence="CTRL+S" command="_eX0fEre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSF7e6EeOxntPoYxjofg" contributorURI="platform:/plugin/org.eclipse.platform" keySequence="CTRL+SHIFT+S" command="_eX0fE7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSGLe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+F2" command="_eX27a7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSGbe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+F1" command="_eX0fGbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSGre6EeOxntPoYxjofg" keySequence="CTRL+SPACE" command="_eX_eOLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSG7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+SPACE" command="_eX5-sLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSHLe6EeOxntPoYxjofg" keySequence="COMMAND+F10" command="_eX-3Mre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSHbe6EeOxntPoYxjofg" keySequence="COMMAND+Z" command="_eX1GOLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSHre6EeOxntPoYxjofg" keySequence="COMMAND+X" command="_eYAsaLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSH7e6EeOxntPoYxjofg" keySequence="COMMAND+V" command="_eX9CBLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSILe6EeOxntPoYxjofg" keySequence="SHIFT+F10" command="_eX0fNre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSIbe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+F3" command="_eYE9wbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSIre6EeOxntPoYxjofg" keySequence="COMMAND+1" command="_eX3icbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSI7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+L" command="_eX9B-7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSJLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+Z" command="_eX4wlre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSJbe6EeOxntPoYxjofg" keySequence="COMMAND+C" command="_eX-QKbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSJre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+I" command="_eX8a7Le6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSJ7e6EeOxntPoYxjofg" keySequence="COMMAND+A" command="_eX-QJbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSKLe6EeOxntPoYxjofg" keySequence="ALT+PAGE_UP" command="_eX_eNLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSKbe6EeOxntPoYxjofg" keySequence="ALT+PAGE_DOWN" command="_eX4JfLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSKre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+D" command="_eX4wkre6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXoSK7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.window" bindingContext="_eXqHTbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXoSLLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_MULTIPLY" command="_eX7z6be6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSLbe6EeOxntPoYxjofg" keySequence="COMMAND+E" command="_eX9CALe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSLre6EeOxntPoYxjofg" keySequence="ALT+SHIFT+D R" command="_eYChl7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSL7e6EeOxntPoYxjofg" keySequence="COMMAND+]" command="_eX4wmre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSMLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_LEFT" command="_eYAsUre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSMbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+C" command="_eX5Xpbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSMre6EeOxntPoYxjofg" keySequence="ALT+CTRL+SHIFT+X" command="_eX7z7be6EeOxntPoYxjofg">
+      <parameters xmi:id="_eXoSM7e6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer.param1" name="com.google.gwt.eclipse.oophm.logSniffer.param1" value="CMD_CLEAR"/>
+    </bindings>
+    <bindings xmi:id="_eXoSNLe6EeOxntPoYxjofg" keySequence="ALT+CTRL+SHIFT+Z" command="_eX7z7be6EeOxntPoYxjofg">
+      <parameters xmi:id="_eXoSNbe6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer.param1" name="com.google.gwt.eclipse.oophm.logSniffer.param1" value="CMD_DUMP"/>
+    </bindings>
+    <bindings xmi:id="_eXoSNre6EeOxntPoYxjofg" keySequence="F2" command="_eX-QFbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSN7e6EeOxntPoYxjofg" keySequence="CTRL+Q" command="_eX4wgre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSOLe6EeOxntPoYxjofg" keySequence="COMMAND+G" command="_eX1tUre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSObe6EeOxntPoYxjofg" keySequence="SHIFT+F2" command="_eYDIo7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSOre6EeOxntPoYxjofg" keySequence="F3" command="_eX4Jere6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSO7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+N" command="_eX7z3Le6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSPLe6EeOxntPoYxjofg" keySequence="SHIFT+F5" command="_eX9pAre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSPbe6EeOxntPoYxjofg" keySequence="COMMAND+U" command="_eYFk27e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSPre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+SHIFT+M" command="_eX9pE7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSP7e6EeOxntPoYxjofg" keySequence="COMMAND+N" command="_eX2UT7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSQLe6EeOxntPoYxjofg" keySequence="COMMAND+W" command="_eX2UTre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSQbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+W" command="_eYEWyLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSQre6EeOxntPoYxjofg" keySequence="COMMAND+S" command="_eYAFTre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSQ7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+S" command="_eX2UYre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSRLe6EeOxntPoYxjofg" keySequence="COMMAND+P" command="_eYB6ire6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSRbe6EeOxntPoYxjofg" keySequence="ALT+CR" command="_eX5Xnre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSRre6EeOxntPoYxjofg" keySequence="F5" command="_eX9pDbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSR7e6EeOxntPoYxjofg" keySequence="DEL" command="_eX1GJbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSSLe6EeOxntPoYxjofg" keySequence="COMMAND+F" command="_eX4JdLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSSbe6EeOxntPoYxjofg" keySequence="COMMAND+." command="_eX1tTLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSSre6EeOxntPoYxjofg" keySequence="COMMAND+F6" command="_eX1tNre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSS7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Z" command="_eX0fKre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSTLe6EeOxntPoYxjofg" keySequence="CTRL+M" command="_eX27Wre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSTbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+3" command="_eYBTbLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSTre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+N" command="_eX1GNbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoST7e6EeOxntPoYxjofg" keySequence="COMMAND+3" command="_eYE9w7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSULe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+R" command="_eX2UXbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSUbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_DIVIDE" command="_eX4wiLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSUre6EeOxntPoYxjofg" keySequence="ALT+SHIFT+F7" command="_eX-3KLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSU7e6EeOxntPoYxjofg" keySequence="ALT+F7" command="_eYAFXLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSVLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F8" command="_eX3iZbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSVbe6EeOxntPoYxjofg" keySequence="COMMAND+F8" command="_eYFk0be6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSVre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F7" command="_eX27b7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSV7e6EeOxntPoYxjofg" keySequence="COMMAND+F7" command="_eX5XnLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSWLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F6" command="_eX-3OLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSWbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+O" command="_eX4Jh7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSWre6EeOxntPoYxjofg" keySequence="COMMAND+I" command="_eX5Xnre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSW7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+T" command="_eX3iY7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSXLe6EeOxntPoYxjofg" keySequence="F4" command="_eYAFVLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSXbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+U" command="_eX8a9be6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSXre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_eX4Jcbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSX7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+T" command="_eX4wobe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSYLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+V" command="_eX9pELe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSYbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+L" command="_eYDvpre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSYre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+M" command="_eYDvsLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSY7e6EeOxntPoYxjofg" keySequence="COMMAND+F12" command="_eX4Jhre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSZLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F10" command="_eX3id7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSZbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+." command="_eX1GMLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSZre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F11" command="_eX4wnre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSZ7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+S" command="_eX9CB7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSaLe6EeOxntPoYxjofg" keySequence="COMMAND+F11" command="_eX1GObe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSabe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+W" command="_eX-QEbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSare6EeOxntPoYxjofg" keySequence="COMMAND+[" command="_eYAsUre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSa7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+I" command="_eX2UUbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSbLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+H" command="_eX0fHbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSbbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D Q" command="_eYB6eLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSbre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D P" command="_eYEWtbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSb7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D O" command="_eX9CBre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoScLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D E" command="_eX27Ure6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoScbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D J" command="_eYDvpbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoScre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D T" command="_eX_eS7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSc7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D A" command="_eX5Xkre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSdLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_RIGHT" command="_eX4wmre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSdbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+SHIFT+A" command="_eX8a_Le6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSdre6EeOxntPoYxjofg" keySequence="CTRL+H" command="_eYChlbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXoSd7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+J" command="_eYFk1re6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXoSeLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_eX4Jfbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo44Le6EeOxntPoYxjofg" keySequence="ALT+COMMAND+G" command="_eX9B_be6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo44be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q P" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo44re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.PackageExplorer"/>
+    </bindings>
+    <bindings xmi:id="_eXo447e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q D" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo45Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.SourceView"/>
+    </bindings>
+    <bindings xmi:id="_eXo45be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X A" command="_eYE90Le6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo45re6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X J" command="_eYChi7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo457e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q S" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo46Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.search.ui.views.SearchView"/>
+    </bindings>
+    <bindings xmi:id="_eXo46be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q J" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo46re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.JavadocView"/>
+    </bindings>
+    <bindings xmi:id="_eXo467e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q T" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo47Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.TypeHierarchy"/>
+    </bindings>
+    <bindings xmi:id="_eXo47be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q Z" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo47re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.ui.GenericHistoryView"/>
+    </bindings>
+    <bindings xmi:id="_eXo477e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q H" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo48Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.cheatsheets.views.CheatSheetView"/>
+    </bindings>
+    <bindings xmi:id="_eXo48be6EeOxntPoYxjofg" keySequence="ALT+SHIFT+X R" command="_eYBTebe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo48re6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X P" command="_eYChkLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo487e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q O" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo49Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ContentOutline"/>
+    </bindings>
+    <bindings xmi:id="_eXo49be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q C" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo49re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.console.ConsoleView"/>
+    </bindings>
+    <bindings xmi:id="_eXo497e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X E" command="_eYE9ybe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo4-Le6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q Q" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo4-be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q V" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo4-re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.VariableView"/>
+    </bindings>
+    <bindings xmi:id="_eXo4-7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X O" command="_eX27Xbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo4_Le6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X T" command="_eX5Xnbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo4_be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X Q" command="_eYAsVre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo4_re6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q L" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo4_7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.pde.runtime.LogView"/>
+    </bindings>
+    <bindings xmi:id="_eXo5ALe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q X" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo5Abe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ProblemView"/>
+    </bindings>
+    <bindings xmi:id="_eXo5Are6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q Y" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo5A7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.sync.views.SynchronizeView"/>
+    </bindings>
+    <bindings xmi:id="_eXo5BLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q B" command="_eX7Mw7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+      <parameters xmi:id="_eXo5Bbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.BreakpointView"/>
+    </bindings>
+    <bindings xmi:id="_eXo5Bre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+B" command="_eX4Jj7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5B7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+E" command="_eX27bre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5CLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+G" command="_eX1GLre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Cbe6EeOxntPoYxjofg" keySequence="COMMAND+B" command="_eX7z6Le6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Cre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+F" command="_eYE9yLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5C7e6EeOxntPoYxjofg" keySequence="ALT+CTRL+H" command="_eX1GMre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5DLe6EeOxntPoYxjofg" keySequence="COMMAND+CTRL+F" command="_eYFk3re6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXo5Dbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.textEditorScope" bindingContext="_eXqHWLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXo5Dre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_MULTIPLY" command="_eX8a87e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5D7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+J" command="_eYBTcre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5ELe6EeOxntPoYxjofg" keySequence="CTRL+ARROW_UP" command="_eYB6iLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Ebe6EeOxntPoYxjofg" keySequence="ALT+ARROW_LEFT" command="_eX1GQLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Ere6EeOxntPoYxjofg" keySequence="ALT+ARROW_DOWN" command="_eYBTYLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5E7e6EeOxntPoYxjofg" keySequence="CTRL+ARROW_DOWN" command="_eYB6hLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5FLe6EeOxntPoYxjofg" keySequence="ALT+ARROW_RIGHT" command="_eYDIlLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Fbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+DEL" command="_eX1tNbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Fre6EeOxntPoYxjofg" keySequence="SHIFT+F12" command="_eX3igbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5F7e6EeOxntPoYxjofg" keySequence="F12" command="_eYDIk7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5GLe6EeOxntPoYxjofg" keySequence="F2" command="_eX9B8re6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Gbe6EeOxntPoYxjofg" keySequence="COMMAND+HOME" command="_eYChk7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Gre6EeOxntPoYxjofg" keySequence="COMMAND+END" command="_eX1GI7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5G7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+Y" command="_eYAsWbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5HLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+X" command="_eX5-s7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Hbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+CR" command="_eX0fJLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Hre6EeOxntPoYxjofg" keySequence="SHIFT+CR" command="_eX_eNbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5H7e6EeOxntPoYxjofg" keySequence="COMMAND+F10" command="_eYAFVre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5ILe6EeOxntPoYxjofg" keySequence="INSERT" command="_eX9B9be6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Ibe6EeOxntPoYxjofg" keySequence="COMMAND+L" command="_eYBTZre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Ire6EeOxntPoYxjofg" keySequence="COMMAND+J" command="_eX-3Nbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5I7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+K" command="_eX7Mwbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5JLe6EeOxntPoYxjofg" keySequence="COMMAND+K" command="_eYEWsLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Jbe6EeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_SUBTRACT" command="_eX5Xl7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Jre6EeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_ADD" command="_eX3iZre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5J7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_DIVIDE" command="_eX-3Ore6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5KLe6EeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_MULTIPLY" command="_eX_eObe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Kbe6EeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_DIVIDE" command="_eX4wire6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Kre6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+Q" command="_eX4Jd7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5K7e6EeOxntPoYxjofg" keySequence="END" command="_eX1GI7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5LLe6EeOxntPoYxjofg" keySequence="CTRL+." command="_eYFk07e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Lbe6EeOxntPoYxjofg" keySequence="HOME" command="_eYChk7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Lre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_LEFT" command="_eYBTb7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5L7e6EeOxntPoYxjofg" keySequence="SHIFT+END" command="_eX27VLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5MLe6EeOxntPoYxjofg" keySequence="COMMAND+ARROW_LEFT" command="_eYAFSre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Mbe6EeOxntPoYxjofg" keySequence="ALT+ARROW_UP" command="_eX5Xobe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Mre6EeOxntPoYxjofg" keySequence="COMMAND+D" command="_eX27Vbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5M7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+INSERT" command="_eX4Jebe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5NLe6EeOxntPoYxjofg" keySequence="COMMAND+ARROW_RIGHT" command="_eX7Mz7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Nbe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_RIGHT" command="_eYE9wLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Nre6EeOxntPoYxjofg" keySequence="ALT+DEL" command="_eX1GN7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5N7e6EeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_LEFT" command="_eX4Jc7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5OLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+A" command="_eYAFT7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Obe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_UP" command="_eX4wn7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Ore6EeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_DOWN" command="_eX5Xpre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5O7e6EeOxntPoYxjofg" keySequence="ALT+BS" command="_eX1tPre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5PLe6EeOxntPoYxjofg" keySequence="SHIFT+HOME" command="_eX0fHLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Pbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_RIGHT" command="_eX0fIbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+  </bindingTables>
+  <bindingTables xmi:id="_eXo5Pre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.javaEditorScope" bindingContext="_eXquHre6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXo5P7e6EeOxntPoYxjofg" keySequence="COMMAND+CTRL+\" command="_eYE9yre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5QLe6EeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_UP" command="_eX3idLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Qbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+\" command="_eYE9yre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Qre6EeOxntPoYxjofg" keySequence="COMMAND+O" command="_eX1tTbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Q7e6EeOxntPoYxjofg" keySequence="COMMAND+T" command="_eX-3K7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5RLe6EeOxntPoYxjofg" keySequence="COMMAND+/" command="_eX0fL7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Rbe6EeOxntPoYxjofg" keySequence="COMMAND+7" command="_eX0fL7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Rre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+U" command="_eX5Xqbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5R7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+M" command="_eYChgre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5SLe6EeOxntPoYxjofg" keySequence="COMMAND+I" command="_eX-3Jbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Sbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+P" command="_eX27YLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Sre6EeOxntPoYxjofg" keySequence="COMMAND+F3" command="_eYAFSLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5S7e6EeOxntPoYxjofg" keySequence="COMMAND+CTRL+/" command="_eX8a7re6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5TLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+O" command="_eX0fGLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Tbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_eX0fL7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Tre6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_UP" command="_eYAsWLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5T7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_eYDvqbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5ULe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eX4wkbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Ube6EeOxntPoYxjofg" keySequence="COMMAND+2 R" command="_eX1GPre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5Ure6EeOxntPoYxjofg" keySequence="COMMAND+2 L" command="_eX27Ube6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5U7e6EeOxntPoYxjofg" keySequence="COMMAND+2 F" command="_eX5XpLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXo5VLe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_eX-QIbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXo5Vbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+B" command="_eYB6gre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpf8Le6EeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_DOWN" command="_eYE9xbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpf8be6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_eX7Mzre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpf8re6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javaEditorScope" bindingContext="_eXquHLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpf87e6EeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_UP" command="_eX27Vre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpf9Le6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+\" command="_eX27ULe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf9be6EeOxntPoYxjofg" keySequence="COMMAND+O" command="_eYEWt7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf9re6EeOxntPoYxjofg" keySequence="COMMAND+T" command="_eYDvtLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf97e6EeOxntPoYxjofg" keySequence="COMMAND+/" command="_eYChm7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf-Le6EeOxntPoYxjofg" keySequence="COMMAND+7" command="_eYChm7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf-be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+U" command="_eX0fNbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpf-re6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+M" command="_eX8a77e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf-7e6EeOxntPoYxjofg" keySequence="COMMAND+I" command="_eX1tP7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf_Le6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+P" command="_eX5-pre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf_be6EeOxntPoYxjofg" keySequence="COMMAND+F3" command="_eX4Jibe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf_re6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+T" command="_eX6lzbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpf_7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+O" command="_eX5XqLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgALe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_eYChm7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgAbe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_UP" command="_eX9pGre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgAre6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_eX_eQ7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgA7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eYChjre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgBLe6EeOxntPoYxjofg" keySequence="COMMAND+2 R" command="_eYDIoLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgBbe6EeOxntPoYxjofg" keySequence="COMMAND+2 L" command="_eX4whLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgBre6EeOxntPoYxjofg" keySequence="COMMAND+2 F" command="_eX4Jhbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgB7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_eYChkbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgCLe6EeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_DOWN" command="_eYDImLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgCbe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_eX0fF7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgCre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javascriptViewScope" bindingContext="_eXquHbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgC7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+C" command="_eYDInbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgDLe6EeOxntPoYxjofg" keySequence="COMMAND+G" command="_eX8a7be6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgDbe6EeOxntPoYxjofg" keySequence="SHIFT+F2" command="_eX1GOre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgDre6EeOxntPoYxjofg" keySequence="F3" command="_eX7Myre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgD7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Z" command="_eX0fI7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgELe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+O" command="_eX2UQre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgEbe6EeOxntPoYxjofg" keySequence="F4" command="_eYFk17e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgEre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+U" command="_eX5-u7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgE7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_eX1GIre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgFLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+T" command="_eX0fH7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgFbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+V" command="_eX4JgLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgFre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+L" command="_eX1tTre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgF7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+M" command="_eX5XrLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgGLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+S" command="_eX5-q7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgGbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+I" command="_eX-3JLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgGre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+H" command="_eX3ifbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgG7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+J" command="_eX2USbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgHLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q P" command="_eX_eR7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgHbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q D" command="_eYEWwre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgHre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q J" command="_eYAFSbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgH7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q T" command="_eX3igLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgILe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+G" command="_eX9pAbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgIbe6EeOxntPoYxjofg" keySequence="ALT+CTRL+H" command="_eYE9y7e6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgIre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" bindingContext="_eXqHWre6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgI7e6EeOxntPoYxjofg" keySequence="COMMAND+\" command="_eYBTbbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgJLe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_UP" command="_eX7z3re6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgJbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+\" command="_eYBTbbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgJre6EeOxntPoYxjofg" keySequence="COMMAND+O" command="_eYB6fre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgJ7e6EeOxntPoYxjofg" keySequence="F3" command="_eX3iZLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgKLe6EeOxntPoYxjofg" keySequence="COMMAND+/" command="_eX3idre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgKbe6EeOxntPoYxjofg" keySequence="COMMAND+I" command="_eX0fMLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgKre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+P" command="_eX5-sre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgK7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+/" command="_eX3idre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgLLe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+." command="_eX2UWbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgLbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_eX1tQLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgLre6EeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_DOWN" command="_eX1tUbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgL7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_UP" command="_eYDvqLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgMLe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_eX6lx7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgMbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_eX6lwLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgMre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_UP" command="_eYDvqLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgM7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eX27U7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgNLe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_eX1GRbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgNbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_DOWN" command="_eX1GRbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgNre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+>" command="_eX2UWbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgN7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_eYChj7e6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgOLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editorScope" bindingContext="_eXquFre6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgObe6EeOxntPoYxjofg" keySequence="F12" command="_eX7MyLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgOre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_eYAFWLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgO7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+A" command="_eYAFWLe6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgPLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.pdeEditorContext" bindingContext="_eXquH7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgPbe6EeOxntPoYxjofg" keySequence="COMMAND+O" command="_eYDvr7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgPre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eX-3Nre6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgP7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" bindingContext="_eXqHU7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgQLe6EeOxntPoYxjofg" keySequence="COMMAND+G" command="_eX27bLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgQbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+," command="_eYEWvre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgQre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+." command="_eX0fFLe6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgQ7e6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.AntEditorScope" bindingContext="_eXqHWbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgRLe6EeOxntPoYxjofg" keySequence="SHIFT+F2" command="_eX-3Ire6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgRbe6EeOxntPoYxjofg" keySequence="F3" command="_eX3ia7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgRre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_eX8a5Le6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgR7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+O" command="_eYEWwLe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_eXpgSLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eX4wkbe6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgSbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memoryview" bindingContext="_eXquIbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgSre6EeOxntPoYxjofg" keySequence="COMMAND+T" command="_eX4wg7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgS7e6EeOxntPoYxjofg" keySequence="COMMAND+N" command="_eX3iere6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgTLe6EeOxntPoYxjofg" keySequence="COMMAND+W" command="_eX3iYLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgTbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+N" command="_eX9B9Le6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgTre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+M" command="_eX0fK7e6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgT7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.propertiesEditorScope" bindingContext="_eXquILe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgULe6EeOxntPoYxjofg" keySequence="COMMAND+/" command="_eX0fL7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgUbe6EeOxntPoYxjofg" keySequence="COMMAND+7" command="_eX0fL7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgUre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_eX0fL7e6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgU7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.debugging" bindingContext="_eXqHUre6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgVLe6EeOxntPoYxjofg" keySequence="COMMAND+R" command="_eX2UV7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgVbe6EeOxntPoYxjofg" keySequence="COMMAND+F2" command="_eX27are6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgVre6EeOxntPoYxjofg" keySequence="F8" command="_eYFk2re6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgV7e6EeOxntPoYxjofg" keySequence="F7" command="_eX7Mzbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgWLe6EeOxntPoYxjofg" keySequence="F6" command="_eX0fKLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgWbe6EeOxntPoYxjofg" keySequence="F5" command="_eYB6hre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgWre6EeOxntPoYxjofg" keySequence="ALT+F5" command="_eYBTYbe6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgW7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.BreakpointView" bindingContext="_eXqHVre6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgXLe6EeOxntPoYxjofg" keySequence="ALT+CR" command="_eYChgLe6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXpgXbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" bindingContext="_eXqHULe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXpgXre6EeOxntPoYxjofg" keySequence="COMMAND+V" command="_eX1GL7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXpgX7e6EeOxntPoYxjofg" keySequence="COMMAND+C" command="_eX9CCLe6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXqHALe6EeOxntPoYxjofg" elementId="org.eclipse.ui.serverViewScope" bindingContext="_eXqHVbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXqHAbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+P" command="_eYB6gLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXqHAre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_eYChhre6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXqHA7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+S" command="_eX_eO7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXqHBLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+D" command="_eX6lvbe6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXqHBbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ReflogView" bindingContext="_eXqHUbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXqHBre6EeOxntPoYxjofg" keySequence="COMMAND+C" command="_eX2UTbe6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXqHB7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.java.editorScope" bindingContext="_eXquG7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXqHCLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_eYAFWLe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_eXqHCbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+A" command="_eYAFWLe6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXqHCre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" bindingContext="_eXquJre6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXqHC7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+B" command="_eYB6gre6EeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+  </bindingTables>
+  <bindingTables xmi:id="_eXqHDLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.console" bindingContext="_eXqHV7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXqHDbe6EeOxntPoYxjofg" keySequence="CTRL+D" command="_eX27Ybe6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXqHDre6EeOxntPoYxjofg" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" bindingContext="_eXquI7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_eXqHD7e6EeOxntPoYxjofg" keySequence="M1+W" command="_eYFk4Le6EeOxntPoYxjofg"/>
+  </bindingTables>
+  <bindingTables xmi:id="_eXqHELe6EeOxntPoYxjofg" bindingContext="_eXquJ7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHEbe6EeOxntPoYxjofg" bindingContext="_eXquKLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHEre6EeOxntPoYxjofg" bindingContext="_eXquKbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHE7e6EeOxntPoYxjofg" bindingContext="_eXquKre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHFLe6EeOxntPoYxjofg" bindingContext="_eXquK7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHFbe6EeOxntPoYxjofg" bindingContext="_eXquLLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHFre6EeOxntPoYxjofg" bindingContext="_eXquLbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHF7e6EeOxntPoYxjofg" bindingContext="_eXquLre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHGLe6EeOxntPoYxjofg" bindingContext="_eXquL7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHGbe6EeOxntPoYxjofg" bindingContext="_eXquMLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHGre6EeOxntPoYxjofg" bindingContext="_eXquMbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHG7e6EeOxntPoYxjofg" bindingContext="_eXquMre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHHLe6EeOxntPoYxjofg" bindingContext="_eXquM7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHHbe6EeOxntPoYxjofg" bindingContext="_eXquNLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHHre6EeOxntPoYxjofg" bindingContext="_eXquNbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHH7e6EeOxntPoYxjofg" bindingContext="_eXquNre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHILe6EeOxntPoYxjofg" bindingContext="_eXquN7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHIbe6EeOxntPoYxjofg" bindingContext="_eXquOLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHIre6EeOxntPoYxjofg" bindingContext="_eXquObe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHI7e6EeOxntPoYxjofg" bindingContext="_eXquOre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHJLe6EeOxntPoYxjofg" bindingContext="_eXquO7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHJbe6EeOxntPoYxjofg" bindingContext="_eXquPLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHJre6EeOxntPoYxjofg" bindingContext="_eXquPbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHJ7e6EeOxntPoYxjofg" bindingContext="_eXquPre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHKLe6EeOxntPoYxjofg" bindingContext="_eXquP7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHKbe6EeOxntPoYxjofg" bindingContext="_eXquQLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHKre6EeOxntPoYxjofg" bindingContext="_eXquQbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHK7e6EeOxntPoYxjofg" bindingContext="_eXquQre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHLLe6EeOxntPoYxjofg" bindingContext="_eXquQ7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHLbe6EeOxntPoYxjofg" bindingContext="_eXquRLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHLre6EeOxntPoYxjofg" bindingContext="_eXquRbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHL7e6EeOxntPoYxjofg" bindingContext="_eXquRre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHMLe6EeOxntPoYxjofg" bindingContext="_eXquR7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHMbe6EeOxntPoYxjofg" bindingContext="_eXquSLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHMre6EeOxntPoYxjofg" bindingContext="_eXquSbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHM7e6EeOxntPoYxjofg" bindingContext="_eXquSre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHNLe6EeOxntPoYxjofg" bindingContext="_eXquS7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHNbe6EeOxntPoYxjofg" bindingContext="_eXquTLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHNre6EeOxntPoYxjofg" bindingContext="_eXquTbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHN7e6EeOxntPoYxjofg" bindingContext="_eXquTre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHOLe6EeOxntPoYxjofg" bindingContext="_eXquT7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHObe6EeOxntPoYxjofg" bindingContext="_eXquULe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHOre6EeOxntPoYxjofg" bindingContext="_eXquUbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHO7e6EeOxntPoYxjofg" bindingContext="_eXquUre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHPLe6EeOxntPoYxjofg" bindingContext="_eXquU7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHPbe6EeOxntPoYxjofg" bindingContext="_eXquVLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHPre6EeOxntPoYxjofg" bindingContext="_eXquVbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHP7e6EeOxntPoYxjofg" bindingContext="_eXquVre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHQLe6EeOxntPoYxjofg" bindingContext="_eXquV7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHQbe6EeOxntPoYxjofg" bindingContext="_eXquWLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHQre6EeOxntPoYxjofg" bindingContext="_eXquWbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHQ7e6EeOxntPoYxjofg" bindingContext="_eXquWre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHRLe6EeOxntPoYxjofg" bindingContext="_eXquW7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHRbe6EeOxntPoYxjofg" bindingContext="_eXquXLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHRre6EeOxntPoYxjofg" bindingContext="_eXquXbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHR7e6EeOxntPoYxjofg" bindingContext="_eXquXre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHSLe6EeOxntPoYxjofg" bindingContext="_eXquX7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHSbe6EeOxntPoYxjofg" bindingContext="_eXquYLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHSre6EeOxntPoYxjofg" bindingContext="_eXquYbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_eXqHS7e6EeOxntPoYxjofg" bindingContext="_eXquYre6EeOxntPoYxjofg"/>
+  <rootContext xmi:id="_eXqHTLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.dialogAndWindow" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs and Windows" description="Either a dialog or a window is open">
+    <children xmi:id="_eXqHTbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.window" contributorURI="platform:/plugin/org.eclipse.platform" name="In Windows" description="A window is open">
+      <children xmi:id="_eXqHTre6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.contexts.views" contributorURI="platform:/plugin/org.eclipse.platform" name="%bindingcontext.name.bindingView"/>
+      <children xmi:id="_eXqHT7e6EeOxntPoYxjofg" elementId="org.eclipse.compare.compareEditorScope" name="Comparing in an Editor" description="Comparing in an Editor"/>
+      <children xmi:id="_eXqHULe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" name="In Git Repositories View"/>
+      <children xmi:id="_eXqHUbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ReflogView" name="In Git Reflog View"/>
+      <children xmi:id="_eXqHUre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.debugging" name="Debugging" description="Debugging programs">
+        <children xmi:id="_eXqHU7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" name="In Table Memory Rendering" description="In Table Memory Rendering"/>
+        <children xmi:id="_eXqHVLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.debugging" name="Debugging Java" description="Debugging Java programs"/>
+      </children>
+      <children xmi:id="_eXqHVbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.serverViewScope" name="In Servers View" description="In Servers View"/>
+      <children xmi:id="_eXqHVre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.BreakpointView" name="In Breakpoints View" description="The breakpoints view context"/>
+      <children xmi:id="_eXqHV7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.console" name="In I/O Console" description="In I/O console"/>
+      <children xmi:id="_eXqHWLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.textEditorScope" name="Editing Text" description="Editing Text Context">
+        <children xmi:id="_eXqHWbe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.AntEditorScope" name="Editing Ant Buildfiles" description="Editing Ant Buildfiles Context"/>
+        <children xmi:id="_eXqHWre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors">
+          <children xmi:id="_eXqHW7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.html.occurrences" name="HTML Source Occurrences" description="HTML Source Occurrences"/>
+          <children xmi:id="_eXqHXLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.html.core.htmlsource" name="Editing HTML Source" description="Editing HTML Source"/>
+          <children xmi:id="_eXqHXbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.occurrences" name="XML Source Occurrences" description="XML Source Occurrences"/>
+          <children xmi:id="_eXqHXre6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.navigation" name="XML Source Navigation" description="XML Source Navigation"/>
+          <children xmi:id="_eXquELe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.cleanup" name="XML Source Cleanup" description="XML Source Cleanup"/>
+          <children xmi:id="_eXquEbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.grammar" name="XML Source Grammar" description="XML Source Grammar"/>
+          <children xmi:id="_eXquEre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.comments" name="Source Comments in Structured Text Editors" description="Source Comments in Structured Text Editors"/>
+          <children xmi:id="_eXquE7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.selection" name="XML Source Selection" description="XML Source Selection"/>
+          <children xmi:id="_eXquFLe6EeOxntPoYxjofg" elementId="org.eclipse.core.runtime.xml" name="Editing XML Source" description="Editing XML Source"/>
+          <children xmi:id="_eXquFbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.comments" name="XML Source Comments" description="XML Source Comments"/>
+          <children xmi:id="_eXquFre6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editorScope" name="WindowBuilder XML scope"/>
+          <children xmi:id="_eXquF7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.hideFormat" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors"/>
+          <children xmi:id="_eXquGLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.css.core.csssource" name="Editing CSS Source" description="Editing CSS Source"/>
+          <children xmi:id="_eXquGbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.dependencies" name="XML Source Dependencies" description="XML Source Dependencies"/>
+          <children xmi:id="_eXquGre6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.expand" name="XML Source Expand/Collapse" description="XML Source Expand/Collapse"/>
+        </children>
+        <children xmi:id="_eXquG7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.java.editorScope" name="WindowBuilder Java scope"/>
+        <children xmi:id="_eXquHLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javaEditorScope" name="Editing JavaScript Source" description="Editing JavaScript Source Context">
+          <children xmi:id="_eXquHbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javascriptViewScope" name="JavaScript View" description="JavaScript View Context"/>
+        </children>
+        <children xmi:id="_eXquHre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.javaEditorScope" name="Editing Java Source" description="Editing Java Source Context"/>
+        <children xmi:id="_eXquH7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.pdeEditorContext" name="PDE editor" description="The context used by PDE editors"/>
+        <children xmi:id="_eXquILe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.propertiesEditorScope" name="Editing Properties Files" description="Editing Properties Files Context"/>
+      </children>
+      <children xmi:id="_eXquIbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memoryview" name="In Memory View" description="In memory view"/>
+      <children xmi:id="_eXquIre6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" name="In Console View" description="In Console View"/>
+    </children>
+    <children xmi:id="_eXquI7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.dialog" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs" description="A dialog is open"/>
+  </rootContext>
+  <rootContext xmi:id="_eXquJLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.workbenchMenu" name="Workbench Menu" description="When no Workbench windows are active"/>
+  <rootContext xmi:id="_eXquJbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.actionSet" name="Action Set" description="Parent context for action sets"/>
+  <rootContext xmi:id="_eXquJre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" name="Editor Breadcrumb Navigation" description="Editor Breadcrumb Navigation Context"/>
+  <rootContext xmi:id="_eXquJ7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchAction" name="Auto::org.eclipse.wb.core.xml.editor.actions.SwitchAction"/>
+  <rootContext xmi:id="_eXquKLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchPairEditorAction" name="Auto::org.eclipse.wb.core.xml.editor.actions.SwitchPairEditorAction"/>
+  <rootContext xmi:id="_eXquKbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" name="Auto::org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction"/>
+  <rootContext xmi:id="_eXquKre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction" name="Auto::org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_eXquK7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" name="Auto::org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction"/>
+  <rootContext xmi:id="_eXquLLe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.actions.ManageBreakpointRulerAction" name="Auto::org.eclipse.ant.ui.actions.ManageBreakpointRulerAction"/>
+  <rootContext xmi:id="_eXquLbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.SnippetExecute" name="Auto::org.eclipse.jdt.debug.ui.SnippetExecute"/>
+  <rootContext xmi:id="_eXquLre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.SnippetDisplay" name="Auto::org.eclipse.jdt.debug.ui.SnippetDisplay"/>
+  <rootContext xmi:id="_eXquL7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.SnippetInspect" name="Auto::org.eclipse.jdt.debug.ui.SnippetInspect"/>
+  <rootContext xmi:id="_eXquMLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.propertiesfileeditor.BookmarkRulerAction" name="Auto::org.eclipse.jdt.internal.ui.propertiesfileeditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_eXquMbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.propertiesfileeditor.SelectRulerAction" name="Auto::org.eclipse.jdt.internal.ui.propertiesfileeditor.SelectRulerAction"/>
+  <rootContext xmi:id="_eXquMre6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.BookmarkRulerAction" name="Auto::org.eclipse.ui.texteditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_eXquM7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.SelectRulerAction" name="Auto::org.eclipse.ui.texteditor.SelectRulerAction"/>
+  <rootContext xmi:id="_eXquNLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.editor.actions.SwitchAction" name="Auto::org.eclipse.wb.core.editor.actions.SwitchAction"/>
+  <rootContext xmi:id="_eXquNbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.javaeditor.BookmarkRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.javaeditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_eXquNre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.javaeditor.JavaSelectRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.javaeditor.JavaSelectRulerAction"/>
+  <rootContext xmi:id="_eXquN7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.BookmarkRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_eXquOLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.SelectRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.SelectRulerAction"/>
+  <rootContext xmi:id="_eXquObe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.actionSet.presentation" name="Auto::org.eclipse.ant.ui.actionSet.presentation"/>
+  <rootContext xmi:id="_eXquOre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.breakpointActionSet" name="Auto::org.eclipse.debug.ui.breakpointActionSet"/>
+  <rootContext xmi:id="_eXquO7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.debugActionSet" name="Auto::org.eclipse.debug.ui.debugActionSet"/>
+  <rootContext xmi:id="_eXquPLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.launchActionSet" name="Auto::org.eclipse.debug.ui.launchActionSet"/>
+  <rootContext xmi:id="_eXquPbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.profileActionSet" name="Auto::org.eclipse.debug.ui.profileActionSet"/>
+  <rootContext xmi:id="_eXquPre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.gitaction" name="Auto::org.eclipse.egit.ui.gitaction"/>
+  <rootContext xmi:id="_eXquP7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.navigation" name="Auto::org.eclipse.egit.ui.navigation"/>
+  <rootContext xmi:id="_eXquQLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.JDTDebugActionSet" name="Auto::org.eclipse.jdt.debug.ui.JDTDebugActionSet"/>
+  <rootContext xmi:id="_eXquQbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.JUnitActionSet" name="Auto::org.eclipse.jdt.junit.JUnitActionSet"/>
+  <rootContext xmi:id="_eXquQre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.text.java.actionSet.presentation" name="Auto::org.eclipse.jdt.ui.text.java.actionSet.presentation"/>
+  <rootContext xmi:id="_eXquQ7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet" name="Auto::org.eclipse.jdt.ui.JavaElementCreationActionSet"/>
+  <rootContext xmi:id="_eXquRLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaActionSet" name="Auto::org.eclipse.jdt.ui.JavaActionSet"/>
+  <rootContext xmi:id="_eXquRbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.A_OpenActionSet" name="Auto::org.eclipse.jdt.ui.A_OpenActionSet"/>
+  <rootContext xmi:id="_eXquRre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.CodingActionSet" name="Auto::org.eclipse.jdt.ui.CodingActionSet"/>
+  <rootContext xmi:id="_eXquR7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SearchActionSet" name="Auto::org.eclipse.jdt.ui.SearchActionSet"/>
+  <rootContext xmi:id="_eXquSLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.SearchActionSet" name="Auto::org.eclipse.pde.ui.SearchActionSet"/>
+  <rootContext xmi:id="_eXquSbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.actionSet" name="Auto::org.eclipse.ui.cheatsheets.actionSet"/>
+  <rootContext xmi:id="_eXquSre6EeOxntPoYxjofg" elementId="org.eclipse.search.searchActionSet" name="Auto::org.eclipse.search.searchActionSet"/>
+  <rootContext xmi:id="_eXquS7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.CVSActionSet" name="Auto::org.eclipse.team.cvs.ui.CVSActionSet"/>
+  <rootContext xmi:id="_eXquTLe6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.actionSet" name="Auto::org.eclipse.team.ui.actionSet"/>
+  <rootContext xmi:id="_eXquTbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.annotationNavigation" name="Auto::org.eclipse.ui.edit.text.actionSet.annotationNavigation"/>
+  <rootContext xmi:id="_eXquTre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.navigation" name="Auto::org.eclipse.ui.edit.text.actionSet.navigation"/>
+  <rootContext xmi:id="_eXquT7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo" name="Auto::org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo"/>
+  <rootContext xmi:id="_eXquULe6EeOxntPoYxjofg" elementId="org.eclipse.ui.externaltools.ExternalToolsSet" name="Auto::org.eclipse.ui.externaltools.ExternalToolsSet"/>
+  <rootContext xmi:id="_eXquUbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.NavigateActionSet" name="Auto::org.eclipse.ui.NavigateActionSet"/>
+  <rootContext xmi:id="_eXquUre6EeOxntPoYxjofg" elementId="org.eclipse.ui.actionSet.keyBindings" name="Auto::org.eclipse.ui.actionSet.keyBindings"/>
+  <rootContext xmi:id="_eXquU7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.WorkingSetModificationActionSet" name="Auto::org.eclipse.ui.WorkingSetModificationActionSet"/>
+  <rootContext xmi:id="_eXquVLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.WorkingSetActionSet" name="Auto::org.eclipse.ui.WorkingSetActionSet"/>
+  <rootContext xmi:id="_eXquVbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.actionSet.openFiles" name="Auto::org.eclipse.ui.actionSet.openFiles"/>
+  <rootContext xmi:id="_eXquVre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.presentation" name="Auto::org.eclipse.ui.edit.text.actionSet.presentation"/>
+  <rootContext xmi:id="_eXquV7e6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.core.actionSet" name="Auto::com.google.gdt.eclipse.core.actionSet"/>
+  <rootContext xmi:id="_eXquWLe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.actionSet.jpaElementCreation" name="Auto::org.eclipse.jpt.jpa.ui.actionSet.jpaElementCreation"/>
+  <rootContext xmi:id="_eXquWbe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.ui.actionset" name="Auto::org.eclipse.wb.core.ui.actionset"/>
+  <rootContext xmi:id="_eXquWre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.text.java.actionSet.presentation" name="Auto::org.eclipse.wst.jsdt.ui.text.java.actionSet.presentation"/>
+  <rootContext xmi:id="_eXquW7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaElementCreationActionSet" name="Auto::org.eclipse.wst.jsdt.ui.JavaElementCreationActionSet"/>
+  <rootContext xmi:id="_eXquXLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaActionSet" name="Auto::org.eclipse.wst.jsdt.ui.JavaActionSet"/>
+  <rootContext xmi:id="_eXquXbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.A_OpenActionSet" name="Auto::org.eclipse.wst.jsdt.ui.A_OpenActionSet"/>
+  <rootContext xmi:id="_eXquXre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.CodingActionSet" name="Auto::org.eclipse.wst.jsdt.ui.CodingActionSet"/>
+  <rootContext xmi:id="_eXquX7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.SearchActionSet" name="Auto::org.eclipse.wst.jsdt.ui.SearchActionSet"/>
+  <rootContext xmi:id="_eXquYLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui.new.actionSet" name="Auto::org.eclipse.wst.server.ui.new.actionSet"/>
+  <rootContext xmi:id="_eXquYbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui.internal.webbrowser.actionSet" name="Auto::org.eclipse.wst.server.ui.internal.webbrowser.actionSet"/>
+  <rootContext xmi:id="_eXquYre6EeOxntPoYxjofg" elementId="org.eclipse.wst.web.ui.wizardsActionSet" name="Auto::org.eclipse.wst.web.ui.wizardsActionSet"/>
+  <descriptors xmi:id="_eXquY7e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" allowMultiple="true" category="org.eclipse.e4.primaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor">
+    <tags>Editor</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXquZLe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.views.AntView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Ant</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXquZbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.DebugView" label="Debug" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/debug_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Debug</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXquZre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.BreakpointView" label="Breakpoints" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/breakpoint_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Debug</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXquZ7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.VariableView" label="Variables" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/variable_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Debug</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXquaLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.ExpressionView" label="Expressions" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/watchlist_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Debug</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXquabe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.RegisterView" label="Registers" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/register_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Debug</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVILe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.ModuleView" label="Modules" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/module_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Debug</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVIbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.MemoryView" label="Memory" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/memory_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Debug</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVIre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Git</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVI7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.StagingView" label="Git Staging" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/staging.png" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Git</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVJLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.CompareTreeView" label="Git Tree Compare" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/obj16/gitrepository.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Git</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVJbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ReflogView" label="Git Reflog" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/reflog.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Git</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVJre6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.HelpView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Help</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVJ7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.DisplayView" label="Display" iconURI="platform:/plugin/org.eclipse.jdt.debug.ui/icons/full/etool16/disp_sbook.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Debug</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVKLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.ResultView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVKbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVKre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypeHierarchy" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVK7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.ProjectsView" label="Projects" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/projects.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java Browsing</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVLLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackagesView" label="Packages" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/packages.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java Browsing</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVLbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypesView" label="Types" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/types.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java Browsing</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVLre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.MembersView" label="Members" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/members.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java Browsing</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVL7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.callhierarchy.view" label="Call Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/call_hierarchy.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVMLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.TemplatesView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVMbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SourceView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVMre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavadocView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Java</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVM7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.api.tools.ui.views.apitooling.views.apitoolingview" label="API Tools" iconURI="platform:/plugin/org.eclipse.pde.api.tools.ui/icons/full/obj16/api_tools.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:API Tools</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVNLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.RegistryBrowser" label="Plug-in Registry" iconURI="platform:/plugin/org.eclipse.pde.runtime/icons/eview16/registry.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Plug-in Development</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVNbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.PluginsView" label="Plug-ins" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/eview16/plugin_depend.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Plug-in Development</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVNre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.DependenciesView" label="Plug-in Dependencies" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/obj16/req_plugins_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Plug-in Development</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVN7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.TargetPlatformState" label="Target Platform State" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/obj16/target_profile_xml_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Plug-in Development</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVOLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.ImageBrowserView" label="Plug-in Image Browser" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/obj16/psearch_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Plug-in Development</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVObe6EeOxntPoYxjofg" elementId="org.eclipse.search.SearchResultView" label="Classic Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVOre6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.views.SearchView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVO7e6EeOxntPoYxjofg" elementId="org.eclipse.team.ccvs.ui.RepositoriesView" label="CVS Repositories" iconURI="platform:/plugin/org.eclipse.team.cvs.ui/icons/full/eview16/repo_rep.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:CVS</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVPLe6EeOxntPoYxjofg" elementId="org.eclipse.team.ccvs.ui.EditorsView" label="CVS Editors" iconURI="platform:/plugin/org.eclipse.team.cvs.ui/icons/full/eview16/rep_editors_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:CVS</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVPbe6EeOxntPoYxjofg" elementId="org.eclipse.team.sync.views.SynchronizeView" label="Synchronize" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/synch_synch.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Team</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVPre6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.GenericHistoryView" label="History" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/history_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Team</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVP7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVQLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.browser.view" label="Internal Web Browser" iconURI="platform:/plugin/org.eclipse.ui.browser/icons/obj16/internal_browser.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVQbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Help</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVQre6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVQ7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProgressView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVRLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ResourceNavigator" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.gif" category="org.eclipse.e4.primaryNavigationStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVRbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.BookmarkView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVRre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.TaskList" label="Tasks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/tasks_tsk.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVR7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVSLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.AllMarkersView" label="Markers" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVSbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigator.ProjectExplorer" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" category="org.eclipse.e4.primaryNavigationStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVSre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.PropertySheet" label="Properties" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/prop_ps.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVS7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.gif" category="org.eclipse.e4.secondaryNavigationStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVTLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.LogView" label="Error Log" iconURI="platform:/plugin/org.eclipse.ui.views.log/icons/eview16/error_log.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:General</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVTbe6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.DevModeView" label="Development Mode" iconURI="platform:/plugin/com.google.gwt.eclipse.oophm/icons/gwt_oophm_16x16.png" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Google</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVTre6EeOxntPoYxjofg" elementId="org.eclipse.jpt.ui.jpaStructureView" label="JPA Structure" iconURI="platform:/plugin/org.eclipse.jpt.jpa.ui/images/views/jpa-structure.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:JPA</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVT7e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.ui.jpaDetailsView" label="JPA Details" iconURI="platform:/plugin/org.eclipse.jpt.jpa.ui/images/views/jpa-details.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:JPA</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVULe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.StructureView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:WindowBuilder</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVUbe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.PaletteView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:WindowBuilder</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVUre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.PackageExplorer" label="Script Explorer" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/package.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:JavaScript</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVU7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.TypeHierarchy" label="Hierarchy" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/class_hi.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:JavaScript</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVVLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.callhierarchy.view" label="Call Hierarchy" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/call_hierarchy.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:JavaScript</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVVbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.SourceView" label="Declaration" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/source.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:JavaScript</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVVre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavadocView" label="Documentation" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/javadoc.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:JavaScript</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVV7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui.ServersView" label="Servers" iconURI="platform:/plugin/org.eclipse.wst.server.ui/icons/cview16/servers_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:Server</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVWLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.views.annotations.XMLAnnotationsView" label="Documentation" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/obj16/comment_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:XML</tags>
+  </descriptors>
+  <descriptors xmi:id="_eXrVWbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.contentmodel.view" label="Content Model" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/view16/hierarchy.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+    <tags>View</tags>
+    <tags>categoryTag:XML</tags>
+  </descriptors>
+  <commands xmi:id="_eXz4Jbe6EeOxntPoYxjofg" elementId="e4.exit" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.exit" description=""/>
+  <commands xmi:id="_eX0fELe6EeOxntPoYxjofg" elementId="e4.show.view" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.showView">
+    <parameters xmi:id="_eX0fEbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" contributorURI="platform:/plugin/org.eclipse.platform" name="View"/>
+  </commands>
+  <commands xmi:id="_eX0fEre6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveCommands" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.save"/>
+  <commands xmi:id="_eX0fE7e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveAllCommands" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.saveAll"/>
+  <commands xmi:id="_eX0fFLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.command.nextpage" commandName="Next Page of Memory" description="Load next page of memory" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fFbe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.GenerateDiff" commandName="Create Patch" description="Compare your workspace contents with the server and generate a diff file that can be used as a patch file." category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fFre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.removeTrailingWhitespace" commandName="Remove Trailing Whitespace" description="Removes the trailing whitespace of each line" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fF7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fGLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleMarkOccurrences" commandName="Toggle Mark Occurrences" description="Toggles mark occurrences in Java editors" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fGbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.spy.commands.spyCommand" commandName="Plug-in Selection Spy" description="Show the Plug-in Spy" category="_eYGL6be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fGre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.use.supertype" commandName="Use Supertype Where Possible" description="Change occurrences of a type to use a supertype instead" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fG7e6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.import" commandName="Import Profiles Command" description="Command to import connection profiles" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fHLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.textStart" commandName="Select Text Start" description="Select to the beginning of the text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fHbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.open.type.in.hierarchy" commandName="Open Type in Hierarchy" description="Open a type in the type hierarchy view" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fHre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaBrowsingPerspective" commandName="Java Browsing" description="Show the Java Browsing perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fH7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.refactor.quickMenu" commandName="Show Refactor Quick Menu" description="Shows the refactor quick menu" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fILe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.project" commandName="Read Access in Project" description="Search for read references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fIbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineEnd" commandName="Select Line End" description="Select to the end of the line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fIre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithHead" commandName="Compare with HEAD Revision" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fI7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.surround.with.quickMenu" commandName="Surround With Quick Menu" description="Shows the Surround With quick menu" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fJLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.smartEnterInverse" commandName="Insert Line Above Current Line" description="Adds a new line above the current line" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fJbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.externalTools.commands.OpenExternalToolsConfigurations" commandName="External Tools..." description="Open external tools launch configuration dialog" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fJre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaPerspective" commandName="JavaScript" description="Show the JavaScript perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fJ7e6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.TeamSynchronizingPerspective" commandName="Team Synchronizing" description="Open the Team Synchronizing Perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fKLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.StepOver" commandName="Step Over" description="Step over" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fKbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewOpenInEditor" commandName="Open in Editor" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fKre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.quickMenu" commandName="Surround With Quick Menu" description="Shows the Surround With quick menu" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fK7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.addMemoryMonitor" commandName="Add Memory Block" description="Add memory block" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fLLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRebase" commandName="Rebase" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fLbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.revertToSaved" commandName="Revert to Saved" description="Revert to the last saved state" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fLre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implement.occurrences" commandName="Search Implement Occurrences in File" description="Search for implement occurrences of a selected type" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fL7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggle.comment" commandName="Toggle Comment" description="Toggle comment the selected lines" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fMLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.format.active.elements" commandName="Format Active Elements" description="Format active elements" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fMbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.catch" commandName="Surround with try/catch Block" description="Surround the selected text with a try/catch block" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fMre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.convert.anonymous.to.nested" commandName="Convert Anonymous Class to Nested" description="Convert an anonymous class to a nested class" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fM7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.PushHeadToGerrit" commandName="Push Current Head to Gerrit" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fNLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineDown" commandName="Select Line Down" description="Extend the selection to the next line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fNbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.remove.occurrence.annotations" commandName="Remove Occurrence Annotations" description="Removes the occurrence annotations from the current editor" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX0fNre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.showContextMenu" commandName="Show Context Menu" description="Show the context menu" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GILe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.stash.drop" commandName="Delete Stashed Commit..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GIbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.markCompleted" commandName="Mark Completed" description="Mark the selected tasks as completed" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GIre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.rename.element" commandName="Rename - Refactoring " description="Rename the selected element" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GI7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.textEnd" commandName="Text End" description="Go to the end of the text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GJLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.copy.qualified.name" commandName="Copy Qualified Name" description="Copy a fully qualified name to the system clipboard" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GJbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.delete" commandName="Delete" description="Delete the selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GJre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewChangeCredentials" commandName="Change Credentials" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GJ7e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentAttributeMapAs" commandName="Map As" category="_eYGL8Le6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX1GKLe6EeOxntPoYxjofg" elementId="specifiedPersistentAttributeMappingKey" name="specified mapping key" optional="false"/>
+    <parameters xmi:id="_eX1GKbe6EeOxntPoYxjofg" elementId="defaultPersistentAttributeMappingKey" name="default mapping key" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX1GKre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.multicatch" commandName="Surround with try/multi-catch Block" description="Surround the selected text with a try/multi-catch block" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GK7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CreateTag" commandName="Create Tag" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GLLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ProfileLast" commandName="Profile" description="Launch in profile mode" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GLbe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentAttributeAddToXml" commandName="Add Attribute to XML" category="_eYGL8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GLre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace" commandName="References in Workspace" description="Search for references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GL7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewPaste" commandName="Paste Repository Path or URI" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GMLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.previous" commandName="Previous" description="Navigate to the previous item" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GMbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleBreadcrumb" commandName="Toggle Java Editor Breadcrumb" description="Toggle the Java editor breadcrumb" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GMre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.call.hierarchy" commandName="Open Call Hierarchy" description="Open a call hierarchy on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GM7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateTag" commandName="Create Tag..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GNLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.extractConstant.assist" commandName="Quick Assist - Extract constant" description="Invokes quick assist and selects 'Extract constant'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GNbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.newQuickMenu" commandName="New menu" description="Open the New menu" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GNre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deleteNext" commandName="Delete Next" description="Delete the next character" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GN7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deleteNextWord" commandName="Delete Next Word" description="Delete the next word" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GOLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.undo" commandName="Undo" description="Undo the last operation" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GObe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.DebugLast" commandName="Debug" description="Launch in debug mode" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GOre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.external.javadoc" commandName="Open External JSDoc" description="Open the JSDoc of the selected element in an external browser" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GO7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleLineBreakpoint" commandName="Toggle Line Breakpoint" description="Creates or removes a line breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GPLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.lineNumberToggle" commandName="Show Line Numbers" description="Toggle display of line numbers" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GPbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.workspace" commandName="Read Access in Workspace" description="Search for read references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GPre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.renameInFile.assist" commandName="Quick Assist - Rename in file" description="Invokes quick assist and selects 'Rename in file'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GP7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.newEditor" commandName="New Editor" description="Open another editor on the active editor's input" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GQLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.wordPrevious" commandName="Previous Word" description="Go to the previous word" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GQbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.installationDialog" commandName="Installation Information" description="Open the installation dialog" category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GQre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithIndex" commandName="Compare with Git Index" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GQ7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.shiftRight" commandName="Shift Right" description="Shift a block of text to the right" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GRLe6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.managedapis.updateCommand" commandName="Update Google API" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1GRbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.nextSibling" commandName="Next Sibling" description="Go to Next Sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tMLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.specific_content_assist.command" commandName="Content Assist" description="A parameterizable command that invokes content assist with a single completion proposal category" category="_eYGy8Le6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX1tMbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.specific_content_assist.category_id" name="type" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX1tMre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.Merge" commandName="Merge" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tM7e6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchWorkingSet" commandName="Find Text in Working Set" description="Searches the files in the working set for specific text." category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tNLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.working.set" commandName="References in Working Set" description="Search for references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tNbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delete.line.to.end" commandName="Delete to End of Line" description="Delete to the end of a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tNre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.nextEditor" commandName="Next Editor" description="Switch to the next editor" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tN7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.factory" commandName="Introduce Factory" description="Introduce a factory method to encapsulate invocation of the selected constructor" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tOLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ShowBlame" commandName="Show Annotations" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tObe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.forward" commandName="Forward" description="Navigate forward" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tOre6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.cmnd.contentmodel.sych" commandName="Synch" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tO7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.updateSwitch" commandName="Switch to Another Branch or Version" description="Switch to Another Branch or Version" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tPLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.replace.invocations" commandName="Replace Invocations" description="Replace invocations of the selected method" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tPbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.closeAllSaved" commandName="Close All Saved" description="Close all saved editors" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tPre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deletePreviousWord" commandName="Delete Previous Word" description="Delete the previous word" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tP7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.indent" commandName="Indent Line" description="Indents the current line" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tQLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.toggle.comment" commandName="Toggle Comment" description="Toggle Comment" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tQbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deletePrevious" commandName="Delete Previous" description="Delete the previous character" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tQre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.set.mark" commandName="Set Mark" description="Set the mark" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tQ7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.OpenCommit" commandName="Open Git Commit" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tRLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.RenameBranch" commandName="Rename Branch" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tRbe6EeOxntPoYxjofg" elementId="org.eclipse.epp.mpc.ui.command.showMarketplaceWizard" commandName="Eclipse Marketplace" description="Show the Eclipse Marketplace wizard" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tRre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.exit" commandName="Exit" description="Exit the application" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tR7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ConfigurePush" commandName="Configure Upstream Push" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tSLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.deleteCompleted" commandName="Delete Completed Tasks" description="Delete the tasks marked as completed" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tSbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.DebugPerspective" commandName="Debug" description="Open the debug perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tSre6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactoring.commands.deleteResources" commandName="Delete Resources" description="Delete the selected resources and notify LTK participants." category="_eYGy9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tS7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.generate.javadoc" commandName="Generate JSDoc" description="Generates JSDoc for a selectable set of JavaScript resources" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tTLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.next" commandName="Next" description="Navigate to the next item" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tTbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.show.outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tTre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.local.variable" commandName="Extract Local Variable" description="Extracts an expression into a new local variable and uses the new local variable" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tT7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.project" commandName="References in Project" description="Search for references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tULe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildAutomatically" commandName="Build Automatically" description="Toggle the workspace build automatically function" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tUbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tUre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.workspace" commandName="Declaration in Workspace" description="Search for declarations of the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tU7e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.xmlFileUpgradeToLatestVersion" commandName="Upgrade JPA Document Version" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX1tVLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.hierarchy" commandName="References in Hierarchy" description="Search for references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UQLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.openDependencies" commandName="Open Plug-in Dependencies" description="Opens the plug-in dependencies view for the current plug-in" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UQbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.ProjectsView" commandName="JavaScript Projects" description="Show the Projects view" category="_eYGL6re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UQre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.organize.imports" commandName="Organize Imports" description="Evaluate all required imports and replace the current imports" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UQ7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.rerunFailedFirst" commandName="Rerun JUnit Test - Failures First" description="Rerun JUnit Test - Failures First" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2URLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.browser.openBundleResource" commandName="Open Resource in Browser" description="Opens a bundle resource in the default web browser." category="_eYGL57e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX2URbe6EeOxntPoYxjofg" elementId="plugin" name="Plugin"/>
+    <parameters xmi:id="_eX2URre6EeOxntPoYxjofg" elementId="path" name="Path"/>
+  </commands>
+  <commands xmi:id="_eX2UR7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.interface" commandName="Extract Interface" description="Extract a set of members into a new interface and try to use the new interface" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2USLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ContinueRebase" commandName="Continue Rebase" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2USbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.javadoc.comment" commandName="Add JSDoc Comment" description="Add a JSDoc comment stub to the member element" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2USre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.preferences" commandName="Preferences" description="Open the preferences dialog" category="_eYGL57e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX2US7e6EeOxntPoYxjofg" elementId="preferencePageId" name="Preference Page"/>
+  </commands>
+  <commands xmi:id="_eX2UTLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowWhitespaceCharacters" commandName="Show Whitespace Characters" description="Shows whitespace characters in current text editor" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UTbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.internal.reflog.CopyCommand" commandName="Copy" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UTre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.close" commandName="Close" description="Close the active editor" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UT7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.newWizard" commandName="New" description="Open the New item wizard" category="_eYGL67e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX2UULe6EeOxntPoYxjofg" elementId="newWizardId" name="New Wizard"/>
+  </commands>
+  <commands xmi:id="_eX2UUbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.inline" commandName="Inline" description="Inline a constant, local variable or method" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UUre6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.showHistory" commandName="Show History" description="Show History" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UU7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.tipsAndTricksAction" commandName="Tips and Tricks" description="Open the tips and tricks help page" category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UVLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.hierarchy" commandName="Write Access in Hierarchy" description="Search for write references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UVbe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.newMappingFile" commandName="JPA ORM Mapping File" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UVre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.extractConstant.assist" commandName="Quick Assist - Extract constant" description="Invokes quick assist and selects 'Extract constant'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UV7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.RunToLine" commandName="Run to Line" description="Resume and break when execution reaches the current line" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UWLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.quick.format" commandName="Format Element" description="Format enclosing text element" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UWbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.gotoMatchingTag" commandName="Matching Tag" description="Go to Matching Tag" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UWre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.infer.type.arguments" commandName="Infer Generic Type Arguments" description="Infer type arguments for references to generic classes and remove unnecessary casts" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UW7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Restart" commandName="Restart" description="Restart a process or debug target without terminating and re-launching" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UXLe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.newEntity" commandName="JPA Entity" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UXbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.openResource" commandName="Open Resource" description="Open an editor on a particular resource" category="_eYGy9re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX2UXre6EeOxntPoYxjofg" elementId="filePath" name="File Path" typeId="org.eclipse.ui.ide.resourcePath"/>
+  </commands>
+  <commands xmi:id="_eX2UX7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.InstanceCount" commandName="Instance Count" description="View the instance count of the selected type loaded in the target VM" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UYLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.helpContents" commandName="Help Contents" description="Open the help contents" category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UYbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.qualifyField" commandName="Quick Fix - Qualify field access" description="Invokes quick assist and selects 'Qualify field access'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX2UYre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.saveAll" commandName="Save All" description="Save all current contents" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27ULe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.remove.block.comment" commandName="Remove Block Comment" description="Remove the block comment enclosing the selection" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Ube6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.assignToLocal.assist" commandName="Quick Assist - Assign to local variable" description="Invokes quick assist and selects 'Assign to local variable'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Ure6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.runtimeWorkbenchShortcut.debug" commandName="Debug Eclipse Application" description="Debug Eclipse Application" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27U7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.format.document" commandName="Format" description="Format selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27VLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.textEnd" commandName="Select Text End" description="Select to the end of the text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Vbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delete.line" commandName="Delete Line" description="Delete a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Vre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.goto.previous.member" commandName="Go to Previous Member" description="Move the caret to the previous member of the JavaScript file" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27V7e6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchProject" commandName="Find Text in Project" description="Searches the files in the project for specific text." category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27WLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.commands.openElementInEditor" commandName="Open Java Element" description="Open a Java element in its editor" category="_eYGy9re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX27Wbe6EeOxntPoYxjofg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX27Wre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.maximizePart" commandName="Maximize Active View or Editor" description="Toggles maximize/restore state of active view or editor" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27W7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.configureColumns" commandName="Configure Columns..." description="Configure the columns in the markers view" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27XLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AddClassPrepareBreakpoint" commandName="Add Class Load Breakpoint" description="Add a class load breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Xbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.EquinoxLaunchShortcut.run" commandName="Run OSGi Framework" description="Run OSGi Framework" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Xre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.CherryPick" commandName="Cherry Pick" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27X7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.revisions.id.toggle" commandName="Toggle Revision Id Display" description="Toggles the display of the revision id" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27YLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket" commandName="Go to Matching Bracket" description="Moves the cursor to the matching bracket" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Ybe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.eof" commandName="EOF" description="Send end of file" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Yre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.method.exits" commandName="Search Method Exit Occurrences in File" description="Search for method exit occurrences of a selected return type" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Y7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.quickdiff.revert" commandName="Revert Lines" description="Revert the current selection, block or deleted lines" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27ZLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.pageDown" commandName="Page Down" description="Go down one page" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Zbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.goInto" commandName="Go Into" description="Navigate into the selected item" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Zre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.windowStart" commandName="Window Start" description="Go to the start of the window" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27Z7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.super.implementation" commandName="Open Super Implementation" description="Open the Implementation in the Super Type" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27aLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addBlock.assist" commandName="Quick Assist - Replace statement with block" description="Invokes quick assist and selects 'Replace statement with block'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27abe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.createAntBuildFile" commandName="Create Ant Build File" description="Creates an Ant build file for the current project" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27are6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Terminate" commandName="Terminate" description="Terminate" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27a7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.spy.commands.menuSpyCommand" commandName="Plug-in Menu Spy" description="Show the Plug-in Spy" category="_eYGL6be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27bLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.command.gotoaddress" commandName="Go to Address" description="Go to Address" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27bbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.use.supertype" commandName="Use Supertype Where Possible" description="Change occurrences of a type to use a supertype instead" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27bre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.switchToEditor" commandName="Switch to Editor" description="Switch to an editor" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27b7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.previousView" commandName="Previous View" description="Switch to the previous view" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX27cLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.hierarchy" commandName="Write Access in Hierarchy" description="Search for write references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iYLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.closeRendering" commandName="Close Rendering" description="Close the selected rendering." category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iYbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.linkWithEditor" commandName="Toggle Link with Editor " description="Toggles linking of a view's selection with the active editor's selection" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iYre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.convert.anonymous.to.nested" commandName="Convert Anonymous Class to Nested" description="Convert an anonymous class to a nested class" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iY7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.open.type" commandName="Open Type" description="Open a type in a Java editor" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iZLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.open.file.from.source" commandName="Open Selection" description="Open an editor on the selected link" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iZbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.previousPerspective" commandName="Previous Perspective" description="Switch to the previous perspective" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iZre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.expand" commandName="Expand" description="Expands the folded region at the current selection" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iZ7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRemove" commandName="Remove Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iaLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.working.set" commandName="Read Access in Working Set" description="Search for read references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iabe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.gotoTest" commandName="Referring Tests" description="Referring Tests" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iare6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareWithWorkingTree" commandName="Compare with Working Directory" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ia7e6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.open.declaration.command" commandName="Open Declaration" description="Opens the Ant editor on the referenced element" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ibLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implementors.in.project" commandName="Implementors in Project" description="Search for implementors of the selected interface in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ibbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.closePart" commandName="Close Part" description="Close the active workbench part" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ibre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ib7e6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactor.apply.refactoring.script" commandName="Apply Script" description="Perform refactorings from a refactoring script on the local workspace" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3icLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.infer.type.arguments" commandName="Infer Generic Type Arguments" description="Infer type arguments for references to generic classes and remove unnecessary casts" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3icbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.correction.assist.proposals" commandName="Quick Fix" description="Suggest possible fixes for a problem" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3icre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Watch" commandName="Watch" description="Create new watch expression" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ic7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Untrack" commandName="Untrack" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3idLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.previous.member" commandName="Go to Previous Member" description="Move the caret to the previous member of the compilation unit" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3idbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildProject" commandName="Build Project" description="Build the selected project" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3idre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.add.block.comment" commandName="Add Block Comment" description="Add Block Comment" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3id7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.showSystemMenu" commandName="Show System Menu" description="Show the system menu" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ieLe6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.core.gwtCompileProject" commandName="GWT Compile Project" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iebe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.self.encapsulate.field" commandName="Encapsulate Field" description="Create getting and setting methods for the field and use only those to access the field" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3iere6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.newRendering" commandName="New Rendering" description="Add a new rendering." category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ie7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.pageDown" commandName="Select Page Down" description="Select to the bottom of the page" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ifLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.SimplePush" commandName="Push to Upstream" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ifbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.open.type.in.hierarchy" commandName="Open Type in Hierarchy" description="Open a type in the type hierarchy view" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3ifre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.OpenInTextEditorCommand" commandName="Open in Text Editor" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3if7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.open.hyperlink" commandName="Open Hyperlink" description="Opens the hyperlink at the caret location or opens a chooser if more than one hyperlink is available" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3igLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.TypeHierarchy" commandName="JavaScript Type Hierarchy" description="Show the Type Hierarchy view" category="_eYGL6re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3igbe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchPairEditorAction" commandName="Switch Source/Design Editors" description="Switch between the Source and Design editors." category="_eYGL77e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX3igre6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.convertJavaGenerators" commandName="Move Java Generators to XML..." category="_eYGL87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4JcLe6EeOxntPoYxjofg" elementId="org.eclipse.compare.selectPreviousChange" commandName="Select Previous Change" description="Select Previous Change" category="_eYGy9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jcbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.rename.element" commandName="Rename - Refactoring " description="Rename the selected element" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jcre6EeOxntPoYxjofg" elementId="org.eclipse.ui.ToggleCoolbarAction" commandName="Toggle Toolbar Visibility" description="Toggles the visibility of the window toolbar" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jc7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.wordPrevious" commandName="Select Previous Word" description="Select the previous word" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4JdLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findReplace" commandName="Find and Replace" description="Find and replace text" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jdbe6EeOxntPoYxjofg" elementId="org.eclipse.compare.copyLeftToRight" commandName="Copy from Left to Right" description="Copy Current Change from Left to Right" category="_eYGy9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jdre6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.applyPatch" commandName="Apply Patch..." description="Apply a patch to one or more workspace projects." category="_eYGy8re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jd7e6EeOxntPoYxjofg" elementId="org.eclipse.quickdiff.toggle" commandName="Quick Diff Toggle" description="Toggles quick diff information display on the line number ruler" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4JeLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRenameBranch" commandName="Rename Branch..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jebe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleInsertMode" commandName="Toggle Insert Mode" description="Toggle insert mode" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jere6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.editor" commandName="Open Declaration" description="Open an editor on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Je7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewAddToIndex" commandName="Add to Index" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4JfLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.nextSubTab" commandName="Next Sub-Tab" description="Switch to the next sub-tab" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jfbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.openPluginArtifact" commandName="Open Plug-in Artifact" description="Open a plug-in artifact in the manifest editor" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jfre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.quick.format" commandName="Format Element" description="Format enclosing text element" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jf7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.addBookmark" commandName="Add Bookmark" description="Add a bookmark" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4JgLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.move.element" commandName="Move - Refactoring " description="Move the selected element to a new location" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jgbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewAddRepository" commandName="Add a Git Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jgre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.MembersView" commandName="JavaScript Members" description="Show the Members view" category="_eYGL6re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jg7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.rebuildAll" commandName="Rebuild All" description="Rebuild all projects" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4JhLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.move.inner.to.top.level" commandName="Convert Member Type to Top Level" description="Convert member type to top level" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jhbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.assignToField.assist" commandName="Quick Assist - Assign to var" description="Invokes quick assist and selects 'Assign to var'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jhre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.activateEditor" commandName="Activate Editor" description="Activate the editor" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jh7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.organize.imports" commandName="Organize Imports" description="Evaluate all required imports and replace the current imports" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4JiLe6EeOxntPoYxjofg" elementId="org.eclipse.compare.copyAllRightToLeft" commandName="Copy All from Right to Left" description="Copy All Changes from Right to Left" category="_eYGy9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jibe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.java.open.structure" commandName="Open Structure" description="Show the structure of the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jire6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.PushCommit" commandName="Push Commit..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Ji7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.closeUnrelatedProjects" commandName="Close Unrelated Projects" description="Close unrelated projects" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4JjLe6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.managedapis.actions.apiImportProject" commandName="Add Google APIs..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jjbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureGerritRemote" commandName="Gerrit Configuration..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jjre6EeOxntPoYxjofg" elementId="org.eclipse.compare.ignoreWhiteSpace" commandName="Ignore White Space" description="Ignore white space where applicable" category="_eYGy9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4Jj7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleBreakpoint" commandName="Toggle Breakpoint" description="Creates or removes a breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4JkLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineDown" commandName="Line Down" description="Go down one line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wgLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.previousTab" commandName="Previous Tab" description="Switch to the previous tab" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wgbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.SkipRebase" commandName="Skip commit and continue" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wgre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoLastEditPosition" commandName="Last Edit Location" description="Last edit location" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wg7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.toggleMemoryMonitorsPane" commandName="Toggle Memory Monitors Pane" description="Toggle visibility of the Memory Monitors Pane" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4whLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.assignToLocal.assist" commandName="Quick Assist - Assign to local variable" description="Invokes quick assist and selects 'Assign to local variable'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4whbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.copyBuildIdCommand" commandName="Copy Build Id To Clipboard" description="Copies the build id to the clipboard." category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4whre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.hierarchy" commandName="Declaration in Hierarchy" description="Search for declarations of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wh7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.inlineLocal.assist" commandName="Quick Assist - Inline local variable" description="Invokes quick assist and selects 'Inline local variable'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wiLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.collapseAll" commandName="Collapse All" description="Collapse the current tree" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wibe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.submodule.update" commandName="Update Submodule" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wire6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.toggle" commandName="Toggle Folding" description="Toggles folding in the current editor" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wi7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.referencedFileErrors" commandName="Show Details..." description="Show Details..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wjLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.commands.showElementInTypeHierarchyView" commandName="Show JavaScript Element Type Hierarchy" description="Show a JavaScript element in the Type Hierarchy view" category="_eYGy9re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX4wjbe6EeOxntPoYxjofg" elementId="elementRef" name="JavaScript element reference" typeId="org.eclipse.wst.jsdt.ui.commands.javaElementReference" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX4wjre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.comment" commandName="Comment" description="Turn the selected lines into Java comments" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wj7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implementors.in.workspace" commandName="Implementors in Workspace" description="Search for implementors of the selected interface" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wkLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addNonNLS" commandName="Quick Fix - Add non-NLS tag" description="Invokes quick assist and selects 'Add non-NLS tag'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wkbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.format" commandName="Format" description="Format the selected text" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wkre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Display" commandName="Display" description="Display result of evaluating selected text" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wk7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseMembers" commandName="Collapse Members" description="Collapse all members" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wlLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.revert" commandName="Revert" description="Revert to the last saved state" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wlbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.clean.up" commandName="Clean Up" description="Solve problems and improve code style on selected resources" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wlre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.redo" commandName="Redo" description="Redo the last operation" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wl7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.join.lines" commandName="Join Lines" description="Join lines of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wmLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.externalize.strings" commandName="Externalize Strings" description="Finds all strings that are not externalized and moves them into a separate property file" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wmbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.pull.up" commandName="Pull Up" description="Move members to a superclass" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wmre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.forwardHistory" commandName="Forward History" description="Move forward in the editor navigation history" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wm7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.internationalize" commandName="Internationalize Plug-ins" description="Sets up internationalization for a plug-in" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wnLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.commit" commandName="Commit" description="Commit resources to the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wnbe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentAttributeAddToXmlAndMap" commandName="Add Attribute to XML and Map..." category="_eYGL8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wnre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.RunLast" commandName="Run" description="Launch in run mode" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wn7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.copyLineUp" commandName="Duplicate Lines" description="Duplicates the selected lines and leaves the selection unchanged" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4woLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addCast" commandName="Quick Fix - Add cast" description="Invokes quick assist and selects 'Add cast'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX4wobe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.refactor.quickMenu" commandName="Show Refactor Quick Menu" description="Shows the refactor quick menu" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5XkLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.CreateBranch" commandName="Create Branch..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xkbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.removeFromWorkingSet" commandName="Remove From Working Set" description="Removes the selected object from a working set." category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xkre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.debug" commandName="Debug Java Applet" description="Debug Java Applet" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xk7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ReplaceWithCommit" commandName="Replace with commit" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5XlLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.DeleteBranch" commandName="Delete Branch" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xlbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ApplyPatch" commandName="Apply Patch" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xlre6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.GenerateSwarmApiCommand" commandName="Generate Cloud Endpoint Client Library" description="Generate Cloud Endpoint Client Library" category="_eYGL8re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xl7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.collapse" commandName="Collapse" description="Collapses the folded region at the current selection" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5XmLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.gotopackage" commandName="Go to Package" description="Go to Package" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xmbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.project" commandName="Write Access in Project" description="Search for write references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xmre6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.sdk.install" commandName="Install New Software..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xm7e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.core.synchronizeClasses" commandName="Synchronize Class List" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5XnLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.nextView" commandName="Next View" description="Switch to the next view" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xnbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.run" commandName="Run JUnit Test" description="Run JUnit Test" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xnre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.properties" commandName="Properties" description="Display the properties of the selected item" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xn7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.exception.occurrences" commandName="Search Exception Occurrences in File" description="Search for exception occurrences of a selected exception type" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5XoLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.actions.WatchCommand" commandName="Watch" description="Create a watch expression from the current selection and add it to the Expressions view" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xobe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.moveLineUp" commandName="Move Lines Up" description="Moves the selected lines up" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xore6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.suite.newWebAppProject" commandName="New Web Application Project" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xo7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.TypesView" commandName="JavaScript Types" description="Show the Types view" category="_eYGL6re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5XpLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.assignToField.assist" commandName="Quick Assist - Assign to field" description="Invokes quick assist and selects 'Assign to field'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xpbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.modify.method.parameters" commandName="Change Method Signature" description="Change method signature includes parameter names and parameter order" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xpre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.copyLineDown" commandName="Copy Lines" description="Duplicates the selected lines and moves the selection to the copy" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xp7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.DeployProjectCommand" commandName="Deploy Project to Remote Server" description="Deploy WTP Project to Google App Engine" category="_eYGL8re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5XqLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.toggleMarkOccurrences" commandName="Toggle Mark Occurrences" description="Toggles mark occurrences in JavaScript editors" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xqbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.remove.occurrence.annotations" commandName="Remove Occurrence Annotations" description="Removes the occurrence annotations from the current editor" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xqre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addBlock.assist" commandName="Quick Assist - Replace statement with block" description="Invokes quick assist and selects 'Replace statement with block'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xq7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CherryPick" commandName="Cherry Pick" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5XrLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.method" commandName="Extract Function" description="Extract a set of statements or an expression into a new function and use the new function" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xrbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ConfigureUpstreamFetch" commandName="Configure Upstream Fetch" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xrre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Merge" commandName="Merge" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xr7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter" commandName="Introduce Parameter" description="Introduce a new method parameter based on the selected expression" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5XsLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.introduce.parameter" commandName="Introduce Parameter" description="Introduce a new function parameter based on the selected expression" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5Xsbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.refactor.migrate.jar" commandName="Migrate JAR File" description="Migrate a JAR File to a new version" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-oLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaseline" commandName="Reset quickdiff baseline" category="_eYGy8be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX5-obe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaselineTarget" name="Reset target (HEAD, HEAD^1)" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX5-ore6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.submodule.add" commandName="Add Submodule" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-o7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.find.broken.nls.keys" commandName="Find Broken Externalized Strings" description="Finds undefined, duplicate and unused externalized string keys in property files" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-pLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.rebuildProject" commandName="Rebuild Project" description="Rebuild the selected projects" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-pbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.clear.mark" commandName="Clear Mark" description="Clear the mark" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-pre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.goto.matching.bracket" commandName="Go to Matching Bracket" description="Moves the cursor to the matching bracket" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-p7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.updateClasspath" commandName="Update Classpath" description="Updates the plug-in classpath from latest settings" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-qLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ReplaceWithHead" commandName="Replace with HEAD revision" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-qbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.openCheatSheet" commandName="Open Cheat Sheet" description="Open a Cheat Sheet." category="_eYGy87e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX5-qre6EeOxntPoYxjofg" elementId="cheatSheetId" name="Identifier"/>
+  </commands>
+  <commands xmi:id="_eX5-q7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.source.quickMenu" commandName="Show Source Quick Menu" description="Shows the source quick menu" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-rLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewOpen" commandName="Open" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-rbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchCommit" commandName="Toggle Latest Branch Commit" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-rre6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.makePersistent" commandName="Make Persistent..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-r7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareVersions" commandName="Compare with each other" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-sLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.contentAssist.contextInformation" commandName="Context Information" description="Show Context Information" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-sbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.indirection" commandName="Introduce Indirection" description="Introduce an indirection to encapsulate invocations of a selected method" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-sre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.goto.matching.bracket" commandName="Matching Character" description="Go to Matching Character" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-s7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.upperCase" commandName="To Upper Case" description="Changes the selection to upper case" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-tLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.hierarchy" commandName="Declaration in Hierarchy" description="Search for declarations of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-tbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.DropToFrame" commandName="Drop to Frame" description="Drop to Frame" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-tre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewNewRemote" commandName="Create Remote..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-t7e6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.openFileSearchPage" commandName="File Search" description="Open the Search dialog's file search page" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-uLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CreatePatch" commandName="Create Patch" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-ube6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.generate.xml" commandName="&amp;XML File..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-ure6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.clean" commandName="Clean..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-u7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.occurrences.in.file.quickMenu" commandName="Show Occurrences in File Quick Menu" description="Shows the Occurrences in File quick menu" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-vLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.class" commandName="Extract Class..." description="Extracts fields into a new class" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-vbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.selectWorkingSets" commandName="Select Working Sets" description="Select the working sets that are applicable for this window." category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-vre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.superclass" commandName="Extract Superclass" description="Extract a set of members into a new superclass and try to use the new superclass" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX5-v7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.hierarchy" commandName="Read Access in Hierarchy" description="Search for read references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lsLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.command.configureTrace" commandName="Configure Git Debug Trace" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lsbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.folding.collapseMembers" commandName="Collapse Members" description="Collapse all members" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lsre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.working.set" commandName="Write Access in Working Set" description="Search for write references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6ls7e6EeOxntPoYxjofg" elementId="org.eclipse.compare.selectNextChange" commandName="Select Next Change" description="Select Next Change" category="_eYGy9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6ltLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.RemoveAllBreakpoints" commandName="Remove All Breakpoints" description="Removes all breakpoints" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6ltbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.newWindow" commandName="New Window" description="Open another window" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6ltre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showResourceByPath" commandName="Show Resource in Navigator" description="Show a resource in the Navigator given its path" category="_eYGy9re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX6lt7e6EeOxntPoYxjofg" elementId="resourcePath" name="Resource Path" typeId="org.eclipse.ui.ide.resourcePath" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX6luLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addImport" commandName="Quick Fix - Add import" description="Invokes quick assist and selects 'Add import'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lube6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.extractLocal.assist" commandName="Quick Assist - Extract local variable (replace all occurrences)" description="Invokes quick assist and selects 'Extract local variable (replace all occurrences)'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lure6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter.object" commandName="Introduce Parameter Object" description="Introduce a parameter object to a selected method" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lu7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.shiftLeft" commandName="Shift Left" description="Shift a block of text to the left" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lvLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implementors.in.working.set" commandName="Implementors in Working Set" description="Search for implementors of the selected interface in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lvbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.debug" commandName="Debug" description="Debug server" category="_eYGL9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lvre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.create.delegate.methods" commandName="Generate Delegate Methods" description="Add delegate methods for a type's fields" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lv7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.GenerateBackendProjectCommand" commandName="Generate App Engine Backend..." description="Generate App Engine Backend" category="_eYGL8re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lwLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.search.find.occurrences" commandName="Occurrences in File" description="Find occurrences of the selection in the file" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lwbe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.showAnnotation" commandName="Show Annotation" description="Show Annotation" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lwre6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.cleanAction" commandName="Build Clean" description="Discard old built state" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lw7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replace" commandName="Replace With Latest from Repository" description="Replace with last committed content from CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lxLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implement.occurrences" commandName="Search Implement Occurrences in File" description="Search for implement occurrences of a selected type" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lxbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.imagebrowser.saveToWorkspace" commandName="Save Image" description="Save the selected image into a project in the workspace" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lxre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addThrowsDecl" commandName="Quick Fix - Add throws declaration" description="Invokes quick assist and selects 'Add throws declaration'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lx7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lyLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.create.getter.setter" commandName="Generate Getters and Setters" description="Generate Getter and Setter methods for type's fields" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lybe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.windowStart" commandName="Select Window Start" description="Select to the start of the window" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lyre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.refactor.migrate.jar" commandName="Migrate JAR File" description="Migrate a JAR File to a new version" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6ly7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.outline.customFilter" commandName="&amp;Filters" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lzLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.super.implementation" commandName="Open Super Implementation" description="Open the Implementation in the Super Type" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lzbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.open.type" commandName="Open Type" description="Open a type in a JavaScript editor" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lzre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.closeAllPerspectives" commandName="Close All Perspectives" description="Close all open perspectives" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6lz7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.constant" commandName="Extract Constant" description="Extracts a constant into a new static var and uses the new static var" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX6l0Le6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.convertJavaProjectToJpa" commandName="Convert to JPA Project..." category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7MwLe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.entityMappingsAddPersistentClass" commandName="Add Class..." category="_eYGL8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7Mwbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findPrevious" commandName="Find Previous" description="Find previous item" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7Mwre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.changeToStatic" commandName="Quick Fix - Change to static access" description="Invokes quick assist and selects 'Change to static access'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7Mw7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView" commandName="Show View" description="Shows a particular view" category="_eYGL6re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX7MxLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="View"/>
+    <parameters xmi:id="_eX7Mxbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.secondaryId" name="Secondary Id"/>
+    <parameters xmi:id="_eX7Mxre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.makeFast" name="As FastView"/>
+  </commands>
+  <commands xmi:id="_eX7Mx7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.superclass" commandName="Extract Superclass" description="Extract a set of members into a new superclass and try to use the new superclass" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7MyLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchAction" commandName="Switch Source/Design Views" description="Switch between the Source and Design views." category="_eYGL77e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7Mybe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.cut.line.to.beginning" commandName="Cut to Beginning of Line" description="Cut to the beginning of a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7Myre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.editor" commandName="Open Declaration" description="Open an editor on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7My7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.goToResource" commandName="Go to" description="Go to a particular resource in the active view" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7MzLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareIndexWithHead" commandName="Compare File in Git Index with HEAD Revision" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7Mzbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.StepReturn" commandName="Step Return" description="Step return" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7Mzre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7Mz7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineEnd" commandName="Line End" description="Go to the end of the line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7M0Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.workspace" commandName="Write Access in Workspace" description="Search for write references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7M0be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delimiter.unix" commandName="Convert Line Delimiters to Unix (LF, \n, 0A, &#xb6;)" description="Converts the line delimiters to Unix (LF, \n, 0A, &#xb6;)" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7M0re6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.inlineLocal.assist" commandName="Quick Assist - Inline local variable" description="Invokes quick assist and selects 'Inline local variable'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7M07e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.convertLocalToField.assist" commandName="Quick Assist - Convert local variable to field" description="Invokes quick assist and selects 'Convert local variable to field'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7M1Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.dialogs.openMessageDialog" commandName="Open Message Dialog" description="Open a Message Dialog" category="_eYGL97e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX7M1be6EeOxntPoYxjofg" elementId="title" name="Title"/>
+    <parameters xmi:id="_eX7M1re6EeOxntPoYxjofg" elementId="message" name="Message"/>
+    <parameters xmi:id="_eX7M17e6EeOxntPoYxjofg" elementId="imageType" name="Image Type Constant" typeId="org.eclipse.ui.dialogs.Integer"/>
+    <parameters xmi:id="_eX7M2Le6EeOxntPoYxjofg" elementId="defaultIndex" name="Default Button Index" typeId="org.eclipse.ui.dialogs.Integer"/>
+    <parameters xmi:id="_eX7M2be6EeOxntPoYxjofg" elementId="buttonLabel0" name="First Button Label"/>
+    <parameters xmi:id="_eX7M2re6EeOxntPoYxjofg" elementId="buttonLabel1" name="Second Button Label"/>
+    <parameters xmi:id="_eX7M27e6EeOxntPoYxjofg" elementId="buttonLabel2" name="Third Button Label"/>
+    <parameters xmi:id="_eX7M3Le6EeOxntPoYxjofg" elementId="buttonLabel3" name="Fourth Button Label"/>
+    <parameters xmi:id="_eX7M3be6EeOxntPoYxjofg" elementId="cancelReturns" name="Return Value on Cancel"/>
+  </commands>
+  <commands xmi:id="_eX7M3re6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.OpenDebugConfigurations" commandName="Debug..." description="Open debug launch configuration dialog" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7M37e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewClearCredentials" commandName="Clear Credentials" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z0Le6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.add" commandName="Add to Version Control" description="Add the Selected Resources to Version Control" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z0be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.convertAnonymousToLocal.assist" commandName="Quick Assist - Convert anonymous to local class" description="Invokes quick assist and selects 'Convert anonymous to local class'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z0re6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.convertLocalToField.assist" commandName="Quick Assist - Convert local variable to var" description="Invokes quick assist and selects 'Convert local variable to var'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z07e6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.closeOthers" commandName="Close Others" description="Close all editors except the one that is active" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z1Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.revisions.author.toggle" commandName="Toggle Revision Author Display" description="Toggles the display of the revision author" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z1be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.change.type" commandName="Generalize Declared Type" description="Change the declaration of a selected variable to a more general type consistent with usage" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z1re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.sort.members" commandName="Sort Members" description="Sort all members using the member order preference" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z17e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replaceWithBase" commandName="Revert to Base" description="Revert to Base revisions" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z2Le6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.suite.GDTPulldown" commandName="GDT Pulldown" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z2be6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.project" commandName="Implementors in Project" description="Search for implementors of the selected interface in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z2re6EeOxntPoYxjofg" elementId="sed.tabletree.expandAll" commandName="Expand All" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z27e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.create.delegate.methods" commandName="Generate Delegate Functions" description="Add delegate functions for a type's vars" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z3Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AllInstances" commandName="All Instances" description="View all instances of the selected type loaded in the target VM" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z3be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showChangeRulerInformation" commandName="Show Quick Diff Ruler Tooltip" description="Displays quick diff or revision information for the caret line in a focused hover" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z3re6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z37e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewClone" commandName="Clone a Git Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z4Le6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.disable.grammar.constraints" commandName="Turn off Grammar Constraints" description="Turn off grammar Constraints" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z4be6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.export" commandName="Export Profiles Command" description="Command to export connection profiles" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z4re6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRefresh" commandName="Refresh" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z47e6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.openCheatSheetURL" commandName="Open Cheat Sheet from URL" description="Open a Cheat Sheet from file at a specified URL." category="_eYGy87e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX7z5Le6EeOxntPoYxjofg" elementId="cheatSheetId" name="Identifier" optional="false"/>
+    <parameters xmi:id="_eX7z5be6EeOxntPoYxjofg" elementId="name" name="Name" optional="false"/>
+    <parameters xmi:id="_eX7z5re6EeOxntPoYxjofg" elementId="url" name="URL" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX7z57e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.lockToolBar" commandName="Lock the Toolbars" description="Lock the Toolbars" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z6Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildAll" commandName="Build All" description="Build all projects" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z6be6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.expandAll" commandName="Expand All" description="Expand the current tree" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z6re6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.import" commandName="Import" description="Import" category="_eYGL67e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX7z67e6EeOxntPoYxjofg" elementId="importWizardId" name="Import Wizard"/>
+  </commands>
+  <commands xmi:id="_eX7z7Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.helpSearch" commandName="Help Search" description="Open the help search" category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX7z7be6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer" commandName="Dump Log Sniffer Buffer" category="_eYGy8be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX7z7re6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer.param1" name="Command" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX7z77e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.importFromRepository" commandName="Import Plug-in from a Repository" description="Imports a plug-in from a source repository" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a4Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.windowEnd" commandName="Window End" description="Go to the end of the window" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a4be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.occurrences.in.file" commandName="Search All Occurrences in File" description="Search for all occurrences of the selected element in its declaring file" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a4re6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.update" commandName="Update" description="Update resources with new content from the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a47e6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.indexcommand" commandName="Index" description="Show Keyword Index" category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a5Le6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.renameInFile" commandName="Rename In File" description="Renames all references within the same buildfile" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a5be6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.appsmarketplace.actions.listOnAppsMarketplace" commandName="List on Google Apps Marketplace..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a5re6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.RenameBranch" commandName="Rename Branch..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a57e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.create.getter.setter" commandName="Generate Getters and Setters" description="Generate Getter and Setter functions for type's vars" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a6Le6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Rebase" commandName="Rebase" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a6be6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.pinEditor" commandName="Pin Editor" description="Pin the current editor" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a6re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.encapsulateField.assist" commandName="Quick Assist - Create getter/setter for field" description="Invokes quick assist and selects 'Create getter/setter for field'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a67e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.sort.members" commandName="Sort Members" description="Sort all members using the member order preference" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a7Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Inspect" commandName="Inspect" description="Inspect result of evaluating selected text" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a7be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.workspace" commandName="Declaration in Workspace" description="Search for declarations of the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a7re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.block.comment" commandName="Add Block Comment" description="Enclose the selection with a block comment" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a77e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.import" commandName="Add Import" description="Create import statement on selection" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a8Le6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.gototype" commandName="Go to Type" description="Go to Type" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a8be6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Tag" commandName="Tag" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a8re6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ShowRepositoriesView" commandName="Show Git Repositories View" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a87e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.restore" commandName="Reset Structure" description="Resets the folding structure" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a9Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.restartWorkbench" commandName="Restart" description="Restart the workbench" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a9be6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file.quickMenu" commandName="Show Occurrences in File Quick Menu" description="Shows the Occurrences in File quick menu" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a9re6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigurePush" commandName="Configure Push..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a97e6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.export" commandName="Export" description="Export" category="_eYGL67e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX8a-Le6EeOxntPoYxjofg" elementId="exportWizardId" name="Export Wizard"/>
+  </commands>
+  <commands xmi:id="_eX8a-be6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactoring.commands.renameResource" commandName="Rename Resource" description="Rename the selected resource and notify LTK participants." category="_eYGy9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a-re6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.resetPerspective" commandName="Reset Perspective" description="Reset the current perspective to its default state" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a-7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.core.deployToGoogle" commandName="Deploy to Google" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX8a_Le6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.searchTargetRepositories" commandName="Add Artifact to Target Platform" description="Add an artifact to your target platform" category="_eYGy8be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX8a_be6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.searchTargetRepositories.term" name="The initial search pattern for the artifact search dialog"/>
+  </commands>
+  <commands xmi:id="_eX9B8Le6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ConfigureUpstreamPush" commandName="Configure Upstream Push" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B8be6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.savePerspective" commandName="Save Perspective As" description="Save the current perspective" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B8re6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showInformation" commandName="Show Tooltip Description" description="Displays information for the current caret location in a focused hover" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B87e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ConfigureFetch" commandName="Configure Upstream Fetch" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B9Le6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.nextMemoryBlock" commandName="Next Memory Monitor" description="Show renderings from next memory monitor." category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B9be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleOverwrite" commandName="Toggle Overwrite" description="Toggle overwrite mode" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B9re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.project" commandName="Write Access in Project" description="Search for write references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B97e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.specific_content_assist.command" commandName="Content Assist" description="A parameterizable command that invokes content assist with a single completion proposal category" category="_eYGy8Le6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX9B-Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.specific_content_assist.category_id" name="type" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX9B-be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addCast" commandName="Quick Fix - Add cast" description="Invokes quick assist and selects 'Add cast'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B-re6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.suite.ext.importGaeDemo" commandName="Import App Engine Sample Apps" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B-7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.showKeyAssist" commandName="Show Key Assist" description="Show the key assist dialog" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B_Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.saveAs" commandName="Save As" description="Save the current contents to another location" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B_be6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchWorkspace" commandName="Find Text in Workspace" description="Searches the files in the workspace for specific text." category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B_re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.working.set" commandName="Implementors in Working Set" description="Search for implementors of the selected interface in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9B_7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaPerspective" commandName="Java" description="Show the Java perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CALe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.openEditorDropDown" commandName="Quick Switch Editor" description="Open the editor drop down list" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CAbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.changeToStatic" commandName="Quick Fix - Change to static access" description="Invokes quick assist and selects 'Change to static access'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CAre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.override.methods" commandName="Override/Implement Methods" description="Override or implement methods from super types" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CA7e6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchFile" commandName="Find Text in File" description="Searches the files in the file for specific text." category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CBLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.paste" commandName="Paste" description="Paste from the clipboard" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CBbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.convertAnonymousToLocal.assist" commandName="Quick Assist - Convert anonymous to local class" description="Invokes quick assist and selects 'Convert anonymous to local class'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CBre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.EquinoxLaunchShortcut.debug" commandName="Debug OSGi Framework" description="Debug OSGi Framework" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CB7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.source.quickMenu" commandName="Show Source Quick Menu" description="Shows the source quick menu" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CCLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCopyPath" commandName="Copy Path to Clipboard" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CCbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Ignore" commandName="Ignore" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CCre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.RemoveFromIndex" commandName="Remove from Git Index" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CC7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineUp" commandName="Line Up" description="Go up one line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CDLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.externalize.strings" commandName="Externalize Strings" description="Finds all strings that are not externalized and moves them into a separate property file" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9CDbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.working.set" commandName="Write Access in Working Set" description="Search for write references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pALe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.back" commandName="Back" description="Navigate back" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pAbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.workspace" commandName="References in Workspace" description="Search for references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pAre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleStepFilters" commandName="Use Step Filters" description="Toggles enablement of debug step filters" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pA7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.introduce.indirection" commandName="Introduce Indirection" description="Introduce an indirection to encapsulate invocations of a selected function" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pBLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesLinkWithSelection" commandName="Link with Selection" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pBbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.org.eclipse.egit.ui.AbortRebase" commandName="Abort Rebase" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pBre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Fetch" commandName="Fetch" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pB7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.SetQuickdiffBaseline" commandName="Set quickdiff baseline" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pCLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewDelete" commandName="Delete Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pCbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ShowBlame" commandName="Show Annotations" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pCre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Pull" commandName="Pull" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pC7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.recenter" commandName="Recenter" description="Recenter the window based on the cursor" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pDLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.tag" commandName="Tag as Version" description="Tag the resources with a CVS version tag" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pDbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.refresh" commandName="Refresh" description="Refresh the selected items" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pDre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.unimplemented.constructors" commandName="Generate Constructors from Superclass" description="Evaluate and add constructors from superclass" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pD7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CreateBranch" commandName="Create Branch" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pELe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.move.element" commandName="Move - Refactoring " description="Move the selected element to a new location" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pEbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.pageUp" commandName="Page Up" description="Go up one page" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pEre6EeOxntPoYxjofg" elementId="sed.tabletree.collapseAll" commandName="Collapse All" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pE7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.openManifest" commandName="Open Manifest" description="Open the plug-in manifest" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pFLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.OpenRunConfigurations" commandName="Run..." description="Open run launch configuration dialog" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pFbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.AssumeUnchanged" commandName="Assume Unchanged" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pFre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.commands.showElementInTypeHierarchyView" commandName="Show Java Element Type Hierarchy" description="Show a Java element in the Type Hierarchy view" category="_eYGy9re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX9pF7e6EeOxntPoYxjofg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX9pGLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.SkipAllBreakpoints" commandName="Skip All Breakpoints" description="Sets whether or not any breakpoint should suspend execution" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pGbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.extractLocalNotReplaceOccurrences.assist" commandName="Quick Assist - Extract local variable" description="Invokes quick assist and selects 'Extract local variable'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pGre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pG7e6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactor.show.refactoring.history" commandName="Open Refactoring History " description="Opens the refactoring history" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pHLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.AddToIndex" commandName="Add to Git Index" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX9pHbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.workspace" commandName="Read Access in Workspace" description="Search for read references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QELe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.customizePerspective" commandName="Customize Perspective" description="Customize the current perspective" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QEbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showInQuickMenu" commandName="Show In..." description="Open the Show In menu" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QEre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.hierarchy" commandName="Read Access in Hierarchy" description="Search for read references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QE7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.change.type" commandName="Generalize Declared Type" description="Change the declaration of a selected variable to a more general type consistent with usage" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QFLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.CheckoutCommand" commandName="Checkout" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QFbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.rename" commandName="Rename" description="Rename the selected item" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QFre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.block.comment" commandName="Add Block Comment" description="Enclose the selection with a block comment" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QF7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file" commandName="Search All Occurrences in File" description="Search for all occurrences of the selected element in its declaring file" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QGLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.implementation" commandName="Open Implementation" description="Opens the Implementations of a method in its hierarchy" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QGbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.internal.reflog.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QGre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaBrowsingPerspective" commandName="JavaScript Browsing" description="Show the JavaScript Browsing perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QG7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineUp" commandName="Select Line Up" description="Extend the selection to the previous line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QHLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.project" commandName="Read Access in Project" description="Search for read references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QHbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ShowHistory" commandName="Show in History" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QHre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.show.in.package.view" commandName="Show in Script Explorer" description="Show the selected element in the Script Explorer" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QH7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replaceWithTag" commandName="Replace With Another Branch or Version" description="Replace with Branch or Version on the CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QILe6EeOxntPoYxjofg" elementId="org.eclipse.compare.compareWithOther" commandName="Compare With Other Resource" description="Compare resources, clipboard contents or editors" category="_eYGy9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QIbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QIre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Push" commandName="Push" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QI7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.stash.apply" commandName="Apply Stashed Changes" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QJLe6EeOxntPoYxjofg" elementId="org.eclipse.compare.copyAllLeftToRight" commandName="Copy All from Left to Right" description="Copy All Changes from Left to Right" category="_eYGy9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QJbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.selectAll" commandName="Select All" description="Select all" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QJre6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.ignoreMissingPlaceholders" commandName="Do not warn of missing documentation" description="Sets the help preferences to no longer report a warning about the current set of missing documents." category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QJ7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.replace.invocations" commandName="Replace Invocations" description="Replace invocations of the selected function" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QKLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.commands.empty" commandName="Empty command" description="Command which does nothing" category="_eYGL77e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QKbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.copy" commandName="Copy" description="Copy the selection to the clipboard" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QKre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.Revert" commandName="Revert Commit" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QK7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.project" commandName="Declaration in Project" description="Search for declarations of the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QLLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateBranch" commandName="Create Branch..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-QLbe6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.addprofile" commandName="New Connection Profile Command" description="Command to create a new connection profile" category="_eYGy8be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX-3ILe6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.ui.ignoreCategory" name="ignoreCategory"/>
+    <parameters xmi:id="_eX-3Ibe6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.ui.useSelection" name="useSelection"/>
+  </commands>
+  <commands xmi:id="_eX-3Ire6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.openExternalDoc" commandName="Open External Documentation" description="Open the External documentation for the current task in the Ant editor" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3I7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaHierarchyPerspective" commandName="Java Type Hierarchy" description="Show the Java Type Hierarchy perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3JLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.inline" commandName="Inline" description="Inline a constant, local variable or function" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Jbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.indent" commandName="Correct Indentation" description="Corrects the indentation of the selected lines" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Jre6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.copyConfigCommand" commandName="Copy Configuration Data To Clipboard" description="Copies the configuration data (system properties, installed bundles, etc) to the clipboard." category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3J7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.exception.occurrences" commandName="Search Exception Occurrences in File" description="Search for exception occurrences of a selected exception type" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3KLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.part.previousPage" commandName="Previous Page" description="Switch to the previous page" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Kbe6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.addrepository" commandName="New Repository Profile Command" description="Command to create a new repository profile" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Kre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Synchronize" commandName="Synchronize" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3K7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.hierarchy" commandName="Quick Hierarchy" description="Show the quick hierarchy of the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3LLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.format" commandName="Format" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Lbe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.generateEntities" commandName="Generate Entities from Tables..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Lre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.externalizeStrings" commandName="Externalize Strings in Plug-ins" description="Extract translatable strings from plug-in files" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3L7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.GarbageCollect" commandName="Collect Garbage" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3MLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.hierarchy" commandName="References in Hierarchy" description="Search for references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Mbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.comment" commandName="Comment" description="Turn the selected lines into JavaScript comments" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Mre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.showViewMenu" commandName="Show View Menu" description="Show the view menu" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3M7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.refactor.create.refactoring.script" commandName="Create Script" description="Create a refactoring script from refactorings on the local workspace" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3NLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseComments" commandName="Collapse Comments" description="Collapse all comments" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Nbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findIncremental" commandName="Incremental Find" description="Incremental find" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Nre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.edit.text.format" commandName="Format Source" description="Format a PDE Source Page" category="_eYGL7re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3N7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.DeleteBranch" commandName="Delete Branch..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3OLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.previousEditor" commandName="Previous Editor" description="Switch to the previous editor" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Obe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.self.encapsulate.field" commandName="Encapsulate Var" description="Create getting and setting functions for the var and use only those to access the var" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX-3Ore6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.collapse_all" commandName="Collapse All" description="Collapses all folded regions" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eMLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.perspectives.showPerspective" commandName="Show Perspective" description="Show a particular perspective" category="_eYGL5be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX_eMbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.perspectives.showPerspective.perspectiveId" name="Parameter"/>
+    <parameters xmi:id="_eX_eMre6EeOxntPoYxjofg" elementId="org.eclipse.ui.perspectives.showPerspective.newWindow" name="In New Window"/>
+  </commands>
+  <commands xmi:id="_eX_eM7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.reload.dependencies" commandName="Reload Dependencies" description="Reload Dependencies" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eNLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.previousSubTab" commandName="Previous Sub-Tab" description="Switch to the previous sub-tab" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eNbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.smartEnter" commandName="Insert Line Below Current Line" description="Adds a new line below the current line" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eNre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.refactor.apply.refactoring.script" commandName="Apply Script" description="Perform refactorings from a refactoring script on the local workspace" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eN7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Reset" commandName="Reset" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eOLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.contentAssist.proposals" commandName="Content Assist" description="Content Assist" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eObe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.expand_all" commandName="Expand All" description="Expands all folded regions" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eOre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.nextTab" commandName="Next Tab" description="Switch to the next tab" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eO7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.stop" commandName="Stop" description="Stop the server" category="_eYGL9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_ePLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Discard" commandName="Replace with File in Git Index" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_ePbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.OpenMarkersView" commandName="Open Another" description="Open another view" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_ePre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.NoAssumeUnchanged" commandName="No Assume Unchanged" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eP7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.windowEnd" commandName="Select Window End" description="Select to the end of the window" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eQLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.command.shareProject" commandName="Share with Git" description="Share the project using Git" category="_eYGy8be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX_eQbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.command.projectNameParameter" name="Project" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX_eQre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Suspend" commandName="Suspend" description="Suspend" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eQ7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eRLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.commands.showElementInPackageView" commandName="Show Java Element in Package Explorer" description="Select Java element in the Package Explorer view" category="_eYGy9re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX_eRbe6EeOxntPoYxjofg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
+  </commands>
+  <commands xmi:id="_eX_eRre6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.synchronizeAll" commandName="Synchronize..." description="Synchronize resources in the workspace with another location" category="_eYGy8re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eR7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.PackageExplorer" commandName="JavaScript Script Explorer" description="Show the Script Explorer" category="_eYGL6re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eSLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.displayHelp" commandName="Display Help" description="Display a Help topic" category="_eYGy87e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eX_eSbe6EeOxntPoYxjofg" elementId="href" name="Help topic href"/>
+  </commands>
+  <commands xmi:id="_eX_eSre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Branch" commandName="Branch" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eX_eS7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.debug" commandName="Debug JUnit Test" description="Debug JUnit Test" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFQLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.closeProject" commandName="Close Project" description="Close the selected project" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFQbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.assignParamToField.assist" commandName="Quick Assist - Assign parameter to field" description="Invokes quick assist and selects 'Assign parameter to field'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFQre6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.commitAll" commandName="Commit All Outgoing Changes" description="Commit all outgoing changes to the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFQ7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.cvsPerspective" commandName="CVS Repository Exploring" description="Open the CVS Repository Exploring Perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFRLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addImport" commandName="Quick Fix - Add import" description="Invokes quick assist and selects 'Add import'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFRbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.FetchGerritChange" commandName="Fetch From Gerrit" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFRre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.rerunLast" commandName="Rerun JUnit Test" description="Rerun JUnit Test" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFR7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.callhierarchy.view" commandName="JavaScript Call Hierarchy" description="Show the Call Hierarchy view" category="_eYGL6re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFSLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.java.open.structure" commandName="Open Structure" description="Show the structure of the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFSbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavadocView" commandName="Documentation" description="Show the JavaScript Documentation view" category="_eYGL6re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFSre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineStart" commandName="Line Start" description="Go to the start of the line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFS7e6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.closeTray" commandName="Close User Assistance Tray" description="Close the user assistance tray containing context help information and cheat sheets." category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFTLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.working.set" commandName="Declaration in Working Set" description="Search for declarations of the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFTbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.properties" commandName="Properties" description="Display the properties of the selected item's project " category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFTre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.save" commandName="Save" description="Save the current contents" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFT7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleBlockSelectionMode" commandName="Toggle Block Selection" description="Toggle block / column selection in the current text editor" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFULe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.checkout" commandName="Checkout from CVS" description="Checkout from CVS" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFUbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleWatchpoint" commandName="Toggle Watchpoint" description="Creates or removes a watchpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFUre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureBranch" commandName="Configure Branch" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFU7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.compareWithRemote" commandName="Compare With Latest from Repository" description="Compare with Content on CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFVLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.type.hierarchy" commandName="Open Type Hierarchy" description="Open a type hierarchy on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFVbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.revisions.rendering.cycle" commandName="Cycle Revision Coloring Mode" description="Cycles through the available coloring modes for revisions" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFVre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showRulerContextMenu" commandName="Show Ruler Context Menu" description="Show the context menu for the ruler" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFV7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.PackagesView" commandName="JavaScript Folders" description="Show the Folders view" category="_eYGL6re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFWLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.commands.empty" commandName="Empty command" description="Command which does nothing" category="_eYGL77e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFWbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleMethodBreakpoint" commandName="Toggle Method Breakpoint" description="Creates or removes a method breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFWre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.minimizePart" commandName="Minimize Active View or Editor" description="Minimizes the active view or editor" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFW7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.workspace" commandName="Write Access in Workspace" description="Search for write references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAFXLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.part.nextPage" commandName="Next Page" description="Switch to the next page" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsULe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ReplaceWithRef" commandName="Replace with branch, tag, or reference" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsUbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delete.line.to.beginning" commandName="Delete to Beginning of Line" description="Delete to the beginning of a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsUre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.backwardHistory" commandName="Backward History" description="Move backward in the editor navigation history" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsU7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.swap.mark" commandName="Swap Mark" description="Swap the mark with the cursor position" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsVLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replaceWithRevision" commandName="Replace With Revision" description="Replace with Revision on CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsVbe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.compareWithRevision" commandName="Compare With Revision" description="Compare with Revision on CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsVre6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.antShortcut.run" commandName="Run Ant Build" description="Run Ant Build" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsV7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.surround.with.try.catch" commandName="Surround with try/catch Block" description="Surround the selected text with a try/catch block" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsWLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsWbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.lowerCase" commandName="To Lower Case" description="Changes the selection to lower case" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsWre6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowBundleCatalog" commandName="Show Bundle Catalog" category="_eYGy8be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYAsW7e6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.DirectoryParameter" name="Directory URL"/>
+    <parameters xmi:id="_eYAsXLe6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.TagsParameter" name="Tags"/>
+  </commands>
+  <commands xmi:id="_eYAsXbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.MergeTool" commandName="Merge Tool" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsXre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.openLocalFile" commandName="Open File..." description="Open a file" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsX7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowSelectedElementOnly" commandName="Show Selected Element Only" description="Show Selected Element Only" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsYLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.Reset" commandName="Reset" category="_eYGy8be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYAsYbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ResetMode" name="Reset mode" optional="false"/>
+  </commands>
+  <commands xmi:id="_eYAsYre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.addAllPluginsToJavaSearch" commandName="Add All Plug-ins to Java Search" description="Adds all plug-ins in the target platform to java search" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsY7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.unimplemented.constructors" commandName="Generate Constructors from Superclass" description="Evaluate and add constructors from superclass" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsZLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.branch" commandName="Branch" description="Branch" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsZbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AddExceptionBreakpoint" commandName="Add Java Exception Breakpoint" description="Add a Java exception breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsZre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareVersionsInTree" commandName="Compare in Tree" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsZ7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.openProject" commandName="Open Project" description="Open a project" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYAsaLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.cut" commandName="Cut" description="Cut the selection to the clipboard" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTYLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.moveLineDown" commandName="Move Lines Down" description="Moves the selected lines down" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTYbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.StepIntoSelection" commandName="Step Into Selection" description="Step into the current selected statement" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTYre6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactoring.commands.moveResources" commandName="Move Resources" description="Move the selected resources and notify LTK participants." category="_eYGy9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTY7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.constructor.using.fields" commandName="Generate Constructor using Fields" description="Choose fields to initialize and constructor from superclass to call " category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTZLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.commands.showElementInPackageView" commandName="Show JavaScript Element in Script Explorer" description="Select JavaScript element in the Script Explorer view" category="_eYGy9re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYBTZbe6EeOxntPoYxjofg" elementId="elementRef" name="JavaScript element reference" typeId="org.eclipse.wst.jsdt.ui.commands.javaElementReference" optional="false"/>
+  </commands>
+  <commands xmi:id="_eYBTZre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.line" commandName="Go to Line" description="Go to a specified line of text" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTZ7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRemoveRemote" commandName="Delete Remote" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTaLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.stash.create" commandName="Stash Changes" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTabe6EeOxntPoYxjofg" elementId="org.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar" commandName="Run Last Launched External Tool" description="Runs the last launched external Tool" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTare6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.columnPrevious" commandName="Previous Column" description="Go to the previous column" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTa7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.common.project.facet.ui.ConvertProjectToFacetedForm" commandName="Convert to Faceted Form..." category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTbLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Commit" commandName="Commit..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTbbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.remove.block.comment" commandName="Remove Block Comment" description="Remove Block Comment" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTbre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CheckoutCommand" commandName="Checkout" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTb7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineStart" commandName="Select Line Start" description="Select to the beginning of the line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTcLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.cut.line.to.end" commandName="Cut to End of Line" description="Cut to the end of a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTcbe6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.sdk.update" commandName="Check for Updates" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTcre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findIncrementalReverse" commandName="Incremental Find Reverse" description="Incremental find reverse" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTc7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.commands.openElementInEditor" commandName="Open JavaScript Element" description="Open a JavaScript element in its editor" category="_eYGy9re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYBTdLe6EeOxntPoYxjofg" elementId="elementRef" name="JavaScript element reference" typeId="org.eclipse.wst.jsdt.ui.commands.javaElementReference" optional="false"/>
+  </commands>
+  <commands xmi:id="_eYBTdbe6EeOxntPoYxjofg" elementId="com.google.appengine.wtp.actions.pulldownMenu" commandName="Google App Engine WTP" description="Google App Engine WTP" category="_eYGL8re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTdre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.generate.hashcode.equals" commandName="Generate hashCode() and equals()" description="Generates hashCode() and equals() functions for the type" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTd7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.generate.javadoc" commandName="Generate Javadoc" description="Generates Javadoc for a selectable set of Java resources" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTeLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.working.set" commandName="Declaration in Working Set" description="Search for declarations of the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTebe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.launchShortcut.run" commandName="Run on Server" description="Run the current selection on a server" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTere6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RebaseCurrent" commandName="Rebase" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYBTe7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.OpenLocalAdminConsoleCommand" commandName="Open Local Development Console" description="Open Local Development Console" category="_eYGL8re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6cLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.ignore" commandName="Add to .cvsignore" description="Ignore the Selected Resources when Synchronizing" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6cbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.dialogs.openInputDialog" commandName="Open Input Dialog" description="Open an Input Dialog" category="_eYGL97e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYB6cre6EeOxntPoYxjofg" elementId="title" name="Title"/>
+    <parameters xmi:id="_eYB6c7e6EeOxntPoYxjofg" elementId="message" name="Message"/>
+    <parameters xmi:id="_eYB6dLe6EeOxntPoYxjofg" elementId="initialValue" name="Initial Value"/>
+    <parameters xmi:id="_eYB6dbe6EeOxntPoYxjofg" elementId="cancelReturns" name="Return Value on Cancel"/>
+  </commands>
+  <commands xmi:id="_eYB6dre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ShowVersions" commandName="Open" category="_eYGy8be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYB6d7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareMode" name="Compare mode"/>
+  </commands>
+  <commands xmi:id="_eYB6eLe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.antShortcut.debug" commandName="Debug Ant Build" description="Debug Ant Build" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6ebe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.properties.NewPropertySheetCommand" commandName="Properties" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6ere6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.return.continue.targets" commandName="Search break/continue Target Occurrences in File" description="Search for break/continue target occurrences of a selected target name" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6e7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.workspace" commandName="Implementors in Workspace" description="Search for implementors of the selected interface" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6fLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.gotopackage" commandName="Go to Folder" description="Go to Folder" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6fbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.move.inner.to.top.level" commandName="Move Type to New File" description="Move Type to New File" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6fre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.quick_outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6f7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.Revert" commandName="Revert Commit" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6gLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.publish" commandName="Publish" description="Publish to server" category="_eYGL9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6gbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateRepository" commandName="Create a Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6gre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.gotoBreadcrumb" commandName="Show In Breadcrumb" description="Shows the Java editor breadcrumb and sets the keyboard focus into it" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6g7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.introduce.factory" commandName="Introduce Factory" description="Introduce a factory function to encapsulate invocation of the selected constructor" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6hLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.scroll.lineDown" commandName="Scroll Line Down" description="Scroll down one line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6hbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.SimpleFetch" commandName="Fetch from Upstream" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6hre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.StepInto" commandName="Step Into" description="Step into" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6h7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.Checkout" commandName="Checkout" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6iLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.scroll.lineUp" commandName="Scroll Line Up" description="Scroll up one line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6ibe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.TerminateAndRelaunch" commandName="Terminate and Relaunch" description="Terminate and Relaunch" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYB6ire6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.print" commandName="Print" description="Print" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChgLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.breakpoint.properties" commandName="Java Breakpoint Properties" description="View and edit the properties for a given Java breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChgbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.pageUp" commandName="Select Page Up" description="Select to the top of the page" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChgre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.import" commandName="Add Import" description="Create import statement on selection" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChg7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithPrevious" commandName="Compare with Previous Revision" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChhLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.interface" commandName="Extract Interface" description="Extract a set of members into a new interface and try to use the new interface" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChhbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.dynamicHelp" commandName="Dynamic Help" description="Open the dynamic help" category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChhre6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.run" commandName="Run" description="Run server" category="_eYGL9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChh7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.working.set" commandName="Read Access in Working Set" description="Search for read references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChiLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.promote.local.variable" commandName="Convert Local Variable to Var" description="Convert a local variable to a var" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChibe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.push.down" commandName="Push Down" description="Move members to subclasses" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChire6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.splitJoinVariableDeclaration.assist" commandName="Quick Assist - Split/Join variable declaration" description="Invokes quick assist and selects 'Split/Join variable declaration'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChi7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.run" commandName="Run Java Application" description="Run Java Application" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChjLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchHierarchy" commandName="Toggle Branch Representation" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChjbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showRulerAnnotationInformation" commandName="Show Ruler Annotation Tooltip" description="Displays annotation information for the caret line in a focused hover" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChjre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.format" commandName="Format" description="Format the selected text" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChj7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChkLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.junitWorkbenchShortcut.run" commandName="Run JUnit Plug-in Test" description="Run JUnit Plug-in Test" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChkbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChkre6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildLast" commandName="Repeat Working Set Build" description="Repeat the last working set build" category="_eYGL6Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChk7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.textStart" commandName="Text Start" description="Go to the beginning of the text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChlLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addNonNLS" commandName="Quick Fix - Add non-NLS tag" description="Invokes quick assist and selects 'Add non-NLS tag'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChlbe6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.openSearchDialog" commandName="Open Search Dialog" description="Open the Search dialog" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChlre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.openWorkspace" commandName="Switch Workspace" description="Open the workspace selection dialog" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChl7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.launchShortcut.debug" commandName="Debug on Server" description="Debug the current selection on a server" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChmLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.pull.up" commandName="Pull Up" description="Move members to a superclass" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChmbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.configureFilters" commandName="Configure Contents..." description="Configure the filters to apply to the markers view" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChmre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.uncomment" commandName="Uncomment" description="Uncomment the selected JavaScript comment lines" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYChm7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.toggle.comment" commandName="Toggle Comment" description="Toggle comment the selected lines" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIkLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.find.broken.nls.keys" commandName="Find Broken Externalized Strings" description="Finds undefined, duplicate and unused externalized string keys in property files" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIkbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.cleanup.document" commandName="Cleanup Document..." description="Cleanup document" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIkre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.uncomment" commandName="Uncomment" description="Uncomment the selected Java comment lines" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIk7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.commands.switch" commandName="Switch Source/Design Views" description="Switch between the Source and Design views." category="_eYGL77e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIlLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.wordNext" commandName="Next Word" description="Go to the next word" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIlbe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.addLocation" commandName="Add Repository Location" description="Add a new CVS repository location" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIlre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.up" commandName="Up" description="Navigate up one level" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIl7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.splitJoinVariableDeclaration.assist" commandName="Quick Assist - Split/Join variable declaration" description="Invokes quick assist and selects 'Split/Join variable declaration'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDImLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.goto.next.member" commandName="Go to Next Member" description="Move the caret to the next member of the JavaScript file" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDImbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.closePerspective" commandName="Close Perspective" description="Close the current perspective" category="_eYGL57e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYDImre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.closePerspective.perspectiveId" name="Perspective Id"/>
+  </commands>
+  <commands xmi:id="_eYDIm7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.hideShowEditors" commandName="Toggle Editor Area Visibility" description="Toggles the visibility of the editor area" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDInLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.organizeManifest" commandName="Organize Manifests" description="Cleans up plug-in manifest files" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDInbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.modify.method.parameters" commandName="Change Function Signature" description="Change function signature includes parameter names and parameter order" category="_eYGL9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDInre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.move" commandName="Move..." description="Move the selected item" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIn7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.updateAll" commandName="Update All Incoming Changes" description="Update all incoming changes with new content from the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIoLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.renameInFile.assist" commandName="Quick Assist - Rename in file" description="Invokes quick assist and selects 'Rename in file'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIobe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.tostring" commandName="Generate toString()" description="Generates the toString() method for the type" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIore6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.OpenProfileConfigurations" commandName="Profile..." description="Open profile launch configuration dialog" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIo7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.external.javadoc" commandName="Open Attached Javadoc" description="Open the attached Javadoc of the selected element in a browser" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIpLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.assignParamToField.assist" commandName="Quick Assist - Assign parameter to var" description="Invokes quick assist and selects 'Assign parameter to var'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIpbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.project" commandName="Declaration in Project" description="Search for declarations of the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIpre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.hashcode.equals" commandName="Generate hashCode() and equals()" description="Generates hashCode() and equals() methods for the type" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDIp7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.browser.openBrowser" commandName="Open Browser" description="Opens the default web browser." category="_eYGL57e6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYDIqLe6EeOxntPoYxjofg" elementId="url" name="URL"/>
+    <parameters xmi:id="_eYDIqbe6EeOxntPoYxjofg" elementId="browserId" name="Browser Id"/>
+    <parameters xmi:id="_eYDIqre6EeOxntPoYxjofg" elementId="name" name="Browser Name"/>
+    <parameters xmi:id="_eYDvoLe6EeOxntPoYxjofg" elementId="tooltip" name="Browser Tooltip"/>
+  </commands>
+  <commands xmi:id="_eYDvobe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.gototype" commandName="Go to Type" description="Go to Type" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvore6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.columnNext" commandName="Select Next Column" description="Select the next column" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvo7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.merge" commandName="Merge" description="Merge" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvpLe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.convertJavaQueries" commandName="Move Java Queries to XML..." category="_eYGL87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvpbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" commandName="Debug Java Application" description="Debug Java Application" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvpre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.local.variable" commandName="Extract Local Variable" description="Extracts an expression into a new local variable and uses the new local variable" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvp7e6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.synchronizeLast" commandName="Repeat last synchronization" description="Repeat the last synchronization" category="_eYGy8re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvqLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.previousSibling" commandName="Previous Sibling" description="Go to Previous Sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvqbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvqre6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.ParametrizedRemoteOperationCommand" commandName="ParametrizedRemoteOperationCommand" category="_eYGL8re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYDvq7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.params.jobClass" name="jobClass" optional="false"/>
+  </commands>
+  <commands xmi:id="_eYDvrLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.columnNext" commandName="Next Column" description="Go to the next column" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvrbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.aboutAction" commandName="About" description="Open the about dialog" category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvrre6EeOxntPoYxjofg" elementId="org.eclipse.compare.copyRightToLeft" commandName="Copy from Right to Left" description="Copy Current Change from Right to Left" category="_eYGy9Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvr7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.quickOutline" commandName="Quick Outline" description="Open a quick outline popup dialog for a given editor input" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvsLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.method" commandName="Extract Method" description="Extract a set of statements or an expression into a new method and use the new method" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvsbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.clean.up" commandName="Clean Up" description="Solve problems and improve code style on selected resources" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvsre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithRevision" commandName="Compare with History" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvs7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.project" commandName="References in Project" description="Search for references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvtLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.hierarchy" commandName="Quick Hierarchy" description="Show the quick hierarchy of the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvtbe6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.GenerateSwarmApiClassCommand" commandName="Generate Cloud Endpoint Class" description="Generate Cloud Endpoint Class" category="_eYGL8re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvtre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addThrowsDecl" commandName="Quick Fix - Add throws declaration" description="Invokes quick assist and selects 'Add throws declaration'" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvt7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.activeContextInfo" commandName="Show activeContext Info" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvuLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.override.methods" commandName="Override/Implement Functions" description="Override or implement functions from super types" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvube6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.compareWithTag" commandName="Compare With Another Branch or Version" description="Compare with a Branch or a Version on the CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYDvure6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.generate.constructor.using.fields" commandName="Generate Constructor using Vars" description="Choose vars to initialize and constructor from superclass to call " category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWsLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findNext" commandName="Find Next" description="Find next item" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWsbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addSuppressWarnings" commandName="Quick Fix - Add @SuppressWarnings" description="Invokes quick fix and selects 'Add @SuppressWarnings' " category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWsre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Disconnect" commandName="Disconnect" description="Disconnect" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWs7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.CreateTag" commandName="Create Tag..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWtLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.extractLocal.assist" commandName="Quick Assist - Extract local variable" description="Invokes quick assist and selects 'Extract local variable'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWtbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.junitWorkbenchShortcut.debug" commandName="Debug JUnit Plug-in Test" description="Debug JUnit Plug-in Test" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWtre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addSuppressWarnings" commandName="Quick Fix - Add @SuppressWarnings" description="Invokes quick fix and selects 'Add @SuppressWarnings' " category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWt7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.show.outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWuLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.setKeywordSubstitution" commandName="Change ASCII/Binary Property" description="Change whether the selected resources should be treated as ASCII or binary on the CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWube6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.internal.reflog.CheckoutCommand" commandName="Checkout" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWure6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.working.set" commandName="References in Working Set" description="Search for references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWu7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.quickStartAction" commandName="Welcome" description="Show help for beginning users" category="_eYGy87e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWvLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.addTask" commandName="Add Task..." description="Add a task" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWvbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.quickdiff.revertLine" commandName="Revert Line" description="Revert the current line" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWvre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.command.prevpage" commandName="Previous Page of Memory" description="Load previous page of memory" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWv7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.push.down" commandName="Push Down" description="Move members to subclasses" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWwLe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.toggleMarkOccurrences" commandName="Toggle Ant Mark Occurrences" description="Toggles mark occurrences in Ant editors" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWwbe6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.gph.importGoogleHostedProject" commandName="Import Google Hosted Project" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWwre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.SourceView" commandName="JavaScript Declaration" description="Show the Declaration view" category="_eYGL6re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWw7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.qualifyField" commandName="Quick Fix - Qualify var access" description="Invokes quick assist and selects 'Qualify var access'" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWxLe6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactor.create.refactoring.script" commandName="Create Script" description="Create a refactoring script from refactorings on the local workspace" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWxbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delimiter.windows" commandName="Convert Line Delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" description="Converts the line delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWxre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.cut.line" commandName="Cut Line" description="Cut a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWx7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.columnPrevious" commandName="Select Previous Column" description="Select the previous column" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWyLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.closeAll" commandName="Close All" description="Close all editors" category="_eYGL67e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYEWybe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.promote.local.variable" commandName="Convert Local Variable to Field" description="Convert a local variable to a field" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9wLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.wordNext" commandName="Select Next Word" description="Select the next word" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9wbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.spy" commandName="Show Contributing Plug-in" description="Shows contribution information for the currently selected element" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9wre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.submodule.sync" commandName="Sync Submodule" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9w7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.quickAccess" commandName="Quick Access" description="Quickly access UI elements" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9xLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.addToWorkingSet" commandName="Add to Working Set" description="Adds the selected object to a working set." category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9xbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.next.member" commandName="Go to Next Member" description="Move the caret to the next member of the compilation unit" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9xre6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentTypeMapAs" commandName="Map As" category="_eYGL8Le6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYE9x7e6EeOxntPoYxjofg" elementId="persistentTypeMappingKey" name="mapping key" optional="false"/>
+  </commands>
+  <commands xmi:id="_eYE9yLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.ForceReturn" commandName="Force Return" description="Forces return from method with value of selected expression " category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9ybe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.runtimeWorkbenchShortcut.run" commandName="Run Eclipse Application" description="Run Eclipse Application" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9yre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.remove.block.comment" commandName="Remove Block Comment" description="Remove the block comment enclosing the selection" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9y7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.call.hierarchy" commandName="Open Call Hierarchy" description="Open a call hierarchy on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9zLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CreatePatch" commandName="Create Patch" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9zbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewImportProjects" commandName="Import Projects..." description="Import or create in local Git repository" category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE9zre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showIn" commandName="Show In" category="_eYGy9re6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYE9z7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showIn.targetId" name="Show In Target Id" optional="false"/>
+  </commands>
+  <commands xmi:id="_eYE90Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.run" commandName="Run Java Applet" description="Run Java Applet" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE90be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.copy.qualified.name" commandName="Copy Qualified Name" description="Copy a fully qualified name to the system clipboard" category="_eYGL8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE90re6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.generateDDL" commandName="Generate Tables from Entities..." category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE907e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AllReferences" commandName="All References" description="Inspect all references to the selected object" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYE91Le6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowRepositoryCatalog" commandName="Show Repository Catalog" category="_eYGy8be6EeOxntPoYxjofg">
+    <parameters xmi:id="_eYE91be6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.RepositoryParameter" name="P2 Repository URI"/>
+  </commands>
+  <commands xmi:id="_eYFk0Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.command.OpenFromClipboard" commandName="Open from Clipboard" description="Opens a Java element or a Java stack trace from clipboard" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk0be6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.nextPerspective" commandName="Next Perspective" description="Switch to the next perspective" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk0re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.constant" commandName="Extract Constant" description="Extracts a constant into a new static field and uses the new static field" category="_eYGy-Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk07e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.hippieCompletion" commandName="Word Completion" description="Context insensitive completion" category="_eYGy8Le6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk1Le6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.sync" commandName="Synchronize with Repository" description="Synchronize the workspace resources with those in the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk1be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.folding.collapseComments" commandName="Collapse Comments" description="Collapse all comments" category="_eYGL-be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk1re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.javadoc.comment" commandName="Add Javadoc Comment" description="Add a Javadoc comment stub to the member element" category="_eYGy97e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk17e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.type.hierarchy" commandName="Open Type Hierarchy" description="Open a type hierarchy on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk2Le6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureFetch" commandName="Configure Fetch..." category="_eYGL9be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk2be6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.core.speedTracerProfile" commandName="Profile Using Speed Tracer" category="_eYGy8be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk2re6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Resume" commandName="Resume" description="Resume" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk27e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Execute" commandName="Execute" description="Evaluate selected text" category="_eYGL7be6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk3Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.arrangeWindowsInFront" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.arrangeWindows.name" description="%command.arrangeWindows.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk3be6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.minimizeWindow" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.minimize.name" description="%command.minimize.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk3re6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.fullscreenWindow" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.fullscreen.name" description="%command.fullscreen.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk37e6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.zoomWindow" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.zoom.name" description="%command.zoom.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk4Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.closeDialog" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.closeDialog.name" description="%command.closeDialog.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
+  <commands xmi:id="_eYFk4be6EeOxntPoYxjofg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetExecute" commandName="E&amp;xecute"/>
+  <commands xmi:id="_eYFk4re6EeOxntPoYxjofg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetDisplay" commandName="Displa&amp;y"/>
+  <commands xmi:id="_eYFk47e6EeOxntPoYxjofg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetInspect" commandName="Insp&amp;ect"/>
+  <addons xmi:id="_eYFk5Le6EeOxntPoYxjofg" elementId="org.eclipse.e4.core.commands.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.core.commands/org.eclipse.e4.core.commands.CommandServiceAddon"/>
+  <addons xmi:id="_eYFk5be6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.contexts.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.services/org.eclipse.e4.ui.services.ContextServiceAddon"/>
+  <addons xmi:id="_eYFk5re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.bindings.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.bindings/org.eclipse.e4.ui.bindings.BindingServiceAddon"/>
+  <addons xmi:id="_eYFk57e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.commands.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.CommandProcessingAddon"/>
+  <addons xmi:id="_eYFk6Le6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.contexts.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.ContextProcessingAddon"/>
+  <addons xmi:id="_eYFk6be6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.bindings.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.swt/org.eclipse.e4.ui.workbench.swt.util.BindingProcessingAddon"/>
+  <addons xmi:id="_eYGL4Le6EeOxntPoYxjofg" elementId="Cleanup Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.cleanupaddon.CleanupAddon"/>
+  <addons xmi:id="_eYGL4be6EeOxntPoYxjofg" elementId="DnD Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.dndaddon.DnDAddon"/>
+  <addons xmi:id="_eYGL4re6EeOxntPoYxjofg" elementId="MinMax Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon"/>
+  <addons xmi:id="_eYGL47e6EeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.addon.0" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.HandlerProcessingAddon"/>
+  <addons xmi:id="_eYGL5Le6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CocoaUIHandler" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CocoaUIHandler"/>
+  <categories xmi:id="_eYGL5be6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.perspectives" name="Perspectives" description="Commands for opening perspectives"/>
+  <categories xmi:id="_eYGL5re6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.actionSet" name="CVS" description="Actions that apply when working with CVS repositories"/>
+  <categories xmi:id="_eYGL57e6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.window" name="Window"/>
+  <categories xmi:id="_eYGL6Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.project" name="Project"/>
+  <categories xmi:id="_eYGL6be6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.spy.commands.category" name="Spy"/>
+  <categories xmi:id="_eYGL6re6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.views" name="Views" description="Commands for opening views"/>
+  <categories xmi:id="_eYGL67e6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.file" name="File"/>
+  <categories xmi:id="_eYGL7Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.markerContents" name="Contents" description="The category for menu contents"/>
+  <categories xmi:id="_eYGL7be6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.category.run" name="Run/Debug" description="Run/Debug command category"/>
+  <categories xmi:id="_eYGL7re6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.category.source" name="Manifest Editor Source" description="PDE Source Page actions"/>
+  <categories xmi:id="_eYGL77e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.actions.category" name="WindowBuilder Pro" description="WindowBuilder Pro actions"/>
+  <categories xmi:id="_eYGL8Le6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.jpaStructureViewCommands" name="JPA Structure View"/>
+  <categories xmi:id="_eYGL8be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.category.source" name="Source" description="JavaScript Source Actions"/>
+  <categories xmi:id="_eYGL8re6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.category" name="gaewtp-commands"/>
+  <categories xmi:id="_eYGL87e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.jpaMetadataConversionCommands" name="JPA Metadata Conversion"/>
+  <categories xmi:id="_eYGL9Le6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.category.refactoring" name="Refactor - JavaScript" description="JavaScript Refactoring Actions"/>
+  <categories xmi:id="_eYGL9be6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commandCategory" name="Git"/>
+  <categories xmi:id="_eYGL9re6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui" name="Server" description="Server"/>
+  <categories xmi:id="_eYGL97e6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.dialogs" name="Dialogs" description="Commands for opening dialogs"/>
+  <categories xmi:id="_eYGL-Le6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.category.search" name="Search" description="Search command category"/>
+  <categories xmi:id="_eYGL-be6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.textEditor" name="Text Editing" description="Text Editing Commands"/>
+  <categories xmi:id="_eYGy8Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.edit" name="Edit"/>
+  <categories xmi:id="_eYGy8be6EeOxntPoYxjofg" elementId="org.eclipse.core.commands.categories.autogenerated" name="Uncategorized" description="Commands that were either auto-generated or have no category"/>
+  <categories xmi:id="_eYGy8re6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.category.team" name="Team" description="Actions that apply when working with a Team"/>
+  <categories xmi:id="_eYGy87e6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.help" name="Help"/>
+  <categories xmi:id="_eYGy9Le6EeOxntPoYxjofg" elementId="org.eclipse.compare.ui.category.compare" name="Compare" description="Compare command category"/>
+  <categories xmi:id="_eYGy9be6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.category.refactoring" name="Refactoring"/>
+  <categories xmi:id="_eYGy9re6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.navigate" name="Navigate"/>
+  <categories xmi:id="_eYGy97e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.category.source" name="Source" description="Java Source Actions"/>
+  <categories xmi:id="_eYGy-Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.category.refactoring" name="Refactor - Java" description="Java Refactoring Actions"/>
+</application:Application>
diff --git a/.metadata/.plugins/org.eclipse.egit.ui/dialog_settings.xml b/.metadata/.plugins/org.eclipse.egit.ui/dialog_settings.xml
new file mode 100644
index 0000000..8b32351
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.egit.ui/dialog_settings.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<section name="Workbench">
+	<item value="/Users/Enoch/Documents/CPSC304/Project/CPSC304CoolTeam/.git" key="GitSelectRepositoryPage.lastRepository"/>
+	<item value="0" key="org.eclipse.egit.ui.internal.clone.GitSelectWizardPageWizardSel"/>
+	<section name="GitImportWizard">
+		<item value="true" key="GitProjectsImportPage.STORE_NESTED_PROJECTS"/>
+	</section>
+</section>
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1465312868.index b/.metadata/.plugins/org.eclipse.jdt.core/1465312868.index
new file mode 100644
index 0000000..58ee685
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/1465312868.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index.tmp b/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index.tmp
new file mode 100644
index 0000000..e69de29
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/2842765697.index b/.metadata/.plugins/org.eclipse.jdt.core/2842765697.index
new file mode 100644
index 0000000..5fe1ed0
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/2842765697.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/externalLibsTimeStamps b/.metadata/.plugins/org.eclipse.jdt.core/externalLibsTimeStamps
index 5553bf6..2378be0 100644
Binary files a/.metadata/.plugins/org.eclipse.jdt.core/externalLibsTimeStamps and b/.metadata/.plugins/org.eclipse.jdt.core/externalLibsTimeStamps differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/invalidArchivesCache b/.metadata/.plugins/org.eclipse.jdt.core/invalidArchivesCache
new file mode 100644
index 0000000..593f470
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/invalidArchivesCache differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/nonChainingJarsCache b/.metadata/.plugins/org.eclipse.jdt.core/nonChainingJarsCache
new file mode 100644
index 0000000..36e6a7e
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.core/nonChainingJarsCache differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt b/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt
index 2e5ea3a..c836f54 100644
--- a/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt
+++ b/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt
@@ -1,26 +1,3 @@
 INDEX VERSION 1.126+/Users/Enoch/Documents/CPSC304/Project/CPSC304CoolTeam/.metadata/.plugins/org.eclipse.jdt.core
-1856098903.index
-1743766565.index
-4238209716.index
-2236530947.index
-2678104552.index
-1600714693.index
-3380752744.index
-1384487945.index
-2371787587.index
-947220250.index
-156905802.index
-1819685514.index
-3712507179.index
-3321539481.index
-1833648217.index
-2582987092.index
-185235850.index
-3302703152.index
-1089098316.index
-257114466.index
-3399394134.index
-1271342938.index
-2063481186.index
-2545238116.index
-3266567714.index
+2842765697.index
+1465312868.index
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/variablesAndContainers.dat b/.metadata/.plugins/org.eclipse.jdt.core/variablesAndContainers.dat
index 40d9d0e..895ef55 100644
Binary files a/.metadata/.plugins/org.eclipse.jdt.core/variablesAndContainers.dat and b/.metadata/.plugins/org.eclipse.jdt.core/variablesAndContainers.dat differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.debug.ui/dialog_settings.xml b/.metadata/.plugins/org.eclipse.jdt.debug.ui/dialog_settings.xml
new file mode 100644
index 0000000..ec9d89e
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.jdt.debug.ui/dialog_settings.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<section name="Workbench">
+	<section name="org.eclipse.jdt.debug.ui.MAIN_METHOD_SELECTION_DIALOG">
+		<item value="true" key="ShowStatusLine"/>
+		<item value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#x0A;&lt;History&gt;&#x0A;&lt;historyRootNode&gt;&#x0A;&lt;infoNode&gt;=Project Part III/src&amp;lt;gui{Main.java[Main&lt;/infoNode&gt;&#x0A;&lt;/historyRootNode&gt;&#x0A;&lt;/History&gt;" key="History"/>
+		<section name="DialogBoundsSettings">
+			<item value="600" key="DIALOG_WIDTH"/>
+			<item value="54" key="DIALOG_Y_ORIGIN"/>
+			<item value="340" key="DIALOG_X_ORIGIN"/>
+			<item value="500" key="DIALOG_HEIGHT"/>
+			<item value="1|Lucida Grande|11.0|0|COCOA|1|LucidaGrande" key="DIALOG_FONT_NAME"/>
+		</section>
+	</section>
+</section>
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/OpenTypeHistory.xml b/.metadata/.plugins/org.eclipse.jdt.ui/OpenTypeHistory.xml
new file mode 100644
index 0000000..a4ee3cb
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.jdt.ui/OpenTypeHistory.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<typeInfoHistroy/>
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/QualifiedTypeNameHistory.xml b/.metadata/.plugins/org.eclipse.jdt.ui/QualifiedTypeNameHistory.xml
new file mode 100644
index 0000000..9e390f5
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.jdt.ui/QualifiedTypeNameHistory.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<qualifiedTypeNameHistroy/>
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml b/.metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml
new file mode 100644
index 0000000..ed5bf24
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<section name="Workbench">
+	<section name="org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart">
+		<item value="true" key="group_libraries"/>
+		<item value="false" key="linkWithEditor"/>
+		<item value="2" key="layout"/>
+		<item value="1" key="rootMode"/>
+		<item value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#x0A;&lt;packageExplorer group_libraries=&quot;1&quot; layout=&quot;2&quot; linkWithEditor=&quot;0&quot; rootMode=&quot;1&quot; workingSetName=&quot;Aggregate for window 1395689134483&quot;&gt;&#x0A;&lt;customFilters userDefinedPatternsEnabled=&quot;false&quot;&gt;&#x0A;&lt;xmlDefinedFilters&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LibraryFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LocalTypesFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.StaticsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.pde.ui.ExternalPluginLibrariesFilter1&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ClosedProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonSharedProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaElementFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ContainedLibraryFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.CuAndClassFileFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaProjectsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackageFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.PackageDeclarationFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyPackageFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;com.google.gdt.eclipse.managedapis.ui.ManagedApiContainerFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ImportDeclarationFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.FieldsFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.HideInnerClassFilesFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonPublicFilter&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.EmptyLibraryContainerFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.pde.ui.BinaryProjectFilter1&quot; isEnabled=&quot;false&quot;/&gt;&#x0A;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.SyntheticMembersFilter&quot; isEnabled=&quot;true&quot;/&gt;&#x0A;&lt;/xmlDefinedFilters&gt;&#x0A;&lt;/customFilters&gt;&#x0A;&lt;/packageExplorer&gt;" key="memento"/>
+	</section>
+	<section name="completion_proposal_size">
+	</section>
+	<section name="JavaElementSearchActions">
+	</section>
+	<section name="quick_assist_proposal_size">
+	</section>
+</section>
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/0.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/0.png
new file mode 100644
index 0000000..a95f608
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/0.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/1.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/1.png
new file mode 100644
index 0000000..9abe3c5
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/1.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/10.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/10.png
new file mode 100644
index 0000000..2856a9f
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/10.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/11.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/11.png
new file mode 100644
index 0000000..ed65648
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/11.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/12.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/12.png
new file mode 100644
index 0000000..33b93a3
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/12.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/13.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/13.png
new file mode 100644
index 0000000..2b74bb8
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/13.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/14.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/14.png
new file mode 100644
index 0000000..38192cf
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/14.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/2.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/2.png
new file mode 100644
index 0000000..adce7cd
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/2.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/3.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/3.png
new file mode 100644
index 0000000..56554ec
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/3.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/4.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/4.png
new file mode 100644
index 0000000..a930fe1
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/4.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/5.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/5.png
new file mode 100644
index 0000000..31311ab
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/5.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/6.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/6.png
new file mode 100644
index 0000000..c00d1cb
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/6.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/7.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/7.png
new file mode 100644
index 0000000..a6abcd8
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/7.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/8.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/8.png
new file mode 100644
index 0000000..4768f95
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/8.png differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/9.png b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/9.png
new file mode 100644
index 0000000..834bd74
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.jdt.ui/jdt-images/9.png differ
diff --git a/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/13/refactorings.history b/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/13/refactorings.history
new file mode 100644
index 0000000..1cf2de0
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/13/refactorings.history
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<session version="1.0">
+<refactoring comment="Delete resource &apos;Project Part III&apos;" deleteContents="false" description="Delete resource &apos;Project Part III&apos;" element1="/Project Part III" flags="7" id="org.eclipse.ltk.core.refactoring.delete.resources" resources="1" stamp="1396033522072"/>
+</session>
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/13/refactorings.index b/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/13/refactorings.index
new file mode 100644
index 0000000..41501a5
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/13/refactorings.index
@@ -0,0 +1 @@
+1396033522072	Delete resource 'Project Part III'
diff --git a/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/14/refactorings.history b/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/14/refactorings.history
new file mode 100644
index 0000000..ad5873b
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/14/refactorings.history
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<session version="1.0">
+<refactoring comment="Delete resource &apos;Project Part III&apos;" deleteContents="false" description="Delete resource &apos;Project Part III&apos;" element1="/Project Part III" flags="7" id="org.eclipse.ltk.core.refactoring.delete.resources" resources="1" stamp="1396148533182"/>
+</session>
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/14/refactorings.index b/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/14/refactorings.index
new file mode 100644
index 0000000..573a410
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.ltk.core.refactoring/.refactorings/.workspace/2014/3/14/refactorings.index
@@ -0,0 +1 @@
+1396148533182	Delete resource 'Project Part III'
diff --git a/.metadata/.plugins/org.eclipse.ltk.ui.refactoring/dialog_settings.xml b/.metadata/.plugins/org.eclipse.ltk.ui.refactoring/dialog_settings.xml
new file mode 100644
index 0000000..ab9b5a7
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.ltk.ui.refactoring/dialog_settings.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<section name="Workbench">
+	<section name="RefactoringStatusDialog">
+		<item value="800" key="DIALOG_WIDTH"/>
+		<item value="472" key="DIALOG_HEIGHT"/>
+		<item value="1|Lucida Grande|11.0|0|COCOA|1|LucidaGrande" key="DIALOG_FONT_NAME"/>
+	</section>
+	<section name="RefactoringWizard.preview">
+		<item value="400" key="height"/>
+		<item value="600" key="width"/>
+	</section>
+</section>
diff --git a/.metadata/.plugins/org.eclipse.pde.core/.cache/clean-cache.properties b/.metadata/.plugins/org.eclipse.pde.core/.cache/clean-cache.properties
new file mode 100644
index 0000000..84ee72a
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.pde.core/.cache/clean-cache.properties
@@ -0,0 +1,2 @@
+#Cached timestamps
+#Fri Mar 28 12:23:28 PDT 2014
diff --git a/.metadata/.plugins/org.eclipse.ui.workbench/dialog_settings.xml b/.metadata/.plugins/org.eclipse.ui.workbench/dialog_settings.xml
new file mode 100644
index 0000000..795db61
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.ui.workbench/dialog_settings.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<section name="Workbench">
+	<section name="org.eclipse.ui.internal.QuickAccess">
+		<item value="800" key="dialogWidth"/>
+		<item value="500" key="dialogHeight"/>
+		<list key="orderedProviders">
+		</list>
+		<list key="textArray">
+		</list>
+		<list key="orderedElements">
+		</list>
+		<list key="textEntries">
+		</list>
+	</section>
+	<section name="ImportExportAction">
+		<item value="org.eclipse.egit.ui.internal.clone.GitCloneWizard" key="ImportExportPage.STORE_SELECTED_IMPORT_WIZARD_ID"/>
+		<list key="ImportExportPage.STORE_EXPANDED_IMPORT_CATEGORIES">
+			<item value="org.eclipse.egit.ui.internal.clone.gitclonecategory"/>
+		</list>
+	</section>
+</section>
diff --git a/.metadata/.plugins/org.eclipse.wst.jsdt.core/externalLibsTimeStamps b/.metadata/.plugins/org.eclipse.wst.jsdt.core/externalLibsTimeStamps
new file mode 100644
index 0000000..29a4db0
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.wst.jsdt.core/externalLibsTimeStamps differ
diff --git a/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/baseBrowserLibrary.js b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/baseBrowserLibrary.js
new file mode 100644
index 0000000..aad16dc
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/baseBrowserLibrary.js
@@ -0,0 +1,5393 @@
+/*******************************************************************************
+ * Copyright (c) 2008, 2009 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+/**
+ * Object DOMException()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Object
+ */
+function DOMException(){};
+DOMException.prototype = new Object();
+/**
+ * Constant DOMException.INDEX_SIZE_ERR=1
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.          
+ */
+DOMException.INDEX_SIZE_ERR=1;
+/**
+ * Constant DOMException.DOMSTRING_SIZE_ERR=2
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.DOMSTRING_SIZE_ERR=2;
+/**
+ * Constant DOMException.HIERARCHY_REQUEST_ERR=3
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.           
+ */
+DOMException.HIERARCHY_REQUEST_ERR=3;
+/**
+ * Constant DOMException.WRONG_DOCUMENT_ERR=4
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.WRONG_DOCUMENT_ERR=4;
+/**
+ * Constant DOMException.INVALID_CHARACTER_ERR=5
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.          
+ */
+DOMException.INVALID_CHARACTER_ERR=5;
+/**
+ * Constant DOMException.NO_DATA_ALLOWED_ER=6
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.NO_DATA_ALLOWED_ER=6;
+/**
+ * Constant DOMException.NO_MODIFICATION_ALLOWED_ERR=7
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.NO_MODIFICATION_ALLOWED_ERR=7;
+/**
+ * Constant DOMException.NOT_FOUND_ERR=8
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.          
+ */
+DOMException.NOT_FOUND_ERR=8;
+/**
+ * Constant DOMException.NOT_SUPPORTED_ERR=9
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.        
+ */
+DOMException.NOT_SUPPORTED_ERR=9;
+/**
+ * Constant DOMException.INUSE_ATTRIBUTE_ERR=10
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.INUSE_ATTRIBUTE_ERR=10;
+/**
+ * Constant DOMException.INVALID_STATE_ERR=11
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.INVALID_STATE_ERR=11;
+/**
+ * Constant DOMException.SYNTAX_ERR=12
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.        
+ */
+DOMException.SYNTAX_ERR=12;
+/**
+ * Constant DOMException.INVALID_MODIFICATION_ER=13
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.           
+ */
+DOMException.INVALID_MODIFICATION_ER=13;
+/**
+ * Constant DOMException.NAMESPACE_ERR=14
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.          
+ */
+DOMException.NAMESPACE_ERR=14;
+/**
+ * Constant DOMException.NVALID_ACCESS_ERR=15
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.INVALID_ACCESS_ERR=15;
+/**
+  * Property code
+  * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+  * 
+  * @type Number
+  * @since Standard ECMA-262 3rd. Edition 
+  * @since Level 2 Document Object Model Core Definition.   
+  */
+DOMException.prototype.code=0;
+
+/**
+ * Object DOMImplementation()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see   Object     
+ */
+function DOMImplementation(){};
+DOMImplementation.prototype = new Object();
+/**
+ * function hasFeature(feature, version)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} feature
+ * @param {String} version
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition. 
+ */ 
+DOMImplementation.prototype.hasFeature = function(feature, version){return false;};
+/**
+ * function createDocumentType(qualifiedName, publicId, systemId)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} qualifiedName
+ * @param {String} publicId
+ * @param {String} systemId
+ * @returns {DocumentType}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see DocumentType
+ */ 
+DOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId){return new DocumentType();};
+/**
+ * function createDocument(namespaceURI, qualifiedName, doctype)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} qualifiedName
+ * @param {DocumentType} doctype
+ * @returns {Document}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Document
+ */ 
+DOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype){return new HTMLDocument();}; 
+
+/**
+ * Object DocumentFragment()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see   Node    
+ */
+function DocumentFragment(){};
+DocumentFragment.prototype=new Node(); 
+
+/**
+ * Object Document()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */ 
+function Document(){};
+Document.prototype = new Node();
+/**
+ * Property defaultView
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type  Window
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Window  
+ */ 
+Document.prototype.defaultView = new Window(); 
+/**
+ * Property doctype
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type  DocumentType
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see DocumentType   
+ */ 
+Document.prototype.doctype = new DocumentType(); 
+/**
+ * Property implementation
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *  
+ * @type   DOMImplementation
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see DOMImplementation
+ */ 
+Document.prototype.implementation = new DOMImplementation();
+/**
+ * Property documentElement 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type   Element
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ * @see Element
+ */ 
+Document.prototype.documentElement= new HTMLElement(); 
+/**
+ * Property styleSheets
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type   Array
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Document.prototype.styleSheets= new Array(); 
+/**
+ * function createElement(tagName)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} tagName
+ * @returns {Element}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ * @see Element  
+ */  
+Document.prototype.createElement=function(tagName){return new HTMLElement();}; 
+/**
+ * function createDocumentFragment()  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @returns {DocumentFragment}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition. 
+ * @see DocumentFragment 
+ */ 
+Document.prototype.createDocumentFragment=function(){return new DocumentFragment();}; 
+/**
+ * function createTextNode(data)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} data
+ * @returns {Text}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ * @see Text 
+ */ 
+Document.prototype.createTextNode=function(data){return new Text();}; 
+/**
+ * function createComment(data)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} data
+ * @returns {Comment}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition. 
+ * @see Comment   
+ */ 
+Document.prototype.createComment=function(data){return new Comment();}; 
+/**
+ * function createCDATASection(data)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {String} data
+ * @returns {CDATASection}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see CDATASection     
+ */
+Document.prototype.createCDATASection=function(data){}; 
+/**
+ * function createProcessingInstruction(target, data) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type ProcessingInstruction
+ * @param {String} target
+ * @param {String} data
+ * @returns {ProcessingInstruction}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see ProcessingInstruction      
+*/
+Document.prototype.createProcessingInstruction=function(target, data){return new ProcessingInstruction();}; 
+/**
+ * function createAttribute(name) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *  
+ * @param {String} name
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Attr   
+ */
+Document.prototype.createAttribute=function(name){return new Attr();}; 
+/**
+ * function createEntityReference(name) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {String} name
+ * @returns {EntityReference}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see EntityReference     
+ */
+Document.prototype.createEntityReference=function(name){return new EntityReference();}; 
+/**
+ * function getElementsByTagName(tagname)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} tagname
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see NodeList     
+ */
+Document.prototype.getElementsByTagName=function(tagname){return new NodeList();}; 
+/**
+ * function importNode(importedNode, deep)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *  
+ * @param {Node} importedNode
+ * @param {Boolean} deep
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node        
+ */
+Document.prototype.importNode=function(importedNode, deep){return new Node();}; 
+/**
+ * function createElementNS(namespaceURI, qualifiedName) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} qualifiedName
+ * @returns {Element}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Element        
+ */
+Document.prototype.createElementNS=function(namespaceURI, qualifiedName){return new HTMLElement();}; 
+/**
+ * function createEvent(String eventType) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} eventType
+ * @returns {Object}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Element        
+ */
+Document.prototype.createEvent=function(eventType){return new Object();}; 
+/**
+ * function createAttributeNS(namespaceURI, qualifiedName)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} qualifiedName
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see  Attr       
+ */
+Document.prototype.createAttributeNS=function(namespaceURI, qualifiedName){return new Attr();}; 
+/**
+ * function getElementsByTagNameNS(namespaceURI, localName)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see  NodeList       
+ */
+Document.prototype.getElementsByTagNameNS=function(namespaceURI, localName){return new NodeList();}; 
+/**
+ * function getElementById(elementId)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} elementId
+ * @returns {Element}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Element         
+ */ 
+Document.prototype.getElementById=function(elementId){return new HTMLElement();};
+
+/**
+ * Object Node()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @memberOf Node
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Object    
+ */
+function Node(){};
+Node.prototype=new Object(); 
+/**
+ * Constant Node.ELEMENT_NODE=1
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.ELEMENT_NODE=1; 
+/**
+ * Constant Node.ATTRIBUTE_NODE=2
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.ATTRIBUTE_NODE=2;
+/**
+ * Constant Node.TEXT_NODE=3
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.TEXT_NODE=3;
+/**
+ * Constant Node.CDATA_SECTION_NODE=4
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.CDATA_SECTION_NODE=4; 
+/**
+ * Constant Node.ENTITY_REFERENCE_NODE=5
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.ENTITY_REFERENCE_NODE=5; 
+/**
+ * Constant Node.ENTITY_NODE=6
+ * @type Number
+ * @memberOf Node
+ * @see Node 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+
+ * @see    http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html     
+*/
+Node.ENTITY_NODE=6;
+/**
+ * Constant Node.PROCESSING_INSTRUCTION_NODE=7
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.PROCESSING_INSTRUCTION_NODE=7; 
+/**
+ * Constant Node.COMMENT_NODE=8
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.COMMENT_NODE=8;
+/**
+ * Constant Node.DOCUMENT_NODE=9
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.DOCUMENT_NODE=9;
+/**
+ * Constant Node.DOCUMENT_TYPE_NODE=10
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.DOCUMENT_TYPE_NODE=10; 
+/**
+ * Constant Node.DOCUMENT_FRAGMENT_NODE=11
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.DOCUMENT_FRAGMENT_NODE=11; 
+/**
+ * Constant Node.NOTATION_NODE=12
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.NOTATION_NODE=12;
+/**
+ * Property nodeName
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ */ 
+Node.prototype.nodeName = ""; 
+/**
+ * Property nodeValue
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Node.prototype.nodeValue = ""; 
+/**
+ * Property nodeType
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */  
+Node.prototype.nodeType = 0; 
+/**
+ * Property parentNode 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.parentNode=new Node(); 
+/**
+ * Property childNodes 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @type NodeList
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see NodeList    
+*/ 
+Node.prototype.childNodes=new NodeList(); 
+/**
+ * Property firstChild 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.firstChild=new Node(); 
+/**
+ * Property lastChild 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.lastChild=new Node();  
+/**
+ * Property previousSibling 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.previousSibling=new Node(); 
+/**
+ * Property nextSibling  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.nextSibling=new Node(); 
+/**
+ * Property attributes  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type NamedNodeMap
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ * @see NamedNodeMap
+ */ 
+Node.prototype.attributes=new NamedNodeMap();
+/**
+ * Property ownerDocument  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *  
+ * @type Document
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Document    
+ */ 
+Node.prototype.ownerDocument = new HTMLDocument(); 
+/**
+ * Property namespaceURI 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */ 
+Node.prototype.namespaceURI=""; 
+/**
+ * Property prefix 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @type String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+Node.prototype.prefix = ""; 
+/**
+ * Property localName   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+Node.prototype.localName= "";
+/**
+ * function insertBefore(newChild, refChild) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Node} newChild
+ * @param {Node} refChild
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */  
+Node.prototype.insertBefore = function(newChild, refChild){return new Node();}; 
+/**
+ * function replaceChild(newChild, oldChild) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Node} newChild
+ * @param {Node} oldChild
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */ 
+Node.prototype.replaceChild = function(newChild, oldChild){return new Node();}; 
+/**
+ * function removeChild(oldChild) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Node} oldChild
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */ 
+Node.prototype.removeChild = function(oldChild){return new Node();}; 
+/**
+ * function appendChild(newChild) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Node} newChild
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */  
+Node.prototype.appendChild = function(newChild){return new Node();}; 
+/**
+ * function hasChildNodes() 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ */ 
+Node.prototype.hasChildNodes=function(){return false;}; 
+/**
+ * function cloneNode(deep) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Boolean} deep
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */ 
+Node.prototype.cloneNode=function(deep){return new Node();}; 
+/**
+ * function normalize() 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ */ 
+Node.prototype.normalize = function(){}; 
+/**
+ * function isSupported(feature, version)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {String} feature
+ * @param {String} version
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition. 
+ */ 
+Node.prototype.isSupported=function(feature, version){return false;}; 
+/**
+ * function hasAttributes()   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition. 
+ */ 
+Node.prototype.hasAttributes=function(){return false;};
+
+/**
+ * Object NodeList()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Object
+ */
+function NodeList(){};
+NodeList.prototype = new Object();
+/**
+ * Property length   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ */ 
+NodeList.prototype.length=0; 
+/**
+ * function item(index) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *     Note: This object can also be dereferenced using square bracket notation (e.g. obj[1]). Dereferencing with an integer index is equivalent to invoking the item method with that index 
+ * 
+ * @param {Number} index
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node     
+*/ 
+NodeList.prototype.item = function(index){return new Node();}; 
+
+/**
+ * Object NamedNodeMap()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Object
+ */
+function NamedNodeMap(){};
+NamedNodeMap.prototype = new Object();
+/**
+ * Property length 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+NamedNodeMap.prototype.length=0; 
+/**
+ * function getNamedItem(name) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} name
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+NamedNodeMap.prototype.getNamedItem=function(name){return new Node();}; 
+/**
+ * function setNamedItem(arg) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {Node} arg
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.setNamedItem=function(arg){return new Node();}; 
+/**
+ * function removeNamedItem(name)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} name
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.removeNamedItem=function(name){return new Node();}; 
+/**
+ * function item(index)
+ * Note: This object can also be dereferenced using square bracket notation (e.g. obj[1]). Dereferencing with an integer index is equivalent to invoking the item method with that index.
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {Number} index
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.item=function(index){return new Node();}; 
+/**
+ * function getNamedItemNS(namespaceURI, localName) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.getNamedItemNS=function(namespaceURI, localName){return new Node();}; 
+/**
+ * function setNamedItemNS(arg) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {Node} arg
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.setNamedItemNS=function(arg){return new Node();}; 
+/**
+ * function removeNamedItemNS(namespaceURI, localName)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.removeNamedItemNS=function(namespaceURI, localName){return new Node();}; 
+
+/**
+ * Object CharacterData()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */ 
+function CharacterData(){};
+CharacterData.prototype=new Node();
+/**
+ * Property data
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+CharacterData.prototype.data=""; 
+/**
+ * Property length
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+CharacterData.prototype.length=0; 
+/**
+ * function substringData(offset, count)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {Number} offset
+ * @param {Number} count
+ * @returns {String}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+CharacterData.prototype.substringData=function(offset, count){return "";}; 
+/**
+ * function appendData(arg)    
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {String} arg
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */  
+CharacterData.prototype.appendData=function(arg){}; 
+/**
+ * function insertData(offset, arg)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {Number} offset
+ * @param {String} arg
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+CharacterData.prototype.insertData=function(offset, arg){};  
+/**
+ * function deleteData(offset, count)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {Number} offset
+ * @param {Number} count
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+CharacterData.prototype.deleteData=function(offset, count){}; 
+/**
+ * function replaceData(offset, count, arg)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {Number} offset
+ * @param {Number} count
+ * @param {String} arg
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+CharacterData.prototype.replaceData=function(offset, count, arg){}; 
+
+/**
+ * Object Attr()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */
+function Attr(){};
+Attr.prototype = new Node();
+/**
+ * Property name
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Attr.prototype.name = ""; 
+/**
+ * Property specified
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Attr.prototype.specified = false; 
+/**
+ * Property value 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Attr.prototype.value = "";
+/**
+ * Property ownerElement 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   Element
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Element  
+ */ 
+Attr.prototype.ownerElement = new Element();
+
+/**
+ * Object Element()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */
+function Element(){};
+Element.prototype=new Node(); 
+/**
+ * Property tagName  
+ * @type   String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.     
+ */
+Element.prototype.tagName="";
+/**
+ * function addEventListener(Stirng type, Function listener, Boolean useCapture) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {String} type
+ * @param {Function} listener
+ * @param {Boolean} useCapture
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.addEventListener=function(type, listener, useCapture){}; 
+/**
+ * function attachEvent(String type, Function listener) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {String} type
+ * @param {Function} listener
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.attachEvent=function(type, listener){}; 
+/**
+ * function detachEvent(String type, Function listener) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {String} type
+ * @param {Function} listener
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.detachEvent=function(type, listener){}; 
+/**
+ * function dispatchEvent(Object event) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {Object} event
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.dispatchEvent=function(event){return false;}; 
+/**
+ * function getAttribute(name) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @returns {String}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getAttribute=function(name){return "";}; 
+/**
+ * function setAttribute(name, value) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @param {String} value
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.setAttribute=function(name, value){}; 
+/**
+ * function removeAttribute(name)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.removeAttribute=function(name){}; 
+/**
+ * function getAttributeNode(name)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @returns {Attr}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getAttributeNode=function(name){return new Attr();}; 
+/**
+ * function setAttributeNode(newAttr)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {Attr} newAttr
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.setAttributeNode=function(newAttr){return new Attr();}; 
+/**
+ * function removeAttributeNode(oldAttr) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {Attr} oldAttr
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Element.prototype.removeAttributeNode=function(oldAttr){return new Attr();}; 
+/**
+ * function getElementsByTagName(name)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getElementsByTagName=function(name){return new NodeList();}; 
+/**
+ * function getAttributeNS(namespaceURI, localName) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {String}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getAttributeNS=function(namespaceURI, localName){return "";}; 
+/**
+ * function setAttributeNS(namespaceURI, qualifiedName, value)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} qualifiedName
+ * @param {String} value
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.setAttributeNS=function(namespaceURI, qualifiedName, value){}; 
+/**
+ * function removeAttributeNS(namespaceURI, localName)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Element.prototype.removeAttributeNS=function(namespaceURI, localName){}; 
+/**
+ * function getAttributeNodeNS(namespaceURI, localName)   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {Attr}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getAttributeNodeNS=function(namespaceURI, localName){return new Attr();}; 
+/**
+ * function setAttributeNodeNS(newAttr)    
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {Attr} newAttr
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.setAttributeNodeNS=function(newAttr){return new Attr();}; 
+/**
+ * function getElementsByTagNameNS(namespaceURI, localName)   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getElementsByTagNameNS=function(namespaceURI, localName){return new NodeList();}; 
+/**
+ * function hasAttribute(name)   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Element.prototype.hasAttribute=function(name){return false;}; 
+/**
+ * function hasAttributeNS(namespaceURI, localName)    
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.hasAttributeNS=function(namespaceURI, localName){return false;}; 
+
+/**
+ * Object Text()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments CharacterData
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see CharacterData
+ */
+function Text(){};
+Text.prototype = new CharacterData();
+/**
+ * function splitText(offset)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {Number} offset
+ * @returns {Text}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Text
+ */
+Text.prototype.splitText = function(offset) {return new Text();};
+
+/**
+ * Object Comment()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments CharacterData
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see CharacterData
+ */
+function Comment(){};
+Comment.prototype = new CharacterData();
+
+/**
+ * Object CDATASection()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Text
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Text
+ */
+function CDATASection(){};
+CDATASection.prototype = new Text();
+
+/**
+ * Object DocumentType()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */
+function DocumentType(){};
+DocumentType.prototype = new Node();
+/**
+ * Property name
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.name=""; 
+/**
+ * Property entities
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type NamedNodeMap 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.entities = new NamedNodeMap();
+/**
+ * Property notations 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type NamedNodeMap 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.notations=new NamedNodeMap(); 
+/**
+ * Property publicId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.publicId=""; 
+/**
+ * Property systemId  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.systemId=""; 
+/**
+ * Property internalSubset 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.internalSubset="";
+
+/**
+ * Object Notation()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */
+function Notation(){};
+Notation.prototype=new Node(); 
+/**
+ * Property publicId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */  
+Notation.prototype.publicId=""; 
+/**
+ * Property systemId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+Notation.prototype.systemId="";
+
+/**
+ * Object Entity()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */ 
+function Entity(){}; 
+Entity.prototype=new Node();
+/**
+ * Property publicId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */  
+Entity.prototype.publicId="";
+/**
+ * Property systemId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */  
+Entity.prototype.systemId=""; 
+/**
+ * Property notationName 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */  
+Entity.prototype.notationName=""; 
+
+/**
+ * Object EntityReference()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */ 
+function EntityReference(){};
+EntityReference.prototype=new Node();
+
+/**
+ * Object ProcessingInstruction()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */ 
+function ProcessingInstruction(){}; 
+ProcessingInstruction.prototype=new Node();
+/**
+ * Property target  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+ProcessingInstruction.prototype.target="";
+/**
+ * Property target  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+ProcessingInstruction.prototype.data=""; 
+
+
+/*HTML DOM Below this line*/
+
+/**
+ * Object HTMLCollection()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */ 
+function HTMLCollection(){};
+HTMLCollection.prototype = new Object();
+/**
+ * Property length
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLCollection.prototype.length=0;
+/**
+ * function item(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLCollection.prototype.item = function(index){return new Node();};
+/**
+ * function namedItem(name)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} name
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLCollection.prototype.namedItem = function(index){return new Node();};
+
+/**
+ * Object HTMLOptionsCollection()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */ 
+function HTMLOptionsCollection(){};
+HTMLOptionsCollection.prototype = new Object();
+/**
+ * Property length
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionsCollection.prototype.length=0;
+/**
+ * function item(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionsCollection.prototype.item = function(index){return new Node();};
+/**
+ * function namedItem(name)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} name
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionsCollection.prototype.namedItem = function(index){return new Node();};
+
+/**
+ * Object HTMLDocument()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments Document
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see Document
+ */ 
+function HTMLDocument(){};
+HTMLDocument.prototype = new Document();
+/**
+ * Property title
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.title="";
+/**
+ * Property referrer
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.referrer="";
+/**
+ * Property domain
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.domain="";
+/**
+ * Property URL
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.URL="";
+/**
+ * Property body
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.body=new HTMLElement();
+/**
+ * Property images
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.images=new HTMLCollection();
+/**
+ * Property applets
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.applets=new HTMLCollection();
+/**
+ * Property links
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.links=new HTMLCollection();
+/**
+ * Property forms
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.forms=new HTMLCollection();
+/**
+ * Property anchors
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.anchors=new HTMLCollection();
+/**
+ * Property cookie
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.cookie="";
+/**
+ * Property lastModified
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.lastModified="";
+/**
+ * function open()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.open = function(){};
+/**
+ * function close()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.close = function(){};
+/**
+ * function write(text)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} text
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.write = function(text){};
+/**
+ * function writeln(text)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} text
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.writeln = function(text){};
+/**
+ * function getElementsByName(elementName)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} elementName
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.getElementsByName = function(elementName){return new NodeList();};
+
+/**
+ * Object HTMLElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments Element
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see Element
+ */ 
+function HTMLElement(){};
+HTMLElement.prototype = new Element();
+/**
+ * Property id
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.id="";
+/**
+ * Property title
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.title="";
+/**
+ * Property lang
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.lang="";
+/**
+ * Property dir
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.dir="";
+/**
+ * Property className
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.className="";
+/**
+ * Property innerHTML
+ * 
+ * @type String
+ */
+HTMLElement.prototype.innerHTML="";
+/**
+ * Property offsetHeight
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.offsetHeight=0;
+/**
+ * Property offsetWidth
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.offsetWidth=0;
+/**
+ * Property offsetLeft
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.offsetLeft=0;
+/**
+ * Property offsetTop
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.offsetTop=0;
+/**
+ * Property offsetParent
+ * 
+ * @type HTMLElement
+ */
+HTMLElement.prototype.offsetParent = new HTMLElement();
+/**
+ * Property scrollHeight
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.scrollHeight=0;
+/**
+ * Property scrollWidth
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.scrollWidth=0;
+/**
+ * Property scrollLeft
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.scrollLeft=0;
+/**
+ * Property scrollTop
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.scrollTop=0;
+/**
+ * Property style
+ * 
+ * @type CSS2Properties
+ */
+HTMLElement.prototype.style = new CSS2Properties();
+
+/**
+ * Object HTMLHtmlElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLHtmlElement(){};
+HTMLHtmlElement.prototype = new HTMLElement();
+/**
+ * Property version
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHtmlElement.prototype.version="";
+
+/**
+ * Object HTMLHeadElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLHeadElement(){};
+HTMLHeadElement.prototype = new HTMLElement();
+/**
+ * Property profile
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHeadElement.prototype.profile="";
+
+/**
+ * Object HTMLLinkElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLLinkElement(){};
+HTMLLinkElement.prototype = new HTMLElement();
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.disabled=false;
+/**
+ * Property charset
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.charset="";
+/**
+ * Property href
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.href="";
+/**
+ * Property hreflang
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.hreflang="";
+/**
+ * Property media
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.media="";
+/**
+ * Property rel
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.rel="";
+/**
+ * Property rev
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.rev="";
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.target="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.type="";
+
+/**
+ * Object HTMLTitleElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTitleElement(){};
+HTMLTitleElement.prototype = new HTMLElement();
+/**
+ * Property text
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTitleElement.prototype.text="";
+
+/**
+ * Object HTMLMetaElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLMetaElement(){};
+HTMLMetaElement.prototype = new HTMLElement();
+/**
+ * Property content
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMetaElement.prototype.content="";
+/**
+ * Property httpEquiv
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMetaElement.prototype.httpEquiv="";
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMetaElement.prototype.name="";
+/**
+ * Property scheme
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMetaElement.prototype.scheme="";
+
+/**
+ * Object HTMLBaseElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLBaseElement(){};
+HTMLBaseElement.prototype = new HTMLElement();
+/**
+ * Property href
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseElement.prototype.href="";
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseElement.prototype.target="";
+
+/**
+ * Object HTMLIsIndexElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLIsIndexElement(){};
+HTMLIsIndexElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIsIndexElement.prototype.form=new HTMLFormElement();
+/**
+ * Property prompt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIsIndexElement.prototype.prompt="";
+
+/**
+ * Object HTMLStyleElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLStyleElement(){};
+HTMLStyleElement.prototype = new HTMLElement();
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLStyleElement.prototype.disabled=false;
+/**
+ * Property media
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLStyleElement.prototype.media="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLStyleElement.prototype.type="";
+
+/**
+ * Object HTMLBodyElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLBodyElement(){};
+HTMLBodyElement.prototype = new HTMLElement();
+/**
+ * Property aLink
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.aLink="";
+/**
+ * Property background
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.background="";
+/**
+ * Property bgColor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.bgColor="";
+/**
+ * Property link
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.link="";
+/**
+ * Property text
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.text="";
+/**
+ * Property vLink
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.vLink="";
+
+/**
+ * Object HTMLFormElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFormElement(){};
+HTMLFormElement.prototype = new HTMLElement();
+/**
+ * Property elements
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.elements=new HTMLCollection();
+/**
+ * Property length
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.length=0;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.name="";
+/**
+ * Property acceptCharset
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.acceptCharset="";
+/**
+ * Property action
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.action="";
+/**
+ * Property enctype
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.enctype="";
+/**
+ * Property method
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.method="";
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.target="";
+/**
+ * function submit()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.submit = function(){};
+/**
+ * function reset()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.reset = function(){};
+
+/**
+ * Object HTMLSelectElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLSelectElement(){};
+HTMLSelectElement.prototype = new HTMLElement();
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.type="";
+/**
+ * Property selectedIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.selectedIndex=0;
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.value="";
+/**
+ * Property length
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.length=0;
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.form = new HTMLFormElement();
+/**
+ * Property options
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLOptionsCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.options= new HTMLOptionsCollection();
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.disabled=false;
+/**
+ * Property multiple
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.multiple=false;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.name="";
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.size=0;
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.tabIndex=0;
+/**
+ * function add(element, before)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {HTMLElement} element
+ * @param {HTMLElement} before
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.add = function(element, before){};
+/**
+ * function remove(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.remove = function(index){};
+/**
+ * function blur()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.blur = function(){};
+/**
+ * function focus()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.focus = function(){};
+
+/**
+ * Object HTMLOptGroupElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLOptGroupElement(){};
+HTMLOptGroupElement.prototype = new HTMLElement();
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptGroupElement.prototype.disabled=false;
+/**
+ * Property label
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptGroupElement.prototype.label="";
+
+/**
+ * Object Option()
+ * @constructor
+ * @param {String} text
+ * @param {String} value
+ * @param {Boolean} defaultSelected
+ * @param {Boolean} selected
+ */
+function Option(text, value, defaultSelected, selected){};
+Option.prototype = new HTMLOptionElement();
+/**
+ * Object HTMLOptionElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLOptionElement(){};
+HTMLOptionElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.form = new HTMLFormElement();
+/**
+ * Property defaultSelected
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.defaultSelected=false;
+/**
+ * Property text
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.text="";
+/**
+ * Property index
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.index=0;
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.disabled=false;
+/**
+ * Property label
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.label="";
+/**
+ * Property selected
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.selected=false;
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.value="";
+
+/**
+ * Object HTMLInputElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLInputElement(){};
+HTMLInputElement.prototype = new HTMLElement();
+/**
+ * Property defaultValue
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.defaultValue="";
+/**
+ * Property defaultChecked
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.defaultChecked=false;
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.form = new HTMLFormElement();
+/**
+ * Property accept
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.accept="";
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.accessKey="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.align="";
+/**
+ * Property alt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.alt="";
+/**
+ * Property checked
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.checked=false;
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.disabled=false;
+/**
+ * Property masLength
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.maxLenght=0;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.name="";
+/**
+ * Property readOnly
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.readOnly=false;
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.size=0;
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.src="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.tabIndex=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.type="";
+/**
+ * Property useMap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.useMap="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.value="";
+/**
+ * function blur()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.blur = function(){};
+/**
+ * function focus()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.focus = function(){};
+/**
+ * function select()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.select = function(){};
+/**
+ * function click()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.click = function(){};
+
+/**
+ * Object HTMLTextAreaElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTextAreaElement(){};
+HTMLTextAreaElement.prototype = new HTMLElement();
+/**
+ * Property defaultValue
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.defaultValue="";
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.form= new HTMLFormElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.accessKey="";
+/**
+ * Property cols
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.cols=0;
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.disabled=false;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.name="";
+/**
+ * Property readOnly
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.readOnly=false;
+/**
+ * Property rows
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.rows=0;
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.tabIndex=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.type="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.value="";
+/**
+ * function blur()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.blur = function(){};
+/**
+ * function focus()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.focus = function(){};
+/**
+ * function select()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.select = function(){};
+
+/**
+ * Object HTMLButtonElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLButtonElement(){};
+HTMLButtonElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.form = new HTMLFormElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.accessKey = "";
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.disabled=false;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.name="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.tabIndex=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.type="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.value="";
+
+/**
+ * Object HTMLLabelElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLLabelElement(){};
+HTMLLabelElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLabelElement.prototype.form = new HTMLFormElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLabelElement.prototype.accessKey="";
+/**
+ * Property htmlFor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLabelElement.prototype.htmlFor="";
+
+/**
+ * Object HTMLFieldSetElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFieldSetElement(){};
+HTMLFieldSetElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFieldSetElement.prototype.form = new HTMLFormElement();
+
+/**
+ * Object HTMLLegendElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLLegendElement(){};
+HTMLLegendElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLegendElement.prototype.form = new HTMLFormElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLegendElement.prototype.accessKey="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLegendElement.prototype.align="";
+
+/**
+ * Object HTMLUListElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLUListElement(){};
+HTMLUListElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLUListElement.prototype.compact=false;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLUListElement.prototype.type="";
+
+/**
+ * Object HTMLOListElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLOListElement(){};
+HTMLOListElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOListElement.prototype.compact=false;
+/**
+ * Property start
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOListElement.prototype.start=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOListElement.prototype.type="";
+
+/**
+ * Object HTMLDListElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLDListElement(){};
+HTMLDListElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDListElement.prototype.compact=false;
+
+/**
+ * Object HTMLDirectoryElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLDirectoryElement(){};
+HTMLDirectoryElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDirectoryElement.prototype.compact=false;
+
+/**
+ * Object HTMLMenuElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLMenuElement(){};
+HTMLMenuElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMenuElement.prototype.compact=false;
+
+/**
+ * Object HTMLLIElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLLIElement(){};
+HTMLLIElement.prototype = new HTMLElement();
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLIElement.prototype.type="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLIElement.prototype.value=0;
+
+/**
+ * Object HTMLDivElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLDivElement(){};
+HTMLDivElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDivElement.prototype.align="";
+
+/**
+ * Object HTMLParagraphElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLParagraphElement(){};
+HTMLParagraphElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParagraphElement.prototype.align="";
+
+/**
+ * Object HTMLHeadingElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLHeadingElement(){};
+HTMLHeadingElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHeadingElement.prototype.align="";
+
+/**
+ * Object HTMLQuoteElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLQuoteElement(){};
+HTMLQuoteElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLQuoteElement.prototype.align="";
+
+/**
+ * Object HTMLPreElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLPreElement(){};
+HTMLPreElement.prototype = new HTMLElement();
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLPreElement.prototype.width=0;
+
+/**
+ * Object HTMLBRElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLBRElement(){};
+HTMLBRElement.prototype = new HTMLElement();
+/**
+ * Property clear
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBRElement.prototype.clear="";
+
+/**
+ * Object HTMLBaseFontElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLBaseFontElement(){};
+HTMLBaseFontElement.prototype = new HTMLElement();
+/**
+ * Property color
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseFontElement.prototype.color="";
+/**
+ * Property face
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseFontElement.prototype.face="";
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseFontElement.prototype.size=0;
+
+/**
+ * Object HTMLBaseFontElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFontElement(){};
+HTMLFontElement.prototype = new HTMLElement();
+/**
+ * Property color
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFontElement.prototype.color="";
+/**
+ * Property face
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFontElement.prototype.face="";
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFontElement.prototype.size=0;
+
+/**
+ * Object HTMLHRElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLHRElement(){};
+HTMLHRElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHRElement.prototype.align="";
+/**
+ * Property noShade
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHRElement.prototype.noShade=false;
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHRElement.prototype.size="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHRElement.prototype.width="";
+
+/**
+ * Object HTMLModElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLModElement(){};
+HTMLModElement.prototype = new HTMLElement();
+/**
+ * Property cite
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLModElement.prototype.cite="";
+/**
+ * Property dateTime
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLModElement.prototype.dateTime="";
+
+/**
+ * Object HTMLAnchorElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLAnchorElement(){};
+HTMLAnchorElement.prototype = new HTMLElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.accessKey="";
+/**
+ * Property charset
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.charset="";
+/**
+ * Property coords
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.coords="";
+/**
+ * Property href
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.href="";
+/**
+ * Property hreflang
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.hreflang="";
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.name="";
+/**
+ * Property rel
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.rel="";
+/**
+ * Property rev
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.rev="";
+/**
+ * Property shape
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.shape="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.tabIndex=0;
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.target="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.type="";
+/**
+ * function blur()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.blur = function(){};
+/**
+ * function focus()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.focus = function(){};
+
+/**
+ * Object Image()
+ * @constructor
+ * @param {Number} width
+ * @param {Number} height
+ */
+function Image(width, height){};
+Image.prototype = new HTMLImageElement();
+/**
+ * Object HTMLImageElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLImageElement(){};
+HTMLImageElement.prototype = new HTMLElement();
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.name="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.align="";
+/**
+ * Property alt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.alt="";
+/**
+ * Property border
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.border="";
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.height=0;
+/**
+ * Property hspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.hspace=0;
+/**
+ * Property isMap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.isMap=false;
+/**
+ * Property longDesc
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.longDesc="";
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.src="";
+/**
+ * Property useMap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.useMap="";
+/**
+ * Property vspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.vspace=0;
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.width=0;
+
+/**
+ * Object HTMLObjectElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLObjectElement(){};
+HTMLObjectElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.form = new HTMLFormElement();
+/**
+ * Property code
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.code="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.align="";
+/**
+ * Property archive
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.archive="";
+/**
+ * Property border
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.border="";
+/**
+ * Property codeBase
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.codeBase="";
+/**
+ * Property codeType
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.codeType="";
+/**
+ * Property data
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.data="";
+/**
+ * Property declare
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.declare=false;
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.height="";
+/**
+ * Property hspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.hspace=0;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.name="";
+/**
+ * Property standby
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.standby="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.tabIndex=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.type="";
+/**
+ * Property useMap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.useMap="";
+/**
+ * Property vspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.vspace=0;
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.width="";
+/**
+ * Property contentDocument
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Document
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.contentDocument= new HTMLDocument();
+
+/**
+ * Object HTMLParamElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLParamElement(){};
+HTMLParamElement.prototype = new HTMLElement();
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParamElement.prototype.name="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParamElement.prototype.type="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParamElement.prototype.value="";
+/**
+ * Property valueType
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParamElement.prototype.valueType="";
+
+/**
+ * Object HTMLAppletElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLAppletElement(){};
+HTMLAppletElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.align="";
+/**
+ * Property alt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.alt="";
+/**
+ * Property archive
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.archive="";
+/**
+ * Property code
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.code="";
+/**
+ * Property codeBase
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.codeBase="";
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.hight="";
+/**
+ * Property hspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.hspace=0;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.name="";
+/**
+ * Property object
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.object="";
+/**
+ * Property vspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.vspace=0;
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.width="";
+
+/**
+ * Object HTMLMapElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLMapElement(){};
+HTMLMapElement.prototype = new HTMLElement();
+/**
+ * Property areas
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMapElement.prototype.areas = new HTMLCollection();
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMapElement.prototype.name="";
+
+/**
+ * Object HTMLAreaElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLAreaElement(){};
+HTMLAreaElement.prototype = new HTMLElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.accessKey="";
+/**
+ * Property alt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.alt="";
+/**
+ * Property coords
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.coords="";
+/**
+ * Property href
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.href="";
+/**
+ * Property noHref
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.noHref=false;
+/**
+ * Property shape
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.shape="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.tabIndex=0;
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.target="";
+
+/**
+ * Object HTMLScriptElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLScriptElement(){};
+HTMLScriptElement.prototype = new HTMLElement();
+/**
+ * Property text
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.text="";
+/**
+ * Property htmlFor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.htmlFor="";
+/**
+ * Property event
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.event="";
+/**
+ * Property charset
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.charset="";
+/**
+ * Property defer
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.defer="";
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.src="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.type="";
+
+/**
+ * Object HTMLTableElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableElement(){};
+HTMLTableElement.prototype = new HTMLElement();
+/**
+ * Property caption
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLTableCaptionElement
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.caption = new HTMLTableCaptionElement();
+/**
+ * Property tHead
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLTableSectionElement
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.tHead = new HTMLTableSelectionElement();
+/**
+ * Property tFoot
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLTableSectionElement
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.tFoot = new HTMLTableSelectionElement();
+/**
+ * Property rows
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.rows = new HTMLCollection();
+/**
+ * Property tBodies
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.tBodies = new HTMLCollection();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.align="";
+/**
+ * Property bgColor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.bgColor="";
+/**
+ * Property border
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.border="";
+/**
+ * Property cellPadding
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.cellPadding="";
+/**
+ * Property cellSpacing
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.cellSpacing="";
+/**
+ * Property frame
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.frame="";
+/**
+ * Property rules
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.rules="";
+/**
+ * Property summary
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.summary="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.width="";
+/**
+ * function createTHead();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @returns {HTMLElement}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.createTHead = function(){return new HTMLElement();};
+/**
+ * function deleteTHead();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.deleteTHead = function(){};
+/**
+ * function createTFoot();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @returns {HTMLElement}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.createTFoot = function(){return new HTMLElement();};
+/**
+ * function deleteTFoot();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.deleteTFoot = function(){};
+/**
+ * function createCaption();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @returns {HTMLElement}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.createCaption = function(){return new HTMLElement();};
+/**
+ * function deleteCaption();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.deleteCaption = function(){};
+/**
+ * function insertRow(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {HTMLElement}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.insertRow = function(index){return new HTMLElement();};
+/**
+ * function deleteRow(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.deleteRow = function(index){};
+
+/**
+ * Object HTMLTableCaptionElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableCaptionElement(){};
+HTMLTableCaptionElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCaptionElement.prototype.align="";
+
+/**
+ * Object HTMLTableColElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableColElement(){};
+HTMLTableColElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.align="";
+/**
+ * Property ch
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.ch="";
+/**
+ * Property chOff
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.chOff="";
+/**
+ * Property span
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.span=0;
+/**
+ * Property vAlign
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.vAlign="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.width="";
+
+/**
+ * Object HTMLTableSelectionElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableSelectionElement(){};
+HTMLTableSelectionElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.align="";
+/**
+ * Property ch
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.ch="";
+/**
+ * Property chOff
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.chOff="";
+/**
+ * Property vAlign
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.vAlign="";
+/**
+ * Property rows
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.rows="";
+/**
+ * function insertRow(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {HTMLElement}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.insertRow = function(index){return new HTMLElement();};
+/**
+ * function deleteRow(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.deleteRow = function(index){};
+
+/**
+ * Object HTMLTableRowElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableRowElement(){};
+HTMLTableRowElement.prototype = new HTMLElement();
+/**
+ * Property rowIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.rowIndex=0;
+/**
+ * Property sectionRowIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.sectionRowIndex=0;
+/**
+ * Property cells
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.cells = new HTMLCollection();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.align="";
+/**
+ * Property bgColor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.bgColor="";
+/**
+ * Property ch
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.ch="";
+/**
+ * Property chOff
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.chOff="";
+/**
+ * Property vAlign
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.vAlign="";
+/**
+ * function insertCell(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {HTMLElement}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.insertCell = function(index){return new HTMLElement();};
+/**
+ * function insertCell(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.deleteCell = function(index){};
+
+/**
+ * Object HTMLTableRowElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableCellElement(){};
+HTMLTableCellElement.prototype = new HTMLElement();
+/**
+ * Property cellIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.cellIndex=0;
+/**
+ * Property abbr
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.abbr="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.align="";
+/**
+ * Property axis
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.axis="";
+/**
+ * Property bgColor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.bgColor="";
+/**
+ * Property ch
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.ch="";
+/**
+ * Property chOff
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.chOff="";
+/**
+ * Property colSpan
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.colSpan=0;
+/**
+ * Property headers
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.headers="";
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.height="";
+/**
+ * Property noWrap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.noWrap=false;
+/**
+ * Property rowSpan
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.rowSpan=0;
+/**
+ * Property scope
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.scope="";
+/**
+ * Property vAlign
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.vAlign="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.width="";
+
+/**
+ * Object HTMLFrameSetElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFrameSetElement(){};
+HTMLFrameSetElement.prototype = new HTMLElement();
+/**
+ * Property cols
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameSetElement.prototype.cols="";
+/**
+ * Property rows
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameSetElement.prototype.rows="";
+
+/**
+ * Object HTMLFrameElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFrameElement(){};
+HTMLFrameElement.prototype = new HTMLElement();
+/**
+ * Property frameBorder
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.frameBorder="";
+/**
+ * Property longDesc
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.longDesc="";
+/**
+ * Property marginHeight
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.marginHeight="";
+/**
+ * Property marginWidth
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.marginWidth="";
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.name="";
+/**
+ * Property noResize
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.noResize=false;
+/**
+ * Property scrolling
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.scrolling="";
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.src="";
+/**
+ * Property contentDocument
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Document
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.contentDocument= new HTMLDocument();
+
+/**
+ * Object HTMLIFrameElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLIFrameElement(){};
+HTMLIFrameElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.align="";
+/**
+ * Property frameBorder
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.frameBorder="";
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.height="";
+/**
+ * Property longDesc
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.longDesc="";
+/**
+ * Property marginHeight
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.marginHeight="";
+/**
+ * Property marginWidth
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.marginWidth="";
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.name="";
+/**
+ * Property scrolling
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.scrolling="";
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.src="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.width="";
+/**
+ * Property contentDocument
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Document
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.contentDocument= new HTMLDocument();
+
+/* Stylesheets */
+/**
+ * Object CSS2Properties()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Style Specification.
+ */
+function CSS2Properties(){};
+CSS2Properties.prototype = new Object();
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/browserWindow.js b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/browserWindow.js
new file mode 100644
index 0000000..4342f17
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/browserWindow.js
@@ -0,0 +1,561 @@
+/*******************************************************************************
+ * Copyright (c) 2008, 2009 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+function BarProp(){};
+BarProp.prototype = new Array();
+
+/**
+ * Object Window()
+ * @super Global
+ * @constructor
+ * @since Common Usage, no standard
+*/
+function Window(){};
+Window.prototype = new Global();
+Window.prototype.self = new Window();
+Window.prototype.window = new Window();
+Window.prototype.frames = new Array();
+/**
+ * Property closed
+ * @type Boolean
+ * @memberOf Window
+ */
+Window.prototype.closed = new Boolean();
+/**
+ * Property defaultStatus
+ * @type String
+ * @memberOf Window
+ */
+Window.prototype.defaultStatus = "";
+/**
+ * Property document
+ * @type Document
+ * @memberOf Window
+ */
+Window.prototype.document= new HTMLDocument();
+/**
+ * Property history
+ * @type History
+ * @memberOf Window
+ */
+Window.prototype.history= new History();
+/**
+ * Property location
+ * @type Location
+ * @memberOf Window
+ */
+Window.prototype.location=new Location();
+/**
+ * Property name
+ * @type String
+ * @memberOf Window
+ */
+Window.prototype.name = "";
+/**
+ * Property navigator
+ * @type Navigator
+ * @memberOf Window
+ */
+Window.prototype.navigator = new Navigator();
+/**
+ * Property opener
+ * @type Window
+ * @memberOf Window
+ */
+Window.prototype.opener = new Window();
+/**
+ * Property outerWidth
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.outerWidth = 0;
+/**
+ * Property outerHeight
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.outerHeight = 0;
+/**
+ * Property pageXOffset
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.pageXOffset = 0;
+/**
+ * Property pageYOffset
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.pageYOffset = 0;
+/**
+ * Property parent
+ * @type Window
+ * @memberOf Window
+ */
+Window.prototype.parent = new Window();
+/**
+ * Property screen
+ * @type Screen
+ * @memberOf Window
+ */
+Window.prototype.screen = new Screen();
+/**
+ * Property status
+ * @type String
+ * @memberOf Window
+ */
+Window.prototype.status = "";
+/**
+ * Property top
+ * @type Window
+ * @memberOf Window
+ */
+Window.prototype.top = new Window();
+
+
+/*
+ * These properties may need to be moved into a browswer specific library.
+ */
+
+ /**
+ * Property innerWidth
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.innerWidth = 0;
+/**
+ * Property innerHeight
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.innerHeight = 0;
+/**
+ * Property screenX
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.screenX = 0;
+/**
+ * Property screenY
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.screenY = 0;
+/**
+ * Property screenLeft
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.screenLeft = 0;
+/**
+ * Property screenTop
+ * @type Number
+ * @memberOf Window
+ */
+Window.prototype.screenTop = 0;
+//Window.prototype.event = new Event();
+Window.prototype.length = 0;
+Window.prototype.scrollbars= new BarProp();
+Window.prototype.scrollX=0;
+Window.prototype.scrollY=0;
+Window.prototype.content= new Window();
+Window.prototype.menubar= new BarProp();
+Window.prototype.toolbar= new BarProp();
+Window.prototype.locationbar= new BarProp();
+Window.prototype.personalbar= new BarProp();
+Window.prototype.statusbar= new BarProp();
+Window.prototype.directories= new BarProp();
+Window.prototype.scrollMaxX=0;
+Window.prototype.scrollMaxY=0;
+Window.prototype.fullScreen="";
+Window.prototype.frameElement="";
+Window.prototype.sessionStorage="";
+/* End properites */
+
+/**
+ * function alert() 
+ * @param {String} arg
+ * @memberOf  Window
+ */
+Window.prototype.alert = function(arg){};
+/**
+ * function blur() 
+ * @memberOf  Window
+ */
+Window.prototype.blur = function(){};
+/**
+ * function clearInterval(arg) 
+ * @param arg
+ * @memberOf  Window
+ */
+Window.prototype.clearInterval = function(arg){};
+/**
+ * function clearTimeout(arg) 
+ * @param arg
+ * @memberOf  Window
+ */
+Window.prototype.clearTimeout = function(arg){};
+/**
+ * function close() 
+ * @memberOf  Window
+ */
+Window.prototype.close = function(){};
+/**
+ * function confirm() 
+ * @param {String} arg
+ * @memberOf  Window
+ * @returns {Boolean}
+ */
+Window.prototype.confirm = function(arg){return false;};
+/**
+ * function focus() 
+ * @memberOf  Window
+ */
+Window.prototype.focus = function(){};
+/**
+ * function getComputedStyle(arg1, arg2) 
+ * @param {Element} arg1
+ * @param {String} arg2
+ * @memberOf  Window
+ * @returns {Object}
+ */
+Window.prototype.getComputedStyle = function(arg1,arg2){return new Object();};
+/**
+ * function moveTo(arg1, arg2) 
+ * @param {Number} arg1
+ * @param {Number} arg2
+ * @memberOf  Window
+ */
+Window.prototype.moveTo = function(arg1,arg2){};
+/**
+ * function moveBy(arg1, arg2) 
+ * @param {Number} arg1
+ * @param {Number} arg2
+ * @memberOf  Window
+ */
+Window.prototype.moveBy = function(arg1,arg2){};
+/**
+ * function open(optionalArg1, optionalArg2, optionalArg3, optionalArg4) 
+ * @param {String} optionalArg1
+ * @param {String} optionalArg2
+ * @param {String} optionalArg3
+ * @param {Boolean} optionalArg4
+ * @memberOf  Window
+ * @returns {Window}
+ */
+Window.prototype.open = function(optionalArg1, optionalArg2, optionalArg3, optionalArg4){return new Window();};
+/**
+ * function print() 
+ * @memberOf  Window
+ */
+Window.prototype.print = function(){};
+/**
+ * function prompt(arg1, arg2) 
+ * @param {String} arg1
+ * @param {String} arg2
+ * @memberOf  Window
+ * @returns {String}
+ */
+Window.prototype.prompt = function(){return "";};
+/**
+ * function resizeTo(arg1, arg2) 
+ * @param {Number} arg1
+ * @param {Number} arg2
+ * @memberOf  Window
+ */
+Window.prototype.resizeTo=function(arg1,arg2){};
+/**
+ * function resizeBy(arg1, arg2) 
+ * @param {Number} arg1
+ * @param {Number} arg2
+ * @memberOf  Window
+ */
+Window.prototype.resizeBy=function(arg1,arg2){};
+/**
+ * function scrollTo(arg1, arg2) 
+ * @param {Number} arg1
+ * @param {Number} arg2
+ * @memberOf  Window
+ */
+Window.prototype.scrollTo=function(arg1,arg2){};
+/**
+ * function scrollBy(arg1, arg2) 
+ * @param {Number} arg1
+ * @param {Number} arg2
+ * @memberOf  Window
+ */
+Window.prototype.scrollBy=function(arg1,arg2){};
+/**
+ * function setInterval(arg1, arg2) 
+ * @param {Object} arg1
+ * @param {Number} arg2
+ * @memberOf  Window
+ * @returns {Number}
+ */
+Window.prototype.setInterval=function(arg1, arg2){return 0;};
+/**
+ * function setTimeout(arg1, arg2) 
+ * @param {Object} arg1
+ * @param {Number} arg2
+ * @memberOf  Window
+ * @returns {Number}
+ */
+Window.prototype.setTimeout=function(arg1, arg2){ return 0;};
+/**
+ * function atob(arg) 
+ * @param {String} arg
+ * @memberOf  Window
+ * @returns {String}
+ */
+Window.prototype.atob=function(arg){return "";};
+/**
+ * function btoa(arg) 
+ * @param {String} arg
+ * @memberOf  Window
+ * @returns {String}
+ */
+Window.prototype.btoa=function(arg){return "";};
+/**
+ * function setResizable(arg) 
+ * @param {Boolean} arg
+ * @memberOf  Window
+ */
+Window.prototype.setResizable=function(arg){};
+
+Window.prototype.captureEvents=function(arg1){};
+Window.prototype.releaseEvents=function(arg1){};
+Window.prototype.routeEvent=function(arg1){};
+Window.prototype.enableExternalCapture=function(){};
+Window.prototype.disableExternalCapture=function(){};
+Window.prototype.find=function(){};
+Window.prototype.back=function(){};
+Window.prototype.forward=function(){};
+Window.prototype.home=function(){};
+Window.prototype.stop=function(){};
+Window.prototype.scroll=function(arg1,arg2){};
+
+/*
+ * These functions may need to be moved into a browser specific library.
+ */
+Window.prototype.dispatchEvent=function(arg1){};
+Window.prototype.removeEventListener=function(arg1,arg2,arg3){};
+/* End functions */
+
+/**
+  * Object History()
+  * @super Object
+  * @constructor
+  * @since Common Usage, no standard
+ */
+function History(){};
+History.prototype=new Object();
+History.prototype.history = new History();
+/**
+ * Property length
+ * @type Number
+ * @memberOf History
+ */
+History.prototype.length = 0;
+/**
+ * function back()
+ * @memberOf History
+ */
+History.prototype.back = function(){};
+/**
+ * function forward()
+ * @memberOf History
+ */
+History.prototype.forward = function(){};
+/**
+ * function back()
+ * @param arg
+ * @memberOf History
+ */
+History.prototype.go = function(arg){};
+
+/**
+  * Object Location()
+  * @super Object
+  * @constructor
+  * @since Common Usage, no standard
+ */
+function Location(){};
+Location.prototype = new Object();
+Location.prototype.location = new Location();
+/**
+ * Property hash
+ * @type String
+ * @memberOf Location
+ */
+Location.prototype.hash = "";
+/**
+ * Property host
+ * @type String
+ * @memberOf Location
+ */
+Location.prototype.host = "";
+/**
+ * Property hostname
+ * @type String
+ * @memberOf Location
+ */
+Location.prototype.hostname = "";
+/**
+ * Property href
+ * @type String
+ * @memberOf Location
+ */
+Location.prototype.href = "";
+/**
+ * Property pathname
+ * @type String
+ * @memberOf Location
+ */
+Location.prototype.pathname = "";
+/**
+ * Property port
+ * @type String
+ * @memberOf Location
+ */
+Location.prototype.port = "";
+/**
+ * Property protocol
+ * @type String
+ * @memberOf Location
+ */
+Location.prototype.protocol = "";
+/**
+ * Property search
+ * @type String
+ * @memberOf Location
+ */
+Location.prototype.search = "";
+/**
+ * function assign(arg)
+ * @param {String} arg
+ * @memberOf Location
+ */
+Location.prototype.assign = function(arg){};
+/**
+ * function reload(optionalArg)
+ * @param {Boolean} optionalArg
+ * @memberOf Location
+ */
+Location.prototype.reload = function(optionalArg){};
+/**
+ * function replace(arg)
+ * @param {String} arg
+ * @memberOf Location
+ */
+Location.prototype.replace = function(arg){};
+
+/**
+ * Object Navigator()
+ * @super Object
+ * @constructor
+ * @since Common Usage, no standard
+*/
+function Navigator(){};
+Navigator.prototype = new Object();
+Navigator.prototype.navigator = new Navigator();
+/**
+ * Property appCodeName
+ * @type String
+ * @memberOf Navigator
+ */
+Navigator.prototype.appCodeName = "";
+/**
+ * Property appName
+ * @type String
+ * @memberOf Navigator
+ */
+Navigator.prototype.appName = "";
+/**
+ * Property appVersion
+ * @type String
+ * @memberOf Navigator
+ */
+Navigator.prototype.appVersion = "";
+/**
+ * Property cookieEnabled
+ * @type Boolean
+ * @memberOf Navigator
+ */
+Navigator.prototype.cookieEnabled = new Boolean();
+/**
+ * Property mimeTypes
+ * @type Array
+ * @memberOf Navigator
+ */
+Navigator.prototype.mimeTypes = new Array();
+/**
+ * Property platform
+ * @type String
+ * @memberOf Navigator
+ */
+Navigator.prototype.platform = "";
+/**
+ * Property plugins
+ * @type Array
+ * @memberOf Navigator
+ */
+Navigator.prototype.plugins = new Array();
+/**
+ * Property userAgent
+ * @type String
+ * @memberOf Navigator
+ */
+Navigator.prototype.userAgent = "";
+/**
+ * function javaEnabled()
+ * @returns {Boolean}
+ * @memberOf Navigator
+ */
+Navigator.prototype.javaEnabled = function(){return false;};
+
+/**
+ * Object Screen()
+ * @super Object
+ * @constructor
+ * @since Common Usage, no standard
+*/
+function Screen(){};
+Screen.prototype = new Object();
+Screen.prototype.screen = new Screen();
+/**
+ * Property availHeight
+ * @type Number
+ * @memberOf Screen
+ */
+Navigator.prototype.availHeight = 0;
+/**
+ * Property availWidth
+ * @type Number
+ * @memberOf Screen
+ */
+Navigator.prototype.availWidth = 0;
+/**
+ * Property colorDepth
+ * @type Number
+ * @memberOf Screen
+ */
+Navigator.prototype.colorDepth = 0;
+/**
+ * Property height
+ * @type Number
+ * @memberOf Screen
+ */
+Navigator.prototype.height = 0;
+/**
+ * Property width
+ * @type Number
+ * @memberOf Screen
+ */
+Navigator.prototype.width = 0;
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/dom5.js b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/dom5.js
new file mode 100644
index 0000000..aad16dc
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/dom5.js
@@ -0,0 +1,5393 @@
+/*******************************************************************************
+ * Copyright (c) 2008, 2009 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+/**
+ * Object DOMException()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Object
+ */
+function DOMException(){};
+DOMException.prototype = new Object();
+/**
+ * Constant DOMException.INDEX_SIZE_ERR=1
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.          
+ */
+DOMException.INDEX_SIZE_ERR=1;
+/**
+ * Constant DOMException.DOMSTRING_SIZE_ERR=2
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.DOMSTRING_SIZE_ERR=2;
+/**
+ * Constant DOMException.HIERARCHY_REQUEST_ERR=3
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.           
+ */
+DOMException.HIERARCHY_REQUEST_ERR=3;
+/**
+ * Constant DOMException.WRONG_DOCUMENT_ERR=4
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.WRONG_DOCUMENT_ERR=4;
+/**
+ * Constant DOMException.INVALID_CHARACTER_ERR=5
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.          
+ */
+DOMException.INVALID_CHARACTER_ERR=5;
+/**
+ * Constant DOMException.NO_DATA_ALLOWED_ER=6
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.NO_DATA_ALLOWED_ER=6;
+/**
+ * Constant DOMException.NO_MODIFICATION_ALLOWED_ERR=7
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.NO_MODIFICATION_ALLOWED_ERR=7;
+/**
+ * Constant DOMException.NOT_FOUND_ERR=8
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.          
+ */
+DOMException.NOT_FOUND_ERR=8;
+/**
+ * Constant DOMException.NOT_SUPPORTED_ERR=9
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.        
+ */
+DOMException.NOT_SUPPORTED_ERR=9;
+/**
+ * Constant DOMException.INUSE_ATTRIBUTE_ERR=10
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.INUSE_ATTRIBUTE_ERR=10;
+/**
+ * Constant DOMException.INVALID_STATE_ERR=11
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.INVALID_STATE_ERR=11;
+/**
+ * Constant DOMException.SYNTAX_ERR=12
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.        
+ */
+DOMException.SYNTAX_ERR=12;
+/**
+ * Constant DOMException.INVALID_MODIFICATION_ER=13
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.           
+ */
+DOMException.INVALID_MODIFICATION_ER=13;
+/**
+ * Constant DOMException.NAMESPACE_ERR=14
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.          
+ */
+DOMException.NAMESPACE_ERR=14;
+/**
+ * Constant DOMException.NVALID_ACCESS_ERR=15
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.         
+ */
+DOMException.INVALID_ACCESS_ERR=15;
+/**
+  * Property code
+  * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+  * 
+  * @type Number
+  * @since Standard ECMA-262 3rd. Edition 
+  * @since Level 2 Document Object Model Core Definition.   
+  */
+DOMException.prototype.code=0;
+
+/**
+ * Object DOMImplementation()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see   Object     
+ */
+function DOMImplementation(){};
+DOMImplementation.prototype = new Object();
+/**
+ * function hasFeature(feature, version)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} feature
+ * @param {String} version
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition. 
+ */ 
+DOMImplementation.prototype.hasFeature = function(feature, version){return false;};
+/**
+ * function createDocumentType(qualifiedName, publicId, systemId)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} qualifiedName
+ * @param {String} publicId
+ * @param {String} systemId
+ * @returns {DocumentType}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see DocumentType
+ */ 
+DOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId){return new DocumentType();};
+/**
+ * function createDocument(namespaceURI, qualifiedName, doctype)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} qualifiedName
+ * @param {DocumentType} doctype
+ * @returns {Document}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Document
+ */ 
+DOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype){return new HTMLDocument();}; 
+
+/**
+ * Object DocumentFragment()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see   Node    
+ */
+function DocumentFragment(){};
+DocumentFragment.prototype=new Node(); 
+
+/**
+ * Object Document()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */ 
+function Document(){};
+Document.prototype = new Node();
+/**
+ * Property defaultView
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type  Window
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Window  
+ */ 
+Document.prototype.defaultView = new Window(); 
+/**
+ * Property doctype
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type  DocumentType
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see DocumentType   
+ */ 
+Document.prototype.doctype = new DocumentType(); 
+/**
+ * Property implementation
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *  
+ * @type   DOMImplementation
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see DOMImplementation
+ */ 
+Document.prototype.implementation = new DOMImplementation();
+/**
+ * Property documentElement 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type   Element
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ * @see Element
+ */ 
+Document.prototype.documentElement= new HTMLElement(); 
+/**
+ * Property styleSheets
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type   Array
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Document.prototype.styleSheets= new Array(); 
+/**
+ * function createElement(tagName)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} tagName
+ * @returns {Element}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ * @see Element  
+ */  
+Document.prototype.createElement=function(tagName){return new HTMLElement();}; 
+/**
+ * function createDocumentFragment()  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @returns {DocumentFragment}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition. 
+ * @see DocumentFragment 
+ */ 
+Document.prototype.createDocumentFragment=function(){return new DocumentFragment();}; 
+/**
+ * function createTextNode(data)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} data
+ * @returns {Text}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ * @see Text 
+ */ 
+Document.prototype.createTextNode=function(data){return new Text();}; 
+/**
+ * function createComment(data)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} data
+ * @returns {Comment}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition. 
+ * @see Comment   
+ */ 
+Document.prototype.createComment=function(data){return new Comment();}; 
+/**
+ * function createCDATASection(data)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {String} data
+ * @returns {CDATASection}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see CDATASection     
+ */
+Document.prototype.createCDATASection=function(data){}; 
+/**
+ * function createProcessingInstruction(target, data) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type ProcessingInstruction
+ * @param {String} target
+ * @param {String} data
+ * @returns {ProcessingInstruction}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see ProcessingInstruction      
+*/
+Document.prototype.createProcessingInstruction=function(target, data){return new ProcessingInstruction();}; 
+/**
+ * function createAttribute(name) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *  
+ * @param {String} name
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Attr   
+ */
+Document.prototype.createAttribute=function(name){return new Attr();}; 
+/**
+ * function createEntityReference(name) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {String} name
+ * @returns {EntityReference}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see EntityReference     
+ */
+Document.prototype.createEntityReference=function(name){return new EntityReference();}; 
+/**
+ * function getElementsByTagName(tagname)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} tagname
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see NodeList     
+ */
+Document.prototype.getElementsByTagName=function(tagname){return new NodeList();}; 
+/**
+ * function importNode(importedNode, deep)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *  
+ * @param {Node} importedNode
+ * @param {Boolean} deep
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node        
+ */
+Document.prototype.importNode=function(importedNode, deep){return new Node();}; 
+/**
+ * function createElementNS(namespaceURI, qualifiedName) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} qualifiedName
+ * @returns {Element}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Element        
+ */
+Document.prototype.createElementNS=function(namespaceURI, qualifiedName){return new HTMLElement();}; 
+/**
+ * function createEvent(String eventType) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} eventType
+ * @returns {Object}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Element        
+ */
+Document.prototype.createEvent=function(eventType){return new Object();}; 
+/**
+ * function createAttributeNS(namespaceURI, qualifiedName)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} qualifiedName
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see  Attr       
+ */
+Document.prototype.createAttributeNS=function(namespaceURI, qualifiedName){return new Attr();}; 
+/**
+ * function getElementsByTagNameNS(namespaceURI, localName)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see  NodeList       
+ */
+Document.prototype.getElementsByTagNameNS=function(namespaceURI, localName){return new NodeList();}; 
+/**
+ * function getElementById(elementId)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} elementId
+ * @returns {Element}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Element         
+ */ 
+Document.prototype.getElementById=function(elementId){return new HTMLElement();};
+
+/**
+ * Object Node()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @memberOf Node
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Object    
+ */
+function Node(){};
+Node.prototype=new Object(); 
+/**
+ * Constant Node.ELEMENT_NODE=1
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.ELEMENT_NODE=1; 
+/**
+ * Constant Node.ATTRIBUTE_NODE=2
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.ATTRIBUTE_NODE=2;
+/**
+ * Constant Node.TEXT_NODE=3
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.TEXT_NODE=3;
+/**
+ * Constant Node.CDATA_SECTION_NODE=4
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.CDATA_SECTION_NODE=4; 
+/**
+ * Constant Node.ENTITY_REFERENCE_NODE=5
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.ENTITY_REFERENCE_NODE=5; 
+/**
+ * Constant Node.ENTITY_NODE=6
+ * @type Number
+ * @memberOf Node
+ * @see Node 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+
+ * @see    http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html     
+*/
+Node.ENTITY_NODE=6;
+/**
+ * Constant Node.PROCESSING_INSTRUCTION_NODE=7
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.PROCESSING_INSTRUCTION_NODE=7; 
+/**
+ * Constant Node.COMMENT_NODE=8
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.COMMENT_NODE=8;
+/**
+ * Constant Node.DOCUMENT_NODE=9
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.DOCUMENT_NODE=9;
+/**
+ * Constant Node.DOCUMENT_TYPE_NODE=10
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.DOCUMENT_TYPE_NODE=10; 
+/**
+ * Constant Node.DOCUMENT_FRAGMENT_NODE=11
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.DOCUMENT_FRAGMENT_NODE=11; 
+/**
+ * Constant Node.NOTATION_NODE=12
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @constant
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+Node.NOTATION_NODE=12;
+/**
+ * Property nodeName
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ */ 
+Node.prototype.nodeName = ""; 
+/**
+ * Property nodeValue
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Node.prototype.nodeValue = ""; 
+/**
+ * Property nodeType
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */  
+Node.prototype.nodeType = 0; 
+/**
+ * Property parentNode 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.parentNode=new Node(); 
+/**
+ * Property childNodes 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @type NodeList
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see NodeList    
+*/ 
+Node.prototype.childNodes=new NodeList(); 
+/**
+ * Property firstChild 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.firstChild=new Node(); 
+/**
+ * Property lastChild 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.lastChild=new Node();  
+/**
+ * Property previousSibling 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.previousSibling=new Node(); 
+/**
+ * Property nextSibling  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type Node
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+Node.prototype.nextSibling=new Node(); 
+/**
+ * Property attributes  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type NamedNodeMap
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ * @see NamedNodeMap
+ */ 
+Node.prototype.attributes=new NamedNodeMap();
+/**
+ * Property ownerDocument  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *  
+ * @type Document
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Document    
+ */ 
+Node.prototype.ownerDocument = new HTMLDocument(); 
+/**
+ * Property namespaceURI 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.   
+ */ 
+Node.prototype.namespaceURI=""; 
+/**
+ * Property prefix 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @type String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+Node.prototype.prefix = ""; 
+/**
+ * Property localName   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+Node.prototype.localName= "";
+/**
+ * function insertBefore(newChild, refChild) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Node} newChild
+ * @param {Node} refChild
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */  
+Node.prototype.insertBefore = function(newChild, refChild){return new Node();}; 
+/**
+ * function replaceChild(newChild, oldChild) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Node} newChild
+ * @param {Node} oldChild
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */ 
+Node.prototype.replaceChild = function(newChild, oldChild){return new Node();}; 
+/**
+ * function removeChild(oldChild) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Node} oldChild
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */ 
+Node.prototype.removeChild = function(oldChild){return new Node();}; 
+/**
+ * function appendChild(newChild) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Node} newChild
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */  
+Node.prototype.appendChild = function(newChild){return new Node();}; 
+/**
+ * function hasChildNodes() 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ */ 
+Node.prototype.hasChildNodes=function(){return false;}; 
+/**
+ * function cloneNode(deep) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {Boolean} deep
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node  
+ */ 
+Node.prototype.cloneNode=function(deep){return new Node();}; 
+/**
+ * function normalize() 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ */ 
+Node.prototype.normalize = function(){}; 
+/**
+ * function isSupported(feature, version)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @param {String} feature
+ * @param {String} version
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition. 
+ */ 
+Node.prototype.isSupported=function(feature, version){return false;}; 
+/**
+ * function hasAttributes()   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ *   
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition. 
+ */ 
+Node.prototype.hasAttributes=function(){return false;};
+
+/**
+ * Object NodeList()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Object
+ */
+function NodeList(){};
+NodeList.prototype = new Object();
+/**
+ * Property length   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.  
+ */ 
+NodeList.prototype.length=0; 
+/**
+ * function item(index) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *     Note: This object can also be dereferenced using square bracket notation (e.g. obj[1]). Dereferencing with an integer index is equivalent to invoking the item method with that index 
+ * 
+ * @param {Number} index
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node     
+*/ 
+NodeList.prototype.item = function(index){return new Node();}; 
+
+/**
+ * Object NamedNodeMap()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Object
+ */
+function NamedNodeMap(){};
+NamedNodeMap.prototype = new Object();
+/**
+ * Property length 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.   
+ */
+NamedNodeMap.prototype.length=0; 
+/**
+ * function getNamedItem(name) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} name
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */  
+NamedNodeMap.prototype.getNamedItem=function(name){return new Node();}; 
+/**
+ * function setNamedItem(arg) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {Node} arg
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.setNamedItem=function(arg){return new Node();}; 
+/**
+ * function removeNamedItem(name)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} name
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.removeNamedItem=function(name){return new Node();}; 
+/**
+ * function item(index)
+ * Note: This object can also be dereferenced using square bracket notation (e.g. obj[1]). Dereferencing with an integer index is equivalent to invoking the item method with that index.
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {Number} index
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.item=function(index){return new Node();}; 
+/**
+ * function getNamedItemNS(namespaceURI, localName) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.getNamedItemNS=function(namespaceURI, localName){return new Node();}; 
+/**
+ * function setNamedItemNS(arg) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {Node} arg
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.setNamedItemNS=function(arg){return new Node();}; 
+/**
+ * function removeNamedItemNS(namespaceURI, localName)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {Node}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node    
+ */ 
+NamedNodeMap.prototype.removeNamedItemNS=function(namespaceURI, localName){return new Node();}; 
+
+/**
+ * Object CharacterData()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */ 
+function CharacterData(){};
+CharacterData.prototype=new Node();
+/**
+ * Property data
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+CharacterData.prototype.data=""; 
+/**
+ * Property length
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+CharacterData.prototype.length=0; 
+/**
+ * function substringData(offset, count)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {Number} offset
+ * @param {Number} count
+ * @returns {String}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+CharacterData.prototype.substringData=function(offset, count){return "";}; 
+/**
+ * function appendData(arg)    
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {String} arg
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */  
+CharacterData.prototype.appendData=function(arg){}; 
+/**
+ * function insertData(offset, arg)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {Number} offset
+ * @param {String} arg
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+CharacterData.prototype.insertData=function(offset, arg){};  
+/**
+ * function deleteData(offset, count)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {Number} offset
+ * @param {Number} count
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+CharacterData.prototype.deleteData=function(offset, count){}; 
+/**
+ * function replaceData(offset, count, arg)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html  
+ *  
+ * @param {Number} offset
+ * @param {Number} count
+ * @param {String} arg
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+CharacterData.prototype.replaceData=function(offset, count, arg){}; 
+
+/**
+ * Object Attr()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */
+function Attr(){};
+Attr.prototype = new Node();
+/**
+ * Property name
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Attr.prototype.name = ""; 
+/**
+ * Property specified
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Attr.prototype.specified = false; 
+/**
+ * Property value 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Attr.prototype.value = "";
+/**
+ * Property ownerElement 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type   Element
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Element  
+ */ 
+Attr.prototype.ownerElement = new Element();
+
+/**
+ * Object Element()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */
+function Element(){};
+Element.prototype=new Node(); 
+/**
+ * Property tagName  
+ * @type   String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.     
+ */
+Element.prototype.tagName="";
+/**
+ * function addEventListener(Stirng type, Function listener, Boolean useCapture) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {String} type
+ * @param {Function} listener
+ * @param {Boolean} useCapture
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.addEventListener=function(type, listener, useCapture){}; 
+/**
+ * function attachEvent(String type, Function listener) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {String} type
+ * @param {Function} listener
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.attachEvent=function(type, listener){}; 
+/**
+ * function detachEvent(String type, Function listener) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {String} type
+ * @param {Function} listener
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.detachEvent=function(type, listener){}; 
+/**
+ * function dispatchEvent(Object event) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @param {Object} event
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.dispatchEvent=function(event){return false;}; 
+/**
+ * function getAttribute(name) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @returns {String}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getAttribute=function(name){return "";}; 
+/**
+ * function setAttribute(name, value) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @param {String} value
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.setAttribute=function(name, value){}; 
+/**
+ * function removeAttribute(name)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.removeAttribute=function(name){}; 
+/**
+ * function getAttributeNode(name)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @returns {Attr}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getAttributeNode=function(name){return new Attr();}; 
+/**
+ * function setAttributeNode(newAttr)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {Attr} newAttr
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.setAttributeNode=function(newAttr){return new Attr();}; 
+/**
+ * function removeAttributeNode(oldAttr) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {Attr} oldAttr
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Element.prototype.removeAttributeNode=function(oldAttr){return new Attr();}; 
+/**
+ * function getElementsByTagName(name)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getElementsByTagName=function(name){return new NodeList();}; 
+/**
+ * function getAttributeNS(namespaceURI, localName) 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {String}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getAttributeNS=function(namespaceURI, localName){return "";}; 
+/**
+ * function setAttributeNS(namespaceURI, qualifiedName, value)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} qualifiedName
+ * @param {String} value
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.setAttributeNS=function(namespaceURI, qualifiedName, value){}; 
+/**
+ * function removeAttributeNS(namespaceURI, localName)  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Element.prototype.removeAttributeNS=function(namespaceURI, localName){}; 
+/**
+ * function getAttributeNodeNS(namespaceURI, localName)   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {Attr}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getAttributeNodeNS=function(namespaceURI, localName){return new Attr();}; 
+/**
+ * function setAttributeNodeNS(newAttr)    
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {Attr} newAttr
+ * @returns {Attr}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.setAttributeNodeNS=function(newAttr){return new Attr();}; 
+/**
+ * function getElementsByTagNameNS(namespaceURI, localName)   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.getElementsByTagNameNS=function(namespaceURI, localName){return new NodeList();}; 
+/**
+ * function hasAttribute(name)   
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} name
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */ 
+Element.prototype.hasAttribute=function(name){return false;}; 
+/**
+ * function hasAttributeNS(namespaceURI, localName)    
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ *  
+ * @param {String} namespaceURI
+ * @param {String} localName
+ * @returns {Boolean}
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+Element.prototype.hasAttributeNS=function(namespaceURI, localName){return false;}; 
+
+/**
+ * Object Text()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments CharacterData
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see CharacterData
+ */
+function Text(){};
+Text.prototype = new CharacterData();
+/**
+ * function splitText(offset)
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @param {Number} offset
+ * @returns {Text}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Text
+ */
+Text.prototype.splitText = function(offset) {return new Text();};
+
+/**
+ * Object Comment()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments CharacterData
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see CharacterData
+ */
+function Comment(){};
+Comment.prototype = new CharacterData();
+
+/**
+ * Object CDATASection()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Text
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Text
+ */
+function CDATASection(){};
+CDATASection.prototype = new Text();
+
+/**
+ * Object DocumentType()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */
+function DocumentType(){};
+DocumentType.prototype = new Node();
+/**
+ * Property name
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.name=""; 
+/**
+ * Property entities
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type NamedNodeMap 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.entities = new NamedNodeMap();
+/**
+ * Property notations 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type NamedNodeMap 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.notations=new NamedNodeMap(); 
+/**
+ * Property publicId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.publicId=""; 
+/**
+ * Property systemId  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.systemId=""; 
+/**
+ * Property internalSubset 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @type String 
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.    
+ */
+DocumentType.prototype.internalSubset="";
+
+/**
+ * Object Notation()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */
+function Notation(){};
+Notation.prototype=new Node(); 
+/**
+ * Property publicId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */  
+Notation.prototype.publicId=""; 
+/**
+ * Property systemId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+Notation.prototype.systemId="";
+
+/**
+ * Object Entity()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */ 
+function Entity(){}; 
+Entity.prototype=new Node();
+/**
+ * Property publicId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */  
+Entity.prototype.publicId="";
+/**
+ * Property systemId 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */  
+Entity.prototype.systemId=""; 
+/**
+ * Property notationName 
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */  
+Entity.prototype.notationName=""; 
+
+/**
+ * Object EntityReference()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */ 
+function EntityReference(){};
+EntityReference.prototype=new Node();
+
+/**
+ * Object ProcessingInstruction()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+ * 
+ * @augments Node
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+ * @see Node
+ */ 
+function ProcessingInstruction(){}; 
+ProcessingInstruction.prototype=new Node();
+/**
+ * Property target  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+ProcessingInstruction.prototype.target="";
+/**
+ * Property target  
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html 
+ * 
+ * @type String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition 
+ * @since Level 2 Document Object Model Core Definition.     
+ */ 
+ProcessingInstruction.prototype.data=""; 
+
+
+/*HTML DOM Below this line*/
+
+/**
+ * Object HTMLCollection()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */ 
+function HTMLCollection(){};
+HTMLCollection.prototype = new Object();
+/**
+ * Property length
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLCollection.prototype.length=0;
+/**
+ * function item(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLCollection.prototype.item = function(index){return new Node();};
+/**
+ * function namedItem(name)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} name
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLCollection.prototype.namedItem = function(index){return new Node();};
+
+/**
+ * Object HTMLOptionsCollection()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */ 
+function HTMLOptionsCollection(){};
+HTMLOptionsCollection.prototype = new Object();
+/**
+ * Property length
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionsCollection.prototype.length=0;
+/**
+ * function item(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionsCollection.prototype.item = function(index){return new Node();};
+/**
+ * function namedItem(name)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} name
+ * @returns {Node}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionsCollection.prototype.namedItem = function(index){return new Node();};
+
+/**
+ * Object HTMLDocument()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments Document
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see Document
+ */ 
+function HTMLDocument(){};
+HTMLDocument.prototype = new Document();
+/**
+ * Property title
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.title="";
+/**
+ * Property referrer
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.referrer="";
+/**
+ * Property domain
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.domain="";
+/**
+ * Property URL
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.URL="";
+/**
+ * Property body
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.body=new HTMLElement();
+/**
+ * Property images
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.images=new HTMLCollection();
+/**
+ * Property applets
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.applets=new HTMLCollection();
+/**
+ * Property links
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.links=new HTMLCollection();
+/**
+ * Property forms
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.forms=new HTMLCollection();
+/**
+ * Property anchors
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.anchors=new HTMLCollection();
+/**
+ * Property cookie
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.cookie="";
+/**
+ * Property lastModified
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.lastModified="";
+/**
+ * function open()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.open = function(){};
+/**
+ * function close()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.close = function(){};
+/**
+ * function write(text)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} text
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.write = function(text){};
+/**
+ * function writeln(text)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} text
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.writeln = function(text){};
+/**
+ * function getElementsByName(elementName)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {String} elementName
+ * @returns {NodeList}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDocument.prototype.getElementsByName = function(elementName){return new NodeList();};
+
+/**
+ * Object HTMLElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments Element
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see Element
+ */ 
+function HTMLElement(){};
+HTMLElement.prototype = new Element();
+/**
+ * Property id
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.id="";
+/**
+ * Property title
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.title="";
+/**
+ * Property lang
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.lang="";
+/**
+ * Property dir
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.dir="";
+/**
+ * Property className
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLElement.prototype.className="";
+/**
+ * Property innerHTML
+ * 
+ * @type String
+ */
+HTMLElement.prototype.innerHTML="";
+/**
+ * Property offsetHeight
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.offsetHeight=0;
+/**
+ * Property offsetWidth
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.offsetWidth=0;
+/**
+ * Property offsetLeft
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.offsetLeft=0;
+/**
+ * Property offsetTop
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.offsetTop=0;
+/**
+ * Property offsetParent
+ * 
+ * @type HTMLElement
+ */
+HTMLElement.prototype.offsetParent = new HTMLElement();
+/**
+ * Property scrollHeight
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.scrollHeight=0;
+/**
+ * Property scrollWidth
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.scrollWidth=0;
+/**
+ * Property scrollLeft
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.scrollLeft=0;
+/**
+ * Property scrollTop
+ * 
+ * @type Number
+ */
+HTMLElement.prototype.scrollTop=0;
+/**
+ * Property style
+ * 
+ * @type CSS2Properties
+ */
+HTMLElement.prototype.style = new CSS2Properties();
+
+/**
+ * Object HTMLHtmlElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLHtmlElement(){};
+HTMLHtmlElement.prototype = new HTMLElement();
+/**
+ * Property version
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHtmlElement.prototype.version="";
+
+/**
+ * Object HTMLHeadElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLHeadElement(){};
+HTMLHeadElement.prototype = new HTMLElement();
+/**
+ * Property profile
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHeadElement.prototype.profile="";
+
+/**
+ * Object HTMLLinkElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLLinkElement(){};
+HTMLLinkElement.prototype = new HTMLElement();
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.disabled=false;
+/**
+ * Property charset
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.charset="";
+/**
+ * Property href
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.href="";
+/**
+ * Property hreflang
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.hreflang="";
+/**
+ * Property media
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.media="";
+/**
+ * Property rel
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.rel="";
+/**
+ * Property rev
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.rev="";
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.target="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLinkElement.prototype.type="";
+
+/**
+ * Object HTMLTitleElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTitleElement(){};
+HTMLTitleElement.prototype = new HTMLElement();
+/**
+ * Property text
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTitleElement.prototype.text="";
+
+/**
+ * Object HTMLMetaElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLMetaElement(){};
+HTMLMetaElement.prototype = new HTMLElement();
+/**
+ * Property content
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMetaElement.prototype.content="";
+/**
+ * Property httpEquiv
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMetaElement.prototype.httpEquiv="";
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMetaElement.prototype.name="";
+/**
+ * Property scheme
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMetaElement.prototype.scheme="";
+
+/**
+ * Object HTMLBaseElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLBaseElement(){};
+HTMLBaseElement.prototype = new HTMLElement();
+/**
+ * Property href
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseElement.prototype.href="";
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseElement.prototype.target="";
+
+/**
+ * Object HTMLIsIndexElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLIsIndexElement(){};
+HTMLIsIndexElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIsIndexElement.prototype.form=new HTMLFormElement();
+/**
+ * Property prompt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIsIndexElement.prototype.prompt="";
+
+/**
+ * Object HTMLStyleElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLStyleElement(){};
+HTMLStyleElement.prototype = new HTMLElement();
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLStyleElement.prototype.disabled=false;
+/**
+ * Property media
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLStyleElement.prototype.media="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLStyleElement.prototype.type="";
+
+/**
+ * Object HTMLBodyElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLBodyElement(){};
+HTMLBodyElement.prototype = new HTMLElement();
+/**
+ * Property aLink
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.aLink="";
+/**
+ * Property background
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.background="";
+/**
+ * Property bgColor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.bgColor="";
+/**
+ * Property link
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.link="";
+/**
+ * Property text
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.text="";
+/**
+ * Property vLink
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBodyElement.prototype.vLink="";
+
+/**
+ * Object HTMLFormElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFormElement(){};
+HTMLFormElement.prototype = new HTMLElement();
+/**
+ * Property elements
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.elements=new HTMLCollection();
+/**
+ * Property length
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.length=0;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.name="";
+/**
+ * Property acceptCharset
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.acceptCharset="";
+/**
+ * Property action
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.action="";
+/**
+ * Property enctype
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.enctype="";
+/**
+ * Property method
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.method="";
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.target="";
+/**
+ * function submit()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.submit = function(){};
+/**
+ * function reset()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFormElement.prototype.reset = function(){};
+
+/**
+ * Object HTMLSelectElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLSelectElement(){};
+HTMLSelectElement.prototype = new HTMLElement();
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.type="";
+/**
+ * Property selectedIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.selectedIndex=0;
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.value="";
+/**
+ * Property length
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.length=0;
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.form = new HTMLFormElement();
+/**
+ * Property options
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLOptionsCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.options= new HTMLOptionsCollection();
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.disabled=false;
+/**
+ * Property multiple
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.multiple=false;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.name="";
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.size=0;
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.tabIndex=0;
+/**
+ * function add(element, before)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {HTMLElement} element
+ * @param {HTMLElement} before
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.add = function(element, before){};
+/**
+ * function remove(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.remove = function(index){};
+/**
+ * function blur()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.blur = function(){};
+/**
+ * function focus()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLSelectElement.prototype.focus = function(){};
+
+/**
+ * Object HTMLOptGroupElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLOptGroupElement(){};
+HTMLOptGroupElement.prototype = new HTMLElement();
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptGroupElement.prototype.disabled=false;
+/**
+ * Property label
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptGroupElement.prototype.label="";
+
+/**
+ * Object Option()
+ * @constructor
+ * @param {String} text
+ * @param {String} value
+ * @param {Boolean} defaultSelected
+ * @param {Boolean} selected
+ */
+function Option(text, value, defaultSelected, selected){};
+Option.prototype = new HTMLOptionElement();
+/**
+ * Object HTMLOptionElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLOptionElement(){};
+HTMLOptionElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.form = new HTMLFormElement();
+/**
+ * Property defaultSelected
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.defaultSelected=false;
+/**
+ * Property text
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.text="";
+/**
+ * Property index
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.index=0;
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.disabled=false;
+/**
+ * Property label
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.label="";
+/**
+ * Property selected
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.selected=false;
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOptionElement.prototype.value="";
+
+/**
+ * Object HTMLInputElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLInputElement(){};
+HTMLInputElement.prototype = new HTMLElement();
+/**
+ * Property defaultValue
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.defaultValue="";
+/**
+ * Property defaultChecked
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.defaultChecked=false;
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.form = new HTMLFormElement();
+/**
+ * Property accept
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.accept="";
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.accessKey="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.align="";
+/**
+ * Property alt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.alt="";
+/**
+ * Property checked
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.checked=false;
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.disabled=false;
+/**
+ * Property masLength
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.maxLenght=0;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.name="";
+/**
+ * Property readOnly
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.readOnly=false;
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.size=0;
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.src="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.tabIndex=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.type="";
+/**
+ * Property useMap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.useMap="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.value="";
+/**
+ * function blur()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.blur = function(){};
+/**
+ * function focus()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.focus = function(){};
+/**
+ * function select()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.select = function(){};
+/**
+ * function click()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLInputElement.prototype.click = function(){};
+
+/**
+ * Object HTMLTextAreaElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTextAreaElement(){};
+HTMLTextAreaElement.prototype = new HTMLElement();
+/**
+ * Property defaultValue
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.defaultValue="";
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.form= new HTMLFormElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.accessKey="";
+/**
+ * Property cols
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.cols=0;
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.disabled=false;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.name="";
+/**
+ * Property readOnly
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.readOnly=false;
+/**
+ * Property rows
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.rows=0;
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.tabIndex=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.type="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.value="";
+/**
+ * function blur()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.blur = function(){};
+/**
+ * function focus()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.focus = function(){};
+/**
+ * function select()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTextAreaElement.prototype.select = function(){};
+
+/**
+ * Object HTMLButtonElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLButtonElement(){};
+HTMLButtonElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.form = new HTMLFormElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.accessKey = "";
+/**
+ * Property disabled
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.disabled=false;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.name="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.tabIndex=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.type="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLButtonElement.prototype.value="";
+
+/**
+ * Object HTMLLabelElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLLabelElement(){};
+HTMLLabelElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLabelElement.prototype.form = new HTMLFormElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLabelElement.prototype.accessKey="";
+/**
+ * Property htmlFor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLabelElement.prototype.htmlFor="";
+
+/**
+ * Object HTMLFieldSetElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFieldSetElement(){};
+HTMLFieldSetElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFieldSetElement.prototype.form = new HTMLFormElement();
+
+/**
+ * Object HTMLLegendElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLLegendElement(){};
+HTMLLegendElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLegendElement.prototype.form = new HTMLFormElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLegendElement.prototype.accessKey="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLegendElement.prototype.align="";
+
+/**
+ * Object HTMLUListElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLUListElement(){};
+HTMLUListElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLUListElement.prototype.compact=false;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLUListElement.prototype.type="";
+
+/**
+ * Object HTMLOListElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLOListElement(){};
+HTMLOListElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOListElement.prototype.compact=false;
+/**
+ * Property start
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOListElement.prototype.start=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLOListElement.prototype.type="";
+
+/**
+ * Object HTMLDListElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLDListElement(){};
+HTMLDListElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDListElement.prototype.compact=false;
+
+/**
+ * Object HTMLDirectoryElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLDirectoryElement(){};
+HTMLDirectoryElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDirectoryElement.prototype.compact=false;
+
+/**
+ * Object HTMLMenuElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLMenuElement(){};
+HTMLMenuElement.prototype = new HTMLElement();
+/**
+ * Property compact
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMenuElement.prototype.compact=false;
+
+/**
+ * Object HTMLLIElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLLIElement(){};
+HTMLLIElement.prototype = new HTMLElement();
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLIElement.prototype.type="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLLIElement.prototype.value=0;
+
+/**
+ * Object HTMLDivElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLDivElement(){};
+HTMLDivElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLDivElement.prototype.align="";
+
+/**
+ * Object HTMLParagraphElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLParagraphElement(){};
+HTMLParagraphElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParagraphElement.prototype.align="";
+
+/**
+ * Object HTMLHeadingElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLHeadingElement(){};
+HTMLHeadingElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHeadingElement.prototype.align="";
+
+/**
+ * Object HTMLQuoteElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLQuoteElement(){};
+HTMLQuoteElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLQuoteElement.prototype.align="";
+
+/**
+ * Object HTMLPreElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLPreElement(){};
+HTMLPreElement.prototype = new HTMLElement();
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLPreElement.prototype.width=0;
+
+/**
+ * Object HTMLBRElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLBRElement(){};
+HTMLBRElement.prototype = new HTMLElement();
+/**
+ * Property clear
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBRElement.prototype.clear="";
+
+/**
+ * Object HTMLBaseFontElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLBaseFontElement(){};
+HTMLBaseFontElement.prototype = new HTMLElement();
+/**
+ * Property color
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseFontElement.prototype.color="";
+/**
+ * Property face
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseFontElement.prototype.face="";
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLBaseFontElement.prototype.size=0;
+
+/**
+ * Object HTMLBaseFontElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFontElement(){};
+HTMLFontElement.prototype = new HTMLElement();
+/**
+ * Property color
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFontElement.prototype.color="";
+/**
+ * Property face
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFontElement.prototype.face="";
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFontElement.prototype.size=0;
+
+/**
+ * Object HTMLHRElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLHRElement(){};
+HTMLHRElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHRElement.prototype.align="";
+/**
+ * Property noShade
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHRElement.prototype.noShade=false;
+/**
+ * Property size
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHRElement.prototype.size="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLHRElement.prototype.width="";
+
+/**
+ * Object HTMLModElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLModElement(){};
+HTMLModElement.prototype = new HTMLElement();
+/**
+ * Property cite
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLModElement.prototype.cite="";
+/**
+ * Property dateTime
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLModElement.prototype.dateTime="";
+
+/**
+ * Object HTMLAnchorElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLAnchorElement(){};
+HTMLAnchorElement.prototype = new HTMLElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.accessKey="";
+/**
+ * Property charset
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.charset="";
+/**
+ * Property coords
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.coords="";
+/**
+ * Property href
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.href="";
+/**
+ * Property hreflang
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.hreflang="";
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.name="";
+/**
+ * Property rel
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.rel="";
+/**
+ * Property rev
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.rev="";
+/**
+ * Property shape
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.shape="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.tabIndex=0;
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.target="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.type="";
+/**
+ * function blur()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.blur = function(){};
+/**
+ * function focus()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAnchorElement.prototype.focus = function(){};
+
+/**
+ * Object Image()
+ * @constructor
+ * @param {Number} width
+ * @param {Number} height
+ */
+function Image(width, height){};
+Image.prototype = new HTMLImageElement();
+/**
+ * Object HTMLImageElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLImageElement(){};
+HTMLImageElement.prototype = new HTMLElement();
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.name="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.align="";
+/**
+ * Property alt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.alt="";
+/**
+ * Property border
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.border="";
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.height=0;
+/**
+ * Property hspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.hspace=0;
+/**
+ * Property isMap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.isMap=false;
+/**
+ * Property longDesc
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.longDesc="";
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.src="";
+/**
+ * Property useMap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.useMap="";
+/**
+ * Property vspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.vspace=0;
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLImageElement.prototype.width=0;
+
+/**
+ * Object HTMLObjectElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLObjectElement(){};
+HTMLObjectElement.prototype = new HTMLElement();
+/**
+ * Property form
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLFormElement
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.form = new HTMLFormElement();
+/**
+ * Property code
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.code="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.align="";
+/**
+ * Property archive
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.archive="";
+/**
+ * Property border
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.border="";
+/**
+ * Property codeBase
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.codeBase="";
+/**
+ * Property codeType
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.codeType="";
+/**
+ * Property data
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.data="";
+/**
+ * Property declare
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.declare=false;
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.height="";
+/**
+ * Property hspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.hspace=0;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.name="";
+/**
+ * Property standby
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.standby="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.tabIndex=0;
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.type="";
+/**
+ * Property useMap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.useMap="";
+/**
+ * Property vspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.vspace=0;
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.width="";
+/**
+ * Property contentDocument
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Document
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLObjectElement.prototype.contentDocument= new HTMLDocument();
+
+/**
+ * Object HTMLParamElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLParamElement(){};
+HTMLParamElement.prototype = new HTMLElement();
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParamElement.prototype.name="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParamElement.prototype.type="";
+/**
+ * Property value
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParamElement.prototype.value="";
+/**
+ * Property valueType
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLParamElement.prototype.valueType="";
+
+/**
+ * Object HTMLAppletElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLAppletElement(){};
+HTMLAppletElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.align="";
+/**
+ * Property alt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.alt="";
+/**
+ * Property archive
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.archive="";
+/**
+ * Property code
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.code="";
+/**
+ * Property codeBase
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.codeBase="";
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.hight="";
+/**
+ * Property hspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.hspace=0;
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.name="";
+/**
+ * Property object
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.object="";
+/**
+ * Property vspace
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.vspace=0;
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAppletElement.prototype.width="";
+
+/**
+ * Object HTMLMapElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLMapElement(){};
+HTMLMapElement.prototype = new HTMLElement();
+/**
+ * Property areas
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMapElement.prototype.areas = new HTMLCollection();
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLMapElement.prototype.name="";
+
+/**
+ * Object HTMLAreaElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLAreaElement(){};
+HTMLAreaElement.prototype = new HTMLElement();
+/**
+ * Property accessKey
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.accessKey="";
+/**
+ * Property alt
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.alt="";
+/**
+ * Property coords
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.coords="";
+/**
+ * Property href
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.href="";
+/**
+ * Property noHref
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.noHref=false;
+/**
+ * Property shape
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.shape="";
+/**
+ * Property tabIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.tabIndex=0;
+/**
+ * Property target
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLAreaElement.prototype.target="";
+
+/**
+ * Object HTMLScriptElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLScriptElement(){};
+HTMLScriptElement.prototype = new HTMLElement();
+/**
+ * Property text
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.text="";
+/**
+ * Property htmlFor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.htmlFor="";
+/**
+ * Property event
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.event="";
+/**
+ * Property charset
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.charset="";
+/**
+ * Property defer
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.defer="";
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.src="";
+/**
+ * Property type
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLScriptElement.prototype.type="";
+
+/**
+ * Object HTMLTableElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableElement(){};
+HTMLTableElement.prototype = new HTMLElement();
+/**
+ * Property caption
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLTableCaptionElement
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.caption = new HTMLTableCaptionElement();
+/**
+ * Property tHead
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLTableSectionElement
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.tHead = new HTMLTableSelectionElement();
+/**
+ * Property tFoot
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLTableSectionElement
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.tFoot = new HTMLTableSelectionElement();
+/**
+ * Property rows
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.rows = new HTMLCollection();
+/**
+ * Property tBodies
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.tBodies = new HTMLCollection();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.align="";
+/**
+ * Property bgColor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.bgColor="";
+/**
+ * Property border
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.border="";
+/**
+ * Property cellPadding
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.cellPadding="";
+/**
+ * Property cellSpacing
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.cellSpacing="";
+/**
+ * Property frame
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.frame="";
+/**
+ * Property rules
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.rules="";
+/**
+ * Property summary
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.summary="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.width="";
+/**
+ * function createTHead();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @returns {HTMLElement}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.createTHead = function(){return new HTMLElement();};
+/**
+ * function deleteTHead();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.deleteTHead = function(){};
+/**
+ * function createTFoot();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @returns {HTMLElement}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.createTFoot = function(){return new HTMLElement();};
+/**
+ * function deleteTFoot();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.deleteTFoot = function(){};
+/**
+ * function createCaption();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @returns {HTMLElement}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.createCaption = function(){return new HTMLElement();};
+/**
+ * function deleteCaption();
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.deleteCaption = function(){};
+/**
+ * function insertRow(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {HTMLElement}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.insertRow = function(index){return new HTMLElement();};
+/**
+ * function deleteRow(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableElement.prototype.deleteRow = function(index){};
+
+/**
+ * Object HTMLTableCaptionElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableCaptionElement(){};
+HTMLTableCaptionElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCaptionElement.prototype.align="";
+
+/**
+ * Object HTMLTableColElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableColElement(){};
+HTMLTableColElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.align="";
+/**
+ * Property ch
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.ch="";
+/**
+ * Property chOff
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.chOff="";
+/**
+ * Property span
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.span=0;
+/**
+ * Property vAlign
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.vAlign="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableColElement.prototype.width="";
+
+/**
+ * Object HTMLTableSelectionElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableSelectionElement(){};
+HTMLTableSelectionElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.align="";
+/**
+ * Property ch
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.ch="";
+/**
+ * Property chOff
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.chOff="";
+/**
+ * Property vAlign
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.vAlign="";
+/**
+ * Property rows
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.rows="";
+/**
+ * function insertRow(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {HTMLElement}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.insertRow = function(index){return new HTMLElement();};
+/**
+ * function deleteRow(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableSelectionElement.prototype.deleteRow = function(index){};
+
+/**
+ * Object HTMLTableRowElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableRowElement(){};
+HTMLTableRowElement.prototype = new HTMLElement();
+/**
+ * Property rowIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.rowIndex=0;
+/**
+ * Property sectionRowIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.sectionRowIndex=0;
+/**
+ * Property cells
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type HTMLCollection
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.cells = new HTMLCollection();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.align="";
+/**
+ * Property bgColor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.bgColor="";
+/**
+ * Property ch
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.ch="";
+/**
+ * Property chOff
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.chOff="";
+/**
+ * Property vAlign
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.vAlign="";
+/**
+ * function insertCell(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @returns {HTMLElement}
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.insertCell = function(index){return new HTMLElement();};
+/**
+ * function insertCell(index)
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @param {Number} index
+ * @throws DOMException
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableRowElement.prototype.deleteCell = function(index){};
+
+/**
+ * Object HTMLTableRowElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLTableCellElement(){};
+HTMLTableCellElement.prototype = new HTMLElement();
+/**
+ * Property cellIndex
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.cellIndex=0;
+/**
+ * Property abbr
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.abbr="";
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.align="";
+/**
+ * Property axis
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.axis="";
+/**
+ * Property bgColor
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.bgColor="";
+/**
+ * Property ch
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.ch="";
+/**
+ * Property chOff
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.chOff="";
+/**
+ * Property colSpan
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.colSpan=0;
+/**
+ * Property headers
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.headers="";
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.height="";
+/**
+ * Property noWrap
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.noWrap=false;
+/**
+ * Property rowSpan
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Number
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.rowSpan=0;
+/**
+ * Property scope
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.scope="";
+/**
+ * Property vAlign
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.vAlign="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLTableCellElement.prototype.width="";
+
+/**
+ * Object HTMLFrameSetElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFrameSetElement(){};
+HTMLFrameSetElement.prototype = new HTMLElement();
+/**
+ * Property cols
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameSetElement.prototype.cols="";
+/**
+ * Property rows
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameSetElement.prototype.rows="";
+
+/**
+ * Object HTMLFrameElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLFrameElement(){};
+HTMLFrameElement.prototype = new HTMLElement();
+/**
+ * Property frameBorder
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.frameBorder="";
+/**
+ * Property longDesc
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.longDesc="";
+/**
+ * Property marginHeight
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.marginHeight="";
+/**
+ * Property marginWidth
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.marginWidth="";
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.name="";
+/**
+ * Property noResize
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Boolean
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.noResize=false;
+/**
+ * Property scrolling
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.scrolling="";
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.src="";
+/**
+ * Property contentDocument
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Document
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLFrameElement.prototype.contentDocument= new HTMLDocument();
+
+/**
+ * Object HTMLIFrameElement()
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @augments HTMLElement
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ * @see HTMLElement
+ */
+function HTMLIFrameElement(){};
+HTMLIFrameElement.prototype = new HTMLElement();
+/**
+ * Property align
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.align="";
+/**
+ * Property frameBorder
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.frameBorder="";
+/**
+ * Property height
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.height="";
+/**
+ * Property longDesc
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.longDesc="";
+/**
+ * Property marginHeight
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.marginHeight="";
+/**
+ * Property marginWidth
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.marginWidth="";
+/**
+ * Property name
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.name="";
+/**
+ * Property scrolling
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.scrolling="";
+/**
+ * Property src
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.src="";
+/**
+ * Property width
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type String
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.width="";
+/**
+ * Property contentDocument
+ * http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html
+ * 
+ * @type Document
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model HTML Specification.
+ */
+HTMLIFrameElement.prototype.contentDocument= new HTMLDocument();
+
+/* Stylesheets */
+/**
+ * Object CSS2Properties()
+ * http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/ecma-script-binding.html
+ * 
+ * @augments Object
+ * @constructor
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Style Specification.
+ */
+function CSS2Properties(){};
+CSS2Properties.prototype = new Object();
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/system.js b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/system.js
new file mode 100644
index 0000000..184cb12
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/system.js
@@ -0,0 +1,1483 @@
+/*******************************************************************************
+ * Copyright (c) 2008, 2010 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ ******************************************************************************
+* Please see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
+*/
+
+/**
+  * Object Object()
+  * @constructor
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function Object(){};
+ /**
+  * function toString() 
+  * @memberOf   Object
+  * @returns {String}
+  * @see     Object
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Object.prototype.toString = function(){return "";};
+ /**
+  * function toLocaleString() 
+  * @memberOf   Object
+  * @returns {String}
+  * @see     Object
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Object.prototype.toLocaleString = function(){return "";};
+ /**
+  * function valueOf() 
+  * @memberOf   Object
+  * @returns {Object}
+  * @see     Object
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Object.prototype.valueOf = function(){return new Object();};
+ /**
+  * function hasOwnProperty(name) 
+  * @memberOf   Object
+  * @param   {String} name
+  * @returns {Boolean}
+  * @see     Object
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Object.prototype.hasOwnProperty = function(name){return true;};
+ /**
+  * function isPrototypeOf(o) 
+  * @memberOf   Object
+  * @param   {Object} o
+  * @returns {Boolean}
+  * @see     Object
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Object.prototype.isPrototypeOf = function(o){return true;};
+ /**
+  * function propertyIsEnumerable(name) 
+  * @memberOf   Object
+  * @param   {Object} name
+  * @returns {Boolean}
+  * @see     Object
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Object.prototype.propertyIsEnumerable = function(name){return true;};
+/**
+  * Property constructor
+  * @type  Function
+  * @memberOf Object
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */ 
+Object.prototype.constructor = new Function();
+
+/**
+  * Object String()
+  * @constructor
+  * @extends Object
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function String(){}
+String.prototype = new Object();
+/**
+  * static function fromCharCode(charCode1, ...)
+  * @memberOf   String
+  * @param {Number} charCode
+  * @returns {String}
+  * @static
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.fromCharCode = function(charCode){return "";};
+/**
+  * Property length
+  * @type    Number
+  * @memberOf   String
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.length = 1;
+ /**
+  * function charAt(position) 
+  * @memberOf   String
+  * @param   {Number} position
+  * @returns {String}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.charAt = function(position){return "";};
+ /**
+  * function charCodeAt(position) 
+  * @memberOf   String
+  * @param   {Number} position
+  * @returns {Number}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.charCodeAt = function(position){return 0;};
+ /**
+  * function concat(value1, ...) 
+  * @memberOf   String
+  * @param {String} value
+  * @returns {String}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.concat = function(value){return "";};
+ /**
+  * function indexOf(searchString, startPosition) 
+  * @memberOf   String
+  * @param   {String} searchString
+  * @param   {Number} startPosition
+  * @returns {Number}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.indexOf = function(searchString, startPosition){return 1;};
+ /**
+  * function lastIndexOf(searchString, startPosition) 
+  * @memberOf   String
+  * @param   {String} searchString
+  * @param   {Number} startPosition
+  * @returns {Number}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.lastIndexOf = function(searchString, startPosition){return 1;};
+ /**
+  * function localeCompare(otherString) 
+  * @memberOf   String
+  * @param   {String} otherString
+  * @returns {Number}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.localeCompare = function(otherString){return 0;};
+ /**
+  * function match(regexp) 
+  * @memberOf   String
+  * @param   {RegExp} regexp
+  * @returns {Array}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.match = function(regexp){return [];};
+ /**
+  * function replace(regexp, replaceValue) 
+  * @memberOf   String
+  * @param   {RegExp} regexp
+  * @param   {String} replaceValue
+  * @returns {String}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.replace = function(regexp, replaceValue){return "";};
+ /**
+  * function search(regexp) 
+  * @memberOf   String
+  * @param   {RegExp} regexp
+  * @returns {Number}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.search = function(regexp){return 1;};
+ /**
+  * function slice(start, end) 
+  * @memberOf   String
+  * @param   {Number} start
+  * @param   {Number} end
+  * @returns {String}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.slice = function(start, end){return "";};
+ /**
+  * function split(separator, limit) 
+  * @memberOf   String
+  * @param   {String} separator
+  * @param   {Number} limit
+  * @returns {Array}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.split = function(separator, limit){return [];};
+ /**
+  * function substring(start, end) 
+  * @memberOf   String
+  * @param   {Number} start
+  * @param   {Number} end
+  * @returns {String}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.substring = function(start, end){return "";};
+ /**
+  * function toLowerCase() 
+  * @memberOf   String
+  * @returns {String}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.toLowerCase = function(){return "";};
+ /**
+  * function toLocaleLowerCase() 
+  * @memberOf   String
+  * @returns {String}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.toLocaleLowerCase = function(){return "";};
+ /**
+  * function toUpperCase() 
+  * @memberOf   String
+  * @returns {String}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.toUpperCase= function (){return "";};
+ /**
+  * function toLocaleUpperCase() 
+  * @memberOf   String
+  * @returns {String}
+  * @see     String
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+String.prototype.toLocaleUpperCase = function(){return "";};
+
+/**
+  * Object Number()
+  * @constructor
+  * @extends Object
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function Number(){}
+Number.prototype = new Object();
+/**
+  * property MIN_VALUE
+  * @type Number
+  * @memberOf Number
+  * @static
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Number.MIN_VALUE = 0;
+/**
+  * property MAX_VALUE
+  * @type Number
+  * @memberOf Number
+  * @static
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Number.MAX_VALUE = 0 ;
+/**
+  * property NaN
+  * @type Number
+  * @memberOf Number
+  * @static
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Number.NaN = 0;
+/**
+  * property NEGATIVE_INFINITY
+  * @type Number
+  * @memberOf Number
+  * @static
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Number.NEGATIVE_INFINITY = 0;
+/**
+  * property POSITIVE_INFINITY
+  * @type Number
+  * @memberOf Number
+  * @static
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Number.POSITIVE_INFINITY = 0;
+/**
+  * function toFixed(fractionDigits)
+  * @memberOf Number
+  * @param {Number} fractionDigits
+  * @returns {String}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Number.prototype.toFixed = function(fractionDigits){return "";};
+/**
+ * function toExponential(fractionDigits)
+ * @memberOf Number
+ * @param {Number} fractionDigits
+ * @returns {String}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+*/
+Number.prototype.toExponential = function(fractionDigits){return "";};
+/**
+ * function toPrecision(precision)
+ * @memberOf Number
+ * @param {Number} fractionDigits
+ * @returns {String}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+*/
+Number.prototype.toPrecision = function(fractionDigits){return "";};
+
+/**
+ * Object Boolean()
+ * @constructor
+ * @extends Object
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition. 
+*/
+function Boolean(){};
+Boolean.prototype = new Object();
+
+/**
+  * Object Array()
+  * @constructor
+  * @extends Object
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function Array(){};
+Array.prototype = new Object();
+/**
+  * Property length
+  * @type    Number
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Array.prototype.length = 1;
+/**
+  * function concat(args)
+  * @param {Array} args
+  * @returns {Array}
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Array.prototype.concat = function(args){return [];};
+/**
+  * function join(seperator)
+  * @param {String} seperator
+  * @returns {Array}
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Array.prototype.join = function(seperator){return [];};
+/**
+  * function pop()
+  * @returns {Object}
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */  
+Array.prototype.pop = function(){return new Object();};
+/**
+  * function push(args)
+  * @param {Array} args
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.   
+ */  
+Array.prototype.push = function(args){};
+/**
+  * function reverse()
+  * @returns {Array}
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Array.prototype.reverse = function(){return [];};
+/**
+  * function shift()
+  * @returns {Object}
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.     
+ */  
+Array.prototype.shift = function(){return new Object();};
+/**
+  * function slice(start, end)
+  * @param {Number} start
+  * @param {Number} end
+  * @returns {Array}
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.   
+ */  
+Array.prototype.slice = function(start, end){return [];};
+/**
+  * function sort(funct)
+  * @param {Function} funct
+  * @returns {Array}
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */  
+Array.prototype.sort = function(funct){return [];};
+/**
+  * function splice(start, deletecount, items)
+  * @param {Number} start
+  * @param {Number} deletecount
+  * @param {Array} items
+  * @returns {Array}
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */  
+Array.prototype.splice = function(start, deletecount, items){return [];};
+/**
+  * function unshift(items)
+  * @param {Array} start
+  * @returns {Array}
+  * @memberOf   Array
+  * @see     Array
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.   
+ */  
+Array.prototype.unshift = function(start){return [];};
+
+/**
+  * Object Function()
+  * @constructor
+  * @extends Object
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function Function(){};
+Function.prototype = new Object();
+/**
+ * function apply (thisObject, argArray)
+ * @param {Object} thisObject
+ * @param {Array} argArray
+ * @returns {Object}
+ * @since   Standard ECMA-262 3rd. Edition 
+ * @since   Level 2 Document Object Model Core Definition.
+ */ 
+Function.prototype.apply = function(thisArg, argArray){return new Object();};
+/**
+  * function call (thisObject, args)
+  * @param {Object} thisObject
+  * @param {Object} args
+  * @returns {Object}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */ 
+Function.prototype.call = function(thisObject, args){return new Object();};
+/**
+  * property length
+  * @type    Number
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */ 
+Function.prototype.length = 0;
+
+/**
+  * Object Date(s)
+  * @constructor
+  * @param {String} s
+  * @extends Object
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+function Date(s){};
+Date.prototype = new Object();
+/**
+ * function UTC(hour, min, sec, ms)
+ * @memberOf Date
+ * @param {Number} hour
+ * @param {Number} min
+ * @param {Number} sec
+ * @param {Number} ms  
+ * @returns {Number}
+ * @static
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+*/
+Date.UTC = function(hour, min, sec, ms){return 0;};
+/**
+  * function parse(string)
+  * @memberOf Date
+  * @param {String} string
+  * @returns {Number}
+  * @static
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.parse = function(string){return 0;};
+/**
+  * function toDateString()
+  * @memberOf Date
+  * @returns {String}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.toDateString = function(){return "";};
+/**
+  * function toTimeString()
+  * @memberOf Date
+  * @returns {String}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.toTimeString = function(){return "";};
+/**
+  * function toLocaleString()
+  * @memberOf Date
+  * @returns {String}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Date.prototype.toLocaleString = function(){return "";};
+/**
+  * function toLocaleDateString()
+  * @memberOf Date
+  * @returns {String}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.toLocaleDateString = function(){return "";};
+/**
+  * function toLocaleTimeString()
+  * @memberOf Date
+  * @returns {String}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.toLocaleTimeString = function(){return "";};
+/**
+  * function valueOf()
+  * @memberOf Date
+  * @returns {Object}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.valueOf = function(){return new Object();};
+/**
+  * function getFullYear()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getFullYear = function(){return 0;};
+/**
+  * function getTime()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.  
+ */
+Date.prototype.getTime = function(){return 0;};
+/**
+  * function getUTCFullYear()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Date.prototype.getUTCFullYear = function(){return 0;};
+/**
+  * function getMonth()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getMonth = function(){return 0;};
+/**
+  * function getUTCMonth()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getUTCMonth = function(){return 0;};
+/**
+  * function getDate()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getDate = function(){return 0;};
+/**
+  * function getUTCDate()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getUTCDate = function(){return 0;};
+/**
+  * function getDay()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Date.prototype.getDay = function(){return 0;};
+/**
+  * function getUTCDay()
+  * @memberOf Date
+  * @type Number
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+     
+ */
+Date.prototype.getUTCDay=function(){return 0;};
+/**
+  * function getHours()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Date.prototype.getHours = function(){return 0;};
+/**
+  * function getUTCHours()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getUTCHours = function(){return 0;};
+/**
+  * function getMinutes()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getMinutes = function(){return 0;};
+/**
+  * function getUTCMinutes()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getUTCMinutes = function(){return 0;};
+/**
+  * function getSeconds()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getSeconds = function(){return 0;};
+/**
+  * function getUTCSeconds()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getUTCSeconds = function(){return 0;};
+/**
+  * function getMilliseconds()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getMilliseconds = function(){return 0;};
+/**
+  * function getUTCMilliseconds()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getUTCMilliseconds = function(){return 0;};
+/**
+  * function getTimezoneOffset()
+  * @memberOf Date
+  * @returns {Number}
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.getTimezoneOffset = function(){return 0;};
+/**
+  * function setTime(value)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} value
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setTime = function(value){return 0;};
+
+/**
+  * function setMilliseconds(value)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} value
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setMilliseconds = function(value){return 0;};
+/**
+  * function setUTCMilliseconds(ms)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} ms
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setUTCMilliseconds = function(ms){return 0;};
+/**
+  * function setSeconds(sec,ms)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} sec
+  * @param {Number} ms
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setSeconds = function(sec,ms){return 0;};
+/**
+  * function setUTCSeconds(sec,ms)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} sec
+  * @param {Number} ms
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setUTCSeconds=function(sec,ms){return 0;};
+/**
+  * function setMinutes(min,sec,ms)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} min
+  * @param {Number} sec
+  * @param {Number} ms
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setMinutes=function(min,sec,ms){return 0;};
+/**
+  * function setUTCMinute(min,sec,ms)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} min
+  * @param {Number} sec
+  * @param {Number} ms
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setUTCMinute = function(min,sec,ms){return 0;};
+/**
+  * function setHours(hour, min,sec,ms)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} hour
+  * @param {Number} min
+  * @param {Number} sec
+  * @param {Number} ms
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setHours = function(hour,min,sec,ms){return 0;};
+/**
+  * function setUTCHours(hour, min,sec,ms)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} hour
+  * @param {Number} min
+  * @param {Number} sec
+  * @param {Number} ms
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setUTCHours = function(hour,min,sec,ms){return 0;};
+
+/**
+  * function setDate(date)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} date
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setDate = function(date){return 0;};
+
+/**
+  * function setUTCDate(date)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} date
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setUTCDate = function(date){return 0;};
+
+/**
+  * function setMonth(month,date)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} date
+  * @param {Number} month
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Date.prototype.setMonth = function(month,date){return 1;};
+/**
+  * function setUTCMonth(month,date)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} date
+  * @param {Number} month
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setUTCMonth = function(month,date){return 1;};
+/**
+  * function setFullYear(month,date)
+  * @memberOf Date
+  * @returns {Number}
+  * @param {Number} date
+  * @param {Number} month
+  * @param {Number} year
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Date.prototype.setFullYear = function(year, month,date){return 0;};
+/**
+  * function setUTCFullYear(month,date)
+  * @memberOf Date
+  * @returns {Date}
+  * @param {Number} date
+  * @param {Number} month
+  * @param {Number} year
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+Date.prototype.setUTCFullYear = function(year, month,date){};
+/**
+ * function toUTCString()
+ * @memberOf Date
+ * @returns {String}
+ * @since Standard ECMA-262 3rd. Edition
+ * @since Level 2 Document Object Model Core Definition.
+*/
+Date.prototype.toUTCString = function(){return "";};
+
+/**
+  * Object Global
+  * @super Object
+  * @constructor
+  * @memberOf Global
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function Global(){};
+Global.prototype=new Object();
+/**
+  * Property NaN
+  * @memberOf Global
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */
+Global.prototype.NaN=0;
+/**
+  * Property Infinity
+  * @memberOf Global
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */
+Global.prototype.Infinity=0;
+/**
+  * function eval(s)
+  * @memberOf Global
+  * @param {String} s
+  * @type Object
+  * @returns {Object}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.     
+ */
+Global.prototype.eval=function(s){return new Object();};
+
+//@GINO: Bug 197987 (Temp Fix)
+/**
+  * Property debugger
+  * @memberOf Global
+  * @description Debugger keyword
+ */
+Global.prototype.debugger=null;
+
+/**
+ * Property undefined
+ * @memberOf Global
+ * @description undefined
+*/
+Global.prototype.undefined=null;
+
+/**
+  * function parseInt(s,radix)
+  * @memberOf Global
+  * @param {String} s
+  * @param {Number} radix
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Global.prototype.parseInt=function(s,radix){return 0;};
+/**
+  * function parseFloat(s)
+  * @memberOf Global
+  * @param {String} s
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.   
+ */
+Global.prototype.parseFloat=function(s){return 0;};
+/**
+ * function escape(s)
+ * @memberOf Global
+ * @param {String} s
+ * @type String
+ * @returns {String}
+ * @since   Standard ECMA-262 3rd. Edition 
+ * @since   Level 2 Document Object Model Core Definition.   
+*/
+Global.prototype.escape=function(s){return "";};
+/**
+ * function unescape(s)
+ * @memberOf Global
+ * @param {String} s
+ * @type String
+ * @returns {String}
+ * @since   Standard ECMA-262 3rd. Edition 
+ * @since   Level 2 Document Object Model Core Definition.   
+*/
+Global.prototype.unescape=function(s){return "";};
+/**
+  * function isNaN(number)
+  * @memberOf Global
+  * @param {String} number
+  * @type Boolean
+  * @returns {Boolean}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */
+Global.prototype.isNaN=function(number){return false;};
+/**
+  * function isFinite(number)
+  * @memberOf Global
+  * @param {String} number
+  * @type Boolean
+  * @returns {Boolean}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Global.prototype.isFinite=function(number){return false;};
+/**
+ * function decodeURI(encodedURI)
+ * @memberOf Global
+ * @param {String} encodedURI
+ * @type String
+ * @returns {String}
+ * @since   Standard ECMA-262 3rd. Edition 
+ * @since   Level 2 Document Object Model Core Definition.  
+*/
+Global.prototype.decodeURI=function(encodedURI){return "";};
+/**
+ * @memberOf Global
+ * @param {String} uriComponent
+ * @type String
+ * @returns {String}
+ * @since   Standard ECMA-262 3rd. Edition 
+ * @since   Level 2 Document Object Model Core Definition.  
+*/
+Global.prototype.decodeURIComponent=function(uriComponent){return "";};
+/**
+ * function encodeURIComponent(uriComponent)
+ * @memberOf Global
+ * @param {String} uriComponent
+ * @type String
+ * @returns {String}
+ * @since   Standard ECMA-262 3rd. Edition 
+ * @since   Level 2 Document Object Model Core Definition.    
+*/
+Global.prototype.encodeURIComponent=function(uriComponent){return "";};
+
+/**
+ * function encodeURIComponent(URI)
+ * @memberOf Global
+ * @param {String} URI
+ * @type String
+ * @returns {String}
+ * @since   Standard ECMA-262 3rd. Edition 
+ * @since   Level 2 Document Object Model Core Definition.    
+*/
+Global.prototype.encodeURI=function(URI){return "";};
+
+/**
+  * Object Math(\s)
+  * @super Object
+  * @constructor
+  * @memberOf Math
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+     
+ */
+function Math(){};
+Math.prototype=new Object();
+/**
+  * Property E
+  * @memberOf Math
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.E=0;
+/**
+  * Property LN10
+  * @memberOf Math
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.LN10=0;
+/**
+  * Property LN2
+  * @memberOf Math
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */
+Math.LN2=0;
+/**
+  * Property LOG2E
+  * @memberOf Math
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.LOG2E=0;
+/**
+  * Property LOG10E
+  * @memberOf Math
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition. 
+ */
+Math.LOG10E=0;
+/**
+  * Property PI
+  * @memberOf Math
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */
+Math.PI=0;
+/**
+  * Property SQRT1_2
+  * @memberOf Math
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.SQRT1_2=0;
+/**
+  * Property SQRT2
+  * @memberOf Math
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition. 
+ */
+Math.SQRT2=0;
+/**
+  * function abs(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.     
+ */
+Math.abs=function(x){return 0;};
+/**
+  * function acos(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */
+Math.acos=function(x){return 0;};
+/**
+  * function asin(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */
+Math.asin=function(x){return 0;};
+/**
+  * function atan(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.
+ */
+Math.atan=function(x){return 0;};
+/**
+  * function atan2(x,y)
+  * @memberOf Math
+  * @param {Number} x
+  * @param {Number} y
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */
+Math.atan2=function(x,y){return 0;};
+/**
+  * function ceil(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.ceil=function(x){return 0;};
+/**
+  * function cos(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */
+Math.cos=function(x){return 0;};
+/**
+  * function exp(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition. 
+ */
+Math.exp=function(x){return 0;};
+/**
+  * function floor(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */
+Math.floor=function(x){return 0;};
+/**
+  * function log(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.log=function(x){return 0;};
+/**
+  * function max(arg)
+  * @memberOf Math
+  * @param {Number} args
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.  
+ */
+Math.max=function(args){return 0;};
+/**
+  * function min(arg)
+  * @memberOf Math
+  * @param {Number} args
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.min=function(args){return 0;};
+/**
+  * function pow(x,y)
+  * @memberOf Math
+  * @param {Number} x
+  * @param {Number} y
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.pow=function(x,y){return 0;};
+/**
+  * function pow()
+  * @memberOf Math
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.     
+ */
+Math.random=function(){return 0;};
+/**
+  * function round(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.   
+ */
+Math.round=function(x){return 0;};
+/**
+  * function sin(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.sin=function(x){return 0;};
+/**
+  * function sqrt(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.     
+ */
+Math.sqrt=function(x){return 0;};
+/**
+  * function tan(x)
+  * @memberOf Math
+  * @param {Number} x
+  * @type Number
+  * @returns {Number}
+  * @since   Standard ECMA-262 3rd. Edition 
+  * @since   Level 2 Document Object Model Core Definition.    
+ */
+Math.tan=function(x){return 0;};
+/**
+  * Object RegExp()
+  * @super Object
+  * @constructor
+  * @memberOf RegExp
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function RegExp(){};
+RegExp.prototype=new Object();
+/**
+  * function exec(string)
+  * @param {String} string
+  * @returns {Array}
+  * @type Array
+  * @memberOf RegExp
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+RegExp.prototype.exec=function(string){return [];};
+/**
+  * function test(string)
+  * @param {String} string
+  * @returns {Boolean}
+  * @type Boolean
+  * @memberOf RegExp
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.  
+ */
+RegExp.prototype.test=function(string){return false;};
+/**
+  * property source
+  * @type String
+  * @memberOf RegExp
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+RegExp.prototype.source="";
+/**
+  * property global
+  * @type Boolean
+  * @memberOf RegExp
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+RegExp.prototype.global=false;
+
+/**
+  * property ignoreCase
+  * @type Boolean
+  * @memberOf RegExp
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+RegExp.prototype.ignoreCase=false;
+/**
+  * property multiline
+  * @type Boolean
+  * @memberOf RegExp
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+RegExp.prototype.multiline=false;
+/**
+  * property lastIndex
+  * @type Number
+  * @memberOf RegExp
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+RegExp.prototype.lastIndex=0;
+/**
+  * Object Error(message)
+  * @super Object
+  * @constructor
+  * @param {String} message
+  * @memberOf Error
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+function Error(message){};
+Error.prototype=new Object();
+/**
+  * property name
+  * @type String
+  * @memberOf Error
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Error.prototype.name="";
+/**
+  * property message
+  * @type String
+  * @memberOf Error
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition. 
+ */
+Error.prototype.message="";
+/**
+  * Object EvalError()
+  * @super Error
+  * @constructor
+  *
+  * @memberOf EvalError
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function EvalError(){};
+EvalError.prototype=new Error("");
+/**
+  * Object RangeError()
+  * @super Error
+  * @constructor
+  *
+  * @memberOf RangeError
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function RangeError(){};
+RangeError.prototype=new Error("");
+/**
+  * Object ReferenceError()
+  * @super Error
+  * @constructor
+  *
+  * @memberOf ReferenceError
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function ReferenceError(){};
+ReferenceError.prototype=new Error("");
+/**
+  * Object SyntaxError()
+  * @super Error
+  * @constructor
+  *
+  * @memberOf SyntaxError
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function SyntaxError(){};
+SyntaxError.prototype=new Error("");
+/**
+  * Object TypeError()
+  * @super Error
+  * @constructor
+  *
+  * @memberOf TypeError
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function TypeError(){};
+TypeError.prototype=new Error("");
+/**
+  * Object URIError()
+  * @super Error
+  * @constructor
+  *
+  * @memberOf URIError
+  * @since Standard ECMA-262 3rd. Edition
+  * @since Level 2 Document Object Model Core Definition.
+ */
+function URIError(){};
+URIError.prototype=new Error("");
+
+//support for debugger keyword
+var debugger = null;
\ No newline at end of file
diff --git a/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/xhr.js b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/xhr.js
new file mode 100644
index 0000000..87c4b3f
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.wst.jsdt.core/libraries/xhr.js
@@ -0,0 +1,106 @@
+/*******************************************************************************
+ * Copyright (c) 2009 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ ******************************************************************************
+ *
+ * Based on information from https://developer.mozilla.org/En/XMLHttpRequest
+ * and http://msdn2.microsoft.com/en-us/library/ms533062.aspx
+ **/
+
+/**
+* function createRequest
+* @type XMLHttpRequest
+* @memberOf Window
+*/
+Window.prototype.createRequest= function(){return new XMLHttpRequest();};
+/**
+* Object XMLHttpRequest
+* @super Global
+* @type constructor
+* @memberOf Global
+*/
+XMLHttpRequest.prototype=new Object();
+function XMLHttpRequest(){};
+
+/**
+ * function onreadystatechange
+ * @memberOf XMLHttpRequest
+ */
+XMLHttpRequest.prototype.onreadystatechange=function(){};
+/**
+ * property readyState
+ * @type Number
+ * @memberOf XMLHttpRequest
+ */
+XMLHttpRequest.prototype.readyState=0;
+/**
+ * property responseText
+ * @type String
+ * @memberOf XMLHttpRequest
+ */
+XMLHttpRequest.prototype.responseText="";
+/**
+ * property responseXML
+ * @type Document
+ * @memberOf XMLHttpRequest
+ */
+XMLHttpRequest.prototype.responseXML=new Document();
+/**
+ * property status
+ * @type Number
+ * @memberOf XMLHttpRequest
+ */
+XMLHttpRequest.prototype.status=0;
+/**
+ * property statusText
+ * @type String
+ * @memberOf XMLHttpRequest
+ */
+XMLHttpRequest.prototype.statusText="";
+/**
+ * function abort()
+ * @memberOf XMLHttpRequest
+ */
+XMLHttpRequest.prototype.abort=function(){};
+/**
+* function getAllResponseHeaders()
+* @type String
+* @memberOf XMLHttpRequest
+*/
+XMLHttpRequest.prototype.getAllResponseHeaders=function(){return "";};
+/**
+* function open(method, url, async, username, password)
+* @param {String} method
+* @param {String} url
+* @param {Boolean} optional async
+* @param {String} optional username
+* @param {String} optional password
+* @memberOf XMLHttpRequest
+*/
+XMLHttpRequest.prototype.open=function(method, url, async, username, password){};
+/**
+* function send(body)
+* @param {Object} body
+* @memberOf XMLHttpRequest
+*/
+XMLHttpRequest.prototype.send=function(body){};
+/**
+* function setRequestHeader(header,value)
+* @param {String} header
+* @param {String} value
+* @memberOf XMLHttpRequest
+*/
+XMLHttpRequest.prototype.setRequestHeader=function(header,value){};
+/**
+* function getAllResponseHeaders()
+* @param {String} header
+* @type String
+* @memberOf XMLHttpRequest
+*/
+XMLHttpRequest.prototype.getResponseHeader=function(header){return "";};
diff --git a/.metadata/.plugins/org.eclipse.wst.jsdt.core/variablesAndContainers.dat b/.metadata/.plugins/org.eclipse.wst.jsdt.core/variablesAndContainers.dat
new file mode 100644
index 0000000..3f8e74c
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.wst.jsdt.core/variablesAndContainers.dat differ
diff --git a/.metadata/.plugins/org.eclipse.wst.jsdt.ui/OpenTypeHistory.xml b/.metadata/.plugins/org.eclipse.wst.jsdt.ui/OpenTypeHistory.xml
new file mode 100644
index 0000000..a4ee3cb
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.wst.jsdt.ui/OpenTypeHistory.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<typeInfoHistroy/>
diff --git a/.metadata/.plugins/org.eclipse.wst.jsdt.ui/QualifiedTypeNameHistory.xml b/.metadata/.plugins/org.eclipse.wst.jsdt.ui/QualifiedTypeNameHistory.xml
new file mode 100644
index 0000000..9e390f5
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.wst.jsdt.ui/QualifiedTypeNameHistory.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<qualifiedTypeNameHistroy/>
diff --git a/Branch/.classpath b/Branch/.classpath
new file mode 100644
index 0000000..fb565a5
--- /dev/null
+++ b/Branch/.classpath
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/Branch/.project b/Branch/.project
new file mode 100644
index 0000000..a1cbcd1
--- /dev/null
+++ b/Branch/.project
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>Branch</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>
diff --git a/Branch/.settings/org.eclipse.jdt.core.prefs b/Branch/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..7341ab1
--- /dev/null
+++ b/Branch/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.7
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.7
diff --git a/Branch/branch.java b/Branch/branch.java
new file mode 100644
index 0000000..3ec4ce0
--- /dev/null
+++ b/Branch/branch.java
@@ -0,0 +1,597 @@
+
+// We need to import the java.sql package to use JDBC
+import gui.Main;
+
+import java.sql.*;
+// for reading from the command line
+import java.io.*;
+
+// for the login window
+import javax.swing.*;
+
+import java.awt.*;
+import java.awt.event.*;
+
+
+/*
+ * This class implements a graphical login window and a simple text
+ * interface for interacting with the branch table 
+ */ 
+public class branch implements ActionListener
+{
+    // command line reader 
+    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+
+    private Connection con;
+
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+    // components of the login window
+    private JTextField usernameField;
+    private JPasswordField passwordField;
+    private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+    public branch()
+    {
+      mainFrame = new JFrame("User Login");
+
+      JLabel usernameLabel = new JLabel("Enter username: ");
+      JLabel passwordLabel = new JLabel("Enter password: ");
+
+      usernameField = new JTextField(10);
+      passwordField = new JPasswordField(10);
+      passwordField.setEchoChar('*');
+
+      JButton loginButton = new JButton("Log In");
+
+      JPanel contentPane = new JPanel();
+      mainFrame.setContentPane(contentPane);
+
+
+      // layout components using the GridBag layout manager
+
+      GridBagLayout gb = new GridBagLayout();
+      GridBagConstraints c = new GridBagConstraints();
+
+      contentPane.setLayout(gb);
+      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+      // place the username label 
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(10, 10, 5, 0);
+      gb.setConstraints(usernameLabel, c);
+      contentPane.add(usernameLabel);
+
+      // place the text field for the username 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(10, 0, 5, 10);
+      gb.setConstraints(usernameField, c);
+      contentPane.add(usernameField);
+
+      // place password label
+      c.gridwidth = GridBagConstraints.RELATIVE;
+      c.insets = new Insets(0, 10, 10, 0);
+      gb.setConstraints(passwordLabel, c);
+      contentPane.add(passwordLabel);
+
+      // place the password field 
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(0, 0, 10, 10);
+      gb.setConstraints(passwordField, c);
+      contentPane.add(passwordField);
+
+      // place the login button
+      c.gridwidth = GridBagConstraints.REMAINDER;
+      c.insets = new Insets(5, 10, 10, 10);
+      c.anchor = GridBagConstraints.CENTER;
+      gb.setConstraints(loginButton, c);
+      contentPane.add(loginButton);
+
+      // register password field and OK button with action event handler
+      passwordField.addActionListener(this);
+      loginButton.addActionListener(this);
+
+      // anonymous inner class for closing the window
+      mainFrame.addWindowListener(new WindowAdapter() 
+      {
+	public void windowClosing(WindowEvent e) 
+	{ 
+	  System.exit(0); 
+	}
+      });
+
+      // size the window to obtain a best fit for the components
+      mainFrame.pack();
+
+      // center the frame
+      Dimension d = mainFrame.getToolkit().getScreenSize();
+      Rectangle r = mainFrame.getBounds();
+      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+      // make the window visible
+      mainFrame.setVisible(true);
+
+      // place the cursor in the text field for the username
+      usernameField.requestFocus();
+
+      try 
+      {
+	// Load the Oracle JDBC driver
+    	  System.out.println(username);
+    	  System.out.println(password);
+
+	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	System.exit(-1);
+      }
+    }
+
+
+    /*
+     * connects to Oracle database named ug using user supplied username and password
+     */ 
+    private boolean connect(String username, String password)
+    {
+      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1522:ug"; 
+
+      try 
+      {
+	con = DriverManager.getConnection(connectURL,username,password);
+
+	System.out.println("\nConnected to Oracle!");
+	return true;
+      }
+      catch (SQLException ex)
+      {
+	System.out.println("Message: " + ex.getMessage());
+	return false;
+      }
+    }
+
+
+    /*
+     * event handler for login window
+     */ 
+    public void actionPerformed(ActionEvent e) 
+    {
+	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+	{
+	  // if the username and password are valid, 
+	  // remove the login window and display a text menu 
+	  mainFrame.dispose();
+          showMenu();     
+	}
+	else
+	{
+	  loginAttempts++;
+	  
+	  if (loginAttempts >= 3)
+	  {
+	      mainFrame.dispose();
+	      System.exit(-1);
+	  }
+	  else
+	  {
+	      // clear the password
+	      passwordField.setText("");
+	  }
+	}             
+                    
+    }
+
+
+    /*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Insert branch\n");
+		System.out.print("2.  Delete branch\n");
+		System.out.print("3.  Update branch\n");
+		System.out.print("4.  Show branch\n");
+		System.out.print("5.  Quit\n>> ");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  insertBranch(); break;
+		   case 2:  deleteBranch(); break;
+		   case 3:  updateBranch(); break;
+		   case 4:  showBranch(); break;
+		   case 5:  quit = true;
+		}
+	    }
+
+	    con.close();
+            in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+
+    /*
+     * inserts a branch
+     */ 
+    private void insertBranch()
+    {
+	int                bid;
+	String             bname;
+	String             baddr;
+	String             bcity;
+	int                bphone;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(2, bname);
+
+	  System.out.print("\nBranch Address: ");
+	  baddr = in.readLine();
+	  
+	  if (baddr.length() == 0)
+          {
+	      ps.setString(3, null);
+	  }
+	  else
+	  {
+	      ps.setString(3, baddr);
+	  }
+	 
+	  System.out.print("\nBranch City: ");
+	  bcity = in.readLine();
+	  ps.setString(4, bcity);
+
+	  System.out.print("\nBranch Phone: ");
+	  String phoneTemp = in.readLine();
+	  if (phoneTemp.length() == 0)
+	  {
+	      ps.setNull(5, java.sql.Types.INTEGER);
+	  }
+	  else
+	  {
+	      bphone = Integer.parseInt(phoneTemp);
+	      ps.setInt(5, bphone);
+	  }
+
+	  ps.executeUpdate();
+
+	  // commit work 
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    try 
+	    {
+		// undo the insert
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+
+
+    /*
+     * deletes a branch
+     */ 
+    private void deleteBranch()
+    {
+	int                bid;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(1, bid);
+
+	  int rowCount = ps.executeUpdate();
+
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+
+            try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}
+    }
+    
+
+    /*
+     * updates the name of a branch
+     */ 
+    private void updateBranch()
+    {
+	int                bid;
+	String             bname;
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
+	
+	  System.out.print("\nBranch ID: ");
+	  bid = Integer.parseInt(in.readLine());
+	  ps.setInt(2, bid);
+
+	  System.out.print("\nBranch Name: ");
+	  bname = in.readLine();
+	  ps.setString(1, bname);
+
+	  int rowCount = ps.executeUpdate();
+	  if (rowCount == 0)
+	  {
+	      System.out.println("\nBranch " + bid + " does not exist!");
+	  }
+
+	  con.commit();
+
+	  ps.close();
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
+    
+    /*
+     * display information about branches
+     */ 
+    private void showBranch()
+    {
+	String     bid;
+	String     bname;
+	String     baddr;
+	String     bcity;
+	String     bphone;
+	Statement  stmt;
+	ResultSet  rs;
+	   
+	try
+	{
+	  stmt = con.createStatement();
+
+	  rs = stmt.executeQuery("SELECT * FROM branch");
+
+	  // get info on ResultSet
+	  ResultSetMetaData rsmd = rs.getMetaData();
+
+	  // get number of columns
+	  int numCols = rsmd.getColumnCount();
+
+	  System.out.println(" ");
+	  
+	  // display column names;
+	  for (int i = 0; i < numCols; i++)
+	  {
+	      // get column name and print it
+
+	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+	  }
+
+	  System.out.println(" ");
+
+	  while(rs.next())
+	  {
+	      // for display purposes get everything from Oracle 
+	      // as a string
+
+	      // simplified output formatting; truncation may occur
+
+	      bid = rs.getString("branch_id");
+	      System.out.printf("%-10.10s", bid);
+
+	      bname = rs.getString("branch_name");
+	      System.out.printf("%-20.20s", bname);
+
+	      baddr = rs.getString("branch_addr");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-20.20s", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-20.20s", baddr);
+	      }
+
+	      bcity = rs.getString("branch_city");
+	      System.out.printf("%-15.15s", bcity);
+
+	      bphone = rs.getString("branch_phone");
+	      if (rs.wasNull())
+	      {
+	    	  System.out.printf("%-15.15s\n", " ");
+              }
+	      else
+	      {
+	    	  System.out.printf("%-15.15s\n", bphone);
+	      }      
+	  }
+ 
+	  // close the statement; 
+	  // the ResultSet will also be closed
+	  stmt.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}	
+    }
+    
+ 
+    public static void main(String args[])
+    {
+      branch b = new branch();
+    }
+}
+
+private static void checkoutBorrower() {
+	int                bid;
+	int 			   borid;
+	int   			   callNumber;
+	int 			   copyNo;
+	int 			   outDate;
+	int 			   inDate;
+
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+		System.out.print("\n Borrower ID: ");
+		bid = Integer.parseInt(Main.in.readLine());
+		ps.setInt(1, bid);
+
+		System.out.print("\n Borrower password: ");
+		password = Main.in.readLine();
+		ps.setString(2, password);
+
+		System.out.print("\n Borrower name: ");
+		name = Main.in.readLine();
+		ps.setString(3, name);
+
+		System.out.print("\n Borrower address: ");
+		address = Main.in.readLine();
+		ps.setString(4, address);
+
+		System.out.print("\n Borrower phone number: ");
+		phone = Main.in.readLine();
+		ps.setString(5,  phone);
+
+		System.out.print("\n Borrower email address: ");
+		emailAddress = Main.in.readLine();
+		ps.setString(6, emailAddress);
+
+		System.out.print("\n Borrower SIN or student number: ");
+		sinOrStNo = Integer.parseInt(Main.in.readLine());
+		ps.setInt(7, sinOrStNo);
+
+		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+		ps.setDate(8, expiryDate);
+
+		System.out.print("\n Borrower type: ");
+		type = Main.in.readLine();
+		ps.setString(9, type);
+
+		ps.executeUpdate();
+		// commit work 
+		Main.con.commit();
+		ps.close();
+	}
+
+	catch (IOException e) {
+		System.out.println("IOException!");
+	}
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
\ No newline at end of file
diff --git a/Branch/classes12.zip b/Branch/classes12.zip
new file mode 100644
index 0000000..860bb5a
Binary files /dev/null and b/Branch/classes12.zip differ
diff --git a/Branch/ojdbc6.jar b/Branch/ojdbc6.jar
new file mode 100644
index 0000000..b663cd2
Binary files /dev/null and b/Branch/ojdbc6.jar differ
diff --git a/Project Part III/.DS_Store b/Project Part III/.DS_Store
new file mode 100644
index 0000000..5008ddf
Binary files /dev/null and b/Project Part III/.DS_Store differ
diff --git a/Project Part III/bin/.gitignore b/Project Part III/bin/.gitignore
new file mode 100644
index 0000000..d271c69
--- /dev/null
+++ b/Project Part III/bin/.gitignore	
@@ -0,0 +1,2 @@
+/gui
+/users
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index ffe54be..d0f8b7b 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -4,6 +4,13 @@ import gui.Main;
 
 import java.io.IOException;
 import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
 
 
 /**
@@ -17,7 +24,6 @@ public class ClerkUser {
 	 * Uses buffer line reader and connection established in Main class.
 	 */
 	public static void main() {
-		
 		int choice;
 		boolean quit;
 
@@ -70,82 +76,208 @@ public class ClerkUser {
 	 * User should provide all required info.
 	 */
 	private static void addBorrower() {
-		
-		// attributes of new borrower
+		int                bid;
 		String             password; 
 		String             name;
 		String             address;
 		String             phone;
 		String             emailAddress;
-		String             sinOrStNo;
+		int                sinOrStNo;
 		Date               expiryDate;
 		String             type;
-		
-		Statement          s;   // to check if borrower already exists in database
 
-		PreparedStatement  ps;  // to add new borrower
+		PreparedStatement  ps;
 
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (bid_c.nextval,?,?,?,?,?,?,{d ?},?)");
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
 
-			System.out.print("Borrower password: ");
+			System.out.print("\n Borrower password: ");
 			password = Main.in.readLine();
 			ps.setString(2, password);
 
-			System.out.print("Borrower name: ");
+			System.out.print("\n Borrower name: ");
 			name = Main.in.readLine();
 			ps.setString(3, name);
 
-			System.out.print("Borrower address: ");
+			System.out.print("\n Borrower address: ");
 			address = Main.in.readLine();
 			ps.setString(4, address);
 
-			System.out.print("Borrower phone number: ");
+			System.out.print("\n Borrower phone number: ");
 			phone = Main.in.readLine();
 			ps.setString(5,  phone);
 
-			System.out.print("Borrower email address: ");
+			System.out.print("\n Borrower email address: ");
 			emailAddress = Main.in.readLine();
 			ps.setString(6, emailAddress);
 
-			System.out.print("Borrower SIN or student number: ");
-			sinOrStNo = Main.in.readLine();
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
 			
-			// check if this borrower already in database
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT bid "
 										+ "FROM Borrower "
-										+ "WHERE sinOrStNo=" + sinOrStNo);
-			if (rs.next()) {
-				System.out.println("An account for this borrower already exists in the library database.");
-				s.close();
-				ps.close();
-				return;
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
 			}
 			
-			ps.setString(7, sinOrStNo);
+		}
 
-			// TODO need to convert between JDBC and Oracle date types, doesn't run as is.
-			System.out.print("Borrower expiry date (yyyy-mm-dd): ");  // Clerk should set to 2 years from today
-			//expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
-			//ps.setDate(8, expiryDate);
-			String date = Main.in.readLine();
-			ps.setString(8, date);
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
 
-			System.out.print("Borrower type: ");
-			type = Main.in.readLine();
-			ps.setString(9, type);
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
 
-			// add borrower
-			ps.executeUpdate();
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
 			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
 			// commit work 
 			Main.con.commit();
-			System.out.println("Borrower has been added successfully.");
-			
 			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
 		}
 
+		
 		catch (IOException e) {
 			System.out.println("IOException!");
 		}
@@ -163,5 +295,59 @@ public class ClerkUser {
 			}
 		}
 	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
 
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
 }
+
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
deleted file mode 100644
index ecf5fe2..0000000
--- a/Project Part III/table.sql	
+++ /dev/null
@@ -1,209 +0,0 @@
-drop table Fine;
-drop table Borrowing;
-drop table HoldRequest;
-drop table HasSubject;
-drop table HasAuthor;
-drop table BookCopy;
-drop table Book;
-drop table Borrower;
-drop table BorrowerType;
-
-
-create sequence bid_c
-	start with 1000 
-	increment by 1;
-	
-create sequence callNumber_c
-	start with 1000
-	increment by 1;
-	
-create sequence hid_c
-	start with 1000
-	increment by 1;
-	
-create sequence borid_c
-	start with 1000
-	increment by 1;
-	
-create sequence fid_c
-	start with 1000
-	increment by 1;
-
-
-create table BorrowerType
-	(type varchar(10) not null PRIMARY KEY,
-	bookTimeLimit integer null);
-
-create table Borrower
-	(bid integer not null PRIMARY KEY,
-	password varchar(20) null,
-	name varchar(20) null,
-	address varchar(50) null,
-	phone char(10) null,
-	emailAddress varchar(50) null,
-	sinOrStNo varchar(10) not null,
-	expiryDate date null,
-	type varchar(10) not null,
-	FOREIGN KEY (type) references BorrowerType);
-
-create table Book
-	(callNumber integer not null PRIMARY KEY,
-	isbn char(9) not null,
-	title varchar(50) null,
-	mainAuthor varchar(20) null,
-	publisher varchar(20) null,
-	year integer null);
-
-create table BookCopy 
-	(callNumber integer not null,
-	copyNo integer not null,
-	status varchar(10) null,
-	PRIMARY KEY (callNumber, copyNo),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HasAuthor
-	(callNumber integer not null,
-	name varchar(20) not null,
-	PRIMARY KEY (callNumber, name),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HasSubject
-	(callNumber integer not null,
-	subject varchar(50) not null,
-	PRIMARY KEY (callNumber, subject),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HoldRequest
-	(hid integer not null PRIMARY KEY,
-	bid integer not null,
-	callNumber integer not null,
-	issuedDate date null,
-	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber) references Book);
-
-create table Borrowing
-	(borid integer not null PRIMARY KEY,
-	bid integer not null,
-	callNumber integer not null,
-	copyNo integer not null,
-	outDate date null,
-	inDate date null,
-	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber, copyNo) references BookCopy);
-
-create table Fine
-	(fid integer not null PRIMARY KEY,
-	amount number null,
-	issuedDate date null,
-	paidDate date null,
-	borid integer not null,
-	FOREIGN KEY (borid) references Borrowing);
-
-
-insert into BorrowerType values
-('student', 2);
-insert into BorrowerType values
-('faculty', 12);
-insert into BorrowerType values
-('staff', 6);
-insert into BorrowerType values
-('general', 2);
-
-
-insert into Borrower values
-(12345678, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '12345678', '2015-09-09', 'faculty');
-insert into Borrower values
-(56781234, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '12345678', '2014-09-09', 'staff');
-insert into Borrower values
-(87654321, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '12345678', '2015-12-12', 'general');
-insert into Borrower values
-(11111111, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '12345678', '2015-09-09', 'staff');
-insert into Borrower values
-(22222222, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
-
-
-insert into Book values
-(100, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
-insert into Book values
-(200, '02000000', 'Hi Database', 'Laks', 'SFU','2000');
-insert into Book values
-(300, '03000000', 'Advanced Data Structures and Algorithms', 'Michelle Ng', 'UBC','2008');
-insert into Book values
-(400, '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
-insert into Book values
-(500, '05000000', 'Hi C++', 'Laks', 'UBC','2014');
-insert into Book values
-(600, '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
-insert into Book values
-(999, '123456789', 'ABCs', 'Sammy', 'Foo Readers', 2000);
-
-
-insert into BookCopy values
-(100, 1, 'out');
-insert into BookCopy values
-(200, 1, 'on hold');
-insert into BookCopy values
-(300, 1, 'out');
-insert into BookCopy values
-(300, 2, 'on hold');
-insert into BookCopy values
-(400, 1, 'in');
-insert into BookCopy values
-(500, 1, 'in');
-insert into BookCopy values
-(500, 1, 'in');
-insert into BookCopy values
-(600, 1, 'out');
-insert into BookCopy values
-(999, 1, 'in');
-insert into BookCopy values
-(999, 2, 'out');
-insert into BookCopy values
-(999, 3, 'on hold');
-
-
-insert into HasAuthor values
-(200, 'Gregor');
-insert into HasAuthor values
-(200, 'Mike');
-insert into HasAuthor values
-(500, 'Patrice');
-insert into HasAuthor values
-(999, 'Bobby');
-
-
-insert into HasSubject values
-(100, 'java');
-insert into HasSubject values
-(100, 'computer');
-insert into HasSubject values
-(200, 'database');
-insert into HasSubject values
-(200, 'computer');
-insert into HasSubject values
-(300, 'computer');
-insert into HasSubject values
-(400, 'computer');
-insert into HasSubject values
-(500, 'c++');
-insert into HasSubject values
-(500, 'computer');
-insert into HasSubject values
-(600, 'computer');
-insert into HasSubject values
-(999, 'kindergarten');
-insert into HasSubject values
-(999, 'letters');
-
-
-insert into Borrowing values
-(11111, 12345678, 1000, 2,'2014-03-29',null);
-insert into Borrowing values
-(22222, 12345678, 1000, 1,'2014-02-22','2014-03-29');
-insert into Borrowing values
-(33333, 12345678, 1000, 1,'2014-01-29','2014-01-31');
-insert into Borrowing values
-(44444, 12345678, 1000, 1,'2013-09-01','2013-10-10');
-
-insert into HoldRequest values
-(1111, 12345678, 1000, '2014-03-30');
diff --git a/Project_Part_III/src/users/BorrowerUser.java b/Project_Part_III/src/users/BorrowerUser.java
deleted file mode 100644
index 2db0b86..0000000
--- a/Project_Part_III/src/users/BorrowerUser.java
+++ /dev/null
@@ -1,181 +0,0 @@
-package users;
-
-import gui.Main;
-
-import java.io.IOException;
-import java.sql.*;
-
-public class BorrowerUser {
-
-	/*
-	 * Loads borrower's side of application.
-	 * Uses buffer line reader and connection established in Main class.
-	 */
-	public static void main() {
-		int choice;
-		boolean quit;
-
-		quit = false;
-		try {
-			while (!quit) {
-				System.out.print("\n\nPlease choose one of the following: \n");
-				System.out.print("1.  Book search\n");
-				//System.out.print("2.  Check account\n");
-				//System.out.print("3.  Place a hold request\n");
-				//System.out.print("4.  Pay fines\n");
-				System.out.print("5.  Quit\n>>");
-
-				choice = Integer.parseInt(Main.in.readLine());
-
-				System.out.println(" ");
-
-				switch(choice) {
-				case 1:  searchBook(); break;
-				case 2:  ; break; // TODO checkAccount()
-				case 3:  ; break; // TODO requestHold()
-				case 4:  ; break; // TODO payFine()
-				case 5:  quit = true; 
-				}
-			}
-			Main.con.close();
-			Main.in.close();
-			System.out.println("\nGood Bye!\n\n");
-			System.exit(0);
-			
-		}
-		catch (IOException e) {
-			System.out.println("IOException!");
-			try {
-				Main.con.close();
-				System.exit(-1);
-			}
-			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
-			}
-		}
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-		}
-	}
-
-
-	/*
-	 * Keyword book search on titles, authors, and/or subjects.
-	 */
-	private static void searchBook() {
-		// TODO Auto-generated method stub
-
-		// Search by title or author or subject
-		int choice;
-
-		try {
-			System.out.print("\n\nPlease choose one of the following to search by: \n");
-			System.out.print("1.  Title\n");
-			System.out.print("2.  Author\n");
-			System.out.print("3.  Subject\n");
-			System.out.print("4.  Back\n>>");
-
-			choice = Integer.parseInt(Main.in.readLine());
-
-			System.out.println(" ");
-
-			switch (choice) {
-			case 1:  searchBookByTitle(); break;
-			case 2:  searchBookByAuthor(); break;
-			case 3:  searchBookBySubject(); break;
-			case 4:  return;
-			}
-		}
-		
-		catch (IOException e) {
-			System.out.println("IOException!");
-			try {
-				Main.con.close();
-				System.exit(-1);
-			}
-			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
-			}
-		}
-	}
-
-	private static void searchBookByTitle() {		
-		String             sTitle;
-		Statement          s;
-
-		try {
-			System.out.print("\n Title keyword: ");
-			sTitle = Main.in.readLine();
-
-			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT B.callNumber, B.isbn, B.title, B.mainAuthor, C.copyNo, c.status"
-										+ "FROM HasAuthor A, Book B, BookCopy C"
-										+ "WHERE B.callNumber = C.callNumber AND B.callNumber = A.callNumber AND B.title LIKE '%" + sTitle + "%'"
-										+ "GROUP BY B.callNumber");
-
-			// TODO How to get # of copies in or out of library?
-			int           callNumber = 0;
-			String        isbn = null;
-			String        title = null;
-			String        mainAuthor = null;
-			int           copyNo = 0;
-			String        status = null;
-			
-			// keep track of book copies
-			int inLib = 0;
-			int outLib = 0;
-
-			while (rs.next()) {
-				// if this callNumber same as previous tuple's, 
-				// only difference in fields are copyNo and status
-				if (rs.getInt(1) == callNumber) {
-					if (rs.getString(5).equalsIgnoreCase("in")) {
-						inLib++;
-					}
-					else {
-						outLib++;
-					}
-				}
-				// if not the same callNumber as previous tuple
-				// must be next book (because of use of GROUP BY in query)
-				else {
-					// first print out previous book
-					System.out.println("Call number: " + callNumber + "\n"
-									+ "ISBN: " + isbn + "\n"
-									+ "Title: " + title + "\n"
-									+ "Main Author: " + mainAuthor + "\n"
-									+ "Copies in library: " + inLib + "\n"
-									+ "Copies out of library or on hold: " + outLib + "\n\n");
-					
-					// then reset copy counters
-					inLib = 0;  outLib = 0;
-					
-					// then parse in the new book
-					callNumber = rs.getInt(1);
-					isbn = rs.getString(2);
-					title = rs.getString(3);
-					mainAuthor = rs.getString(4);
-					copyNo = rs.getInt(5);
-					status = rs.getString(5);
-				}
-			}
-
-		}
-		catch (IOException e) {
-			System.out.println("IOException!");
-		}
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-		}
-	}
-
-	private static void searchBookByAuthor() {
-		// TODO Auto-generated method stub
-
-	}
-
-	private static void searchBookBySubject() {
-		// TODO Auto-generated method stub
-
-	}
-}
diff --git a/Project_Part_III/src/users/ClerkUser.java b/Project_Part_III/src/users/ClerkUser.java
deleted file mode 100644
index 77ee3dd..0000000
--- a/Project_Part_III/src/users/ClerkUser.java
+++ /dev/null
@@ -1,352 +0,0 @@
-package users;
-
-import gui.Main;
-
-import java.io.IOException;
-import java.sql.*;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Calendar;
-import java.util.GregorianCalendar;
-import java.util.List;
-
-
-/**
- * Loads Clerk user interface.
- * Executes Clerk transactions.
- */
-public class ClerkUser {
-
-	/*
-	 * Loads clerk's side of application.
-	 * Uses buffer line reader and connection established in Main class.
-	 */
-	public static void main() {
-		int choice;
-		boolean quit;
-
-		quit = false;
-		try {
-			while (!quit) {
-				System.out.print("\n\nPlease choose one of the following: \n");
-				System.out.print("1.  Add borrower\n");
-				//System.out.print("2.  Check out items\n");
-				//System.out.print("3.  Process a return\n");
-				//System.out.print("4.  Check overdue items\n");
-				System.out.print("5.  Quit\n>>");
-
-				choice = Integer.parseInt(Main.in.readLine());
-
-				System.out.println(" ");
-
-				switch (choice) {
-				case 1:  addBorrower(); break;
-				case 2:  ; break; // TODO checkOutItems()
-				case 3:  ; break; // TODO processReturn()
-				case 4:  ; break; // TODO checkOverdueItems()
-				case 5:  quit = true; 
-				}
-			}
-			Main.con.close();
-			Main.in.close();
-			System.out.println("\nGood Bye!\n\n");
-			System.exit(0);
-		}
-
-		catch (IOException e) {
-			System.out.println("IOException!");
-			try {
-				Main.con.close();
-				System.exit(-1);
-			}
-			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
-			}
-		}
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-		}
-	}
-
-
-	/*
-	 * Add a new borrower to the library.  
-	 * User should provide all required info.
-	 */
-	private static void addBorrower() {
-		int                bid;
-		String             password; 
-		String             name;
-		String             address;
-		String             phone;
-		String             emailAddress;
-		int                sinOrStNo;
-		Date               expiryDate;
-		String             type;
-
-		PreparedStatement  ps;
-
-		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
-
-			System.out.print("\n Borrower ID: ");
-			bid = Integer.parseInt(Main.in.readLine());
-			ps.setInt(1, bid);
-
-			System.out.print("\n Borrower password: ");
-			password = Main.in.readLine();
-			ps.setString(2, password);
-
-			System.out.print("\n Borrower name: ");
-			name = Main.in.readLine();
-			ps.setString(3, name);
-
-			System.out.print("\n Borrower address: ");
-			address = Main.in.readLine();
-			ps.setString(4, address);
-
-			System.out.print("\n Borrower phone number: ");
-			phone = Main.in.readLine();
-			ps.setString(5,  phone);
-
-			System.out.print("\n Borrower email address: ");
-			emailAddress = Main.in.readLine();
-			ps.setString(6, emailAddress);
-
-			System.out.print("\n Borrower SIN or student number: ");
-			sinOrStNo = Integer.parseInt(Main.in.readLine());
-			ps.setInt(7, sinOrStNo);
-
-			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
-			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
-			ps.setDate(8, expiryDate);
-
-			System.out.print("\n Borrower type: ");
-			type = Main.in.readLine();
-			ps.setString(9, type);
-
-			ps.executeUpdate();
-			// commit work 
-			Main.con.commit();
-			ps.close();
-		}
-
-		catch (IOException e) {
-			System.out.println("IOException!");
-		}
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-	}
-
-	
-	private static void checkOutItems() throws ParseException {
-		int 			   bid;
-		List<String>	   callNumbersS;
-		ArrayList<Integer> callNumbers = null;
-		callNumbers = new ArrayList<Integer>();
-		Statement  		   s;
-		
-		try {
-			System.out.println("\n Borrower ID: ");
-			bid = Integer.parseInt(Main.in.readLine());
-			System.out.println("\n List of call numbers: ");
-			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
-			
-			for (String c: callNumbersS){
-				int callNumber;
-				callNumber = Integer.parseInt(c);
-				callNumbers.add(callNumber);
-			}
-			
-			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT bid "
-										+ "FROM Borrower "
-										+ "WHERE bid = " + bid);
-
-			if (rs.next() == false){
-				System.out.println("Invalid ID");
-				
-			}
-			else {
-				for (int j = 0; j < callNumbers.size(); j++) {
-					int i = callNumbers.get(j);
-					checkOutItem(bid, i);
-				}
-				
-			}
-			
-		}
-
-		catch (IOException e) {
-			System.out.println("IOException!");
-		}
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-	}
-
-	private static void checkOutItem(int bid, int callNumber) throws ParseException {
-		
-		Statement			s;
-		
-		try 
-		{
-			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT callNumber "
-										+ "FROM BookCopy  "
-										+ "WHERE status = in");
-
-			if (rs.next() == false){
-				System.out.println("Book not available for borrowing");
-				
-			}
-			else {
-				addBorrowingHelper(bid, callNumber);
-			}
-			
-		}
-		
-
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-	}
-	
-	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
-
-		int						borid;
-		int						copyNo;
-		java.sql.Date 			outDate;
-		PreparedStatement  ps;
-
-		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
-
-			System.out.print("\n Borrowing ID: ");
-			borid = Integer.parseInt(Main.in.readLine());
-			ps.setInt(1, borid);
-
-			System.out.print("\n Copy No: ");
-			copyNo = Integer.parseInt(Main.in.readLine());
-			ps.setInt(4, copyNo);
-
-			System.out.print("\n Out Date: ");
-			outDate = stringToDate(Main.in.readLine());
-			ps.setDate(5, outDate);
-
-			ps.executeUpdate();
-			// commit work 
-			Main.con.commit();
-			ps.close();
-			
-			System.out.println("Call Number: " + callNumber);
-			System.out.println("Copy Number: " + copyNo);
-			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
-		}
-
-		
-		catch (IOException e) {
-			System.out.println("IOException!");
-		}
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-	}
-	
-	static Date stringToDate(String date) throws ParseException{
-		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
-		java.util.Date utilDate = fm.parse(date);
-		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
-		return sqlDate;
-		
-	}
-	
-	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
-		
-		Statement 				s;
-		int 					bookTimeLimit = 0;
-		
-		try 
-		{
-			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
-										+ "FROM Borrower B, BorrowerType C "
-										+ "WHERE B.type = C.type "
-										+ "AND B.bid = " + bid);
-
-			while (rs.next()){
-				bookTimeLimit = rs.getInt(1);
-				
-			}
-
-			
-		}
-		
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-		
-		String outDateS = outDate.toString();
-		System.out.println("This is the outDate in string: " + outDateS);
-		String[] tokens = outDateS.split("/");
-		
-		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
-		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
-		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
-		return sqlDate;
-		
-	}
-}
diff --git a/Project_Part_III/src/users/LibrarianUser.java b/Project_Part_III/src/users/LibrarianUser.java
deleted file mode 100644
index 2c568e5..0000000
--- a/Project_Part_III/src/users/LibrarianUser.java
+++ /dev/null
@@ -1,140 +0,0 @@
-package users;
-
-import gui.Main;
-
-import java.io.IOException;
-import java.sql.*;
-
-public class LibrarianUser {
-
-	/*
-	 * Loads librarian's side of application.
-	 * Uses buffer line reader and connection established in Main class.
-	 */
-	public static void main() {
-		int choice;
-		boolean quit;
-
-		quit = false;
-		try {
-			while (!quit) {
-				System.out.print("\n\nPlease choose one of the following: \n");
-				System.out.print("1.  Add book\n");
-				//System.out.print("2.  Check out items\n");
-				//System.out.print("3.  Process a return\n");
-				//System.out.print("4.  Check overdue items\n");
-				System.out.print("5.  Quit\n>>");
-
-				choice = Integer.parseInt(Main.in.readLine());
-
-				System.out.println(" ");
-
-				switch (choice) {
-				case 1:  addBook(); break;
-				case 2:  ; break; // TODO checkOutItems()
-				case 3:  ; break; // TODO processReturn()
-				case 4:  ; break; // TODO checkOverdueItems()
-				case 5:  quit = true; 
-				}
-			}
-			Main.con.close();
-			Main.in.close();
-			System.out.println("\nGood Bye!\n\n");
-			System.exit(0);
-		}
-		
-		catch (IOException e) {
-			System.out.println("IOException!");
-			try {
-				Main.con.close();
-				System.exit(-1);
-			}
-			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
-			}
-		}
-		catch (SQLException ex)	{
-			System.out.println("Message: " + ex.getMessage());
-		}
-	}
-
-
-	/*
-	 * Add a new book to the library.
-	 * Librarian should provide all info for book.
-	 */
-	private static void addBook() {
-		int                callNumber;
-		String 	           isbn;
-		String             title;
-		String             mainAuthor;
-		String             publisher;
-		int                year;
-		int                copyNo;
-
-		PreparedStatement  ps1;  // for adding Book
-		PreparedStatement  ps2;  // for adding BookCopies
-
-		try {
-			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (?,?,?,?,?,?)");
-			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (?,?,?)");
-
-			System.out.print("\n Book call number: ");
-			callNumber = Integer.parseInt(Main.in.readLine());
-			ps1.setInt(1, callNumber);
-
-			System.out.print("\n Book isbn: ");
-			isbn = Main.in.readLine();
-			ps1.setString(2, isbn);
-
-			System.out.print("\n Book title: ");
-			title = Main.in.readLine();
-			ps1.setString(3, title);
-
-			System.out.print("\n Book main author: ");
-			mainAuthor = Main.in.readLine();
-			ps1.setString(4, mainAuthor);
-
-			System.out.print("\n Book publisher: ");
-			publisher = Main.in.readLine();
-			ps1.setString(5,  publisher);
-
-			System.out.print("\n Book published year: ");
-			year = Integer.parseInt(Main.in.readLine());
-			ps1.setInt(6, year);
-
-			System.out.print("\n Book number of copies: ");
-			copyNo = Integer.parseInt(Main.in.readLine());
-
-			ps1.executeUpdate();
-			for (int i = 1; i <= copyNo; i++) {
-				ps2.setInt(1, callNumber);
-				ps2.setInt(2, i);
-				ps2.setString(3, "in");
-
-				ps2.executeUpdate();
-			}
-			// commit work 
-			Main.con.commit();
-			ps1.close();
-			ps2.close();
-		}
-
-		catch (IOException e) {
-			System.out.println("IOException!");
-		}
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-	}
-}
diff --git a/table.sql b/table.sql
new file mode 100644
index 0000000..ecf5fe2
--- /dev/null
+++ b/table.sql
@@ -0,0 +1,209 @@
+drop table Fine;
+drop table Borrowing;
+drop table HoldRequest;
+drop table HasSubject;
+drop table HasAuthor;
+drop table BookCopy;
+drop table Book;
+drop table Borrower;
+drop table BorrowerType;
+
+
+create sequence bid_c
+	start with 1000 
+	increment by 1;
+	
+create sequence callNumber_c
+	start with 1000
+	increment by 1;
+	
+create sequence hid_c
+	start with 1000
+	increment by 1;
+	
+create sequence borid_c
+	start with 1000
+	increment by 1;
+	
+create sequence fid_c
+	start with 1000
+	increment by 1;
+
+
+create table BorrowerType
+	(type varchar(10) not null PRIMARY KEY,
+	bookTimeLimit integer null);
+
+create table Borrower
+	(bid integer not null PRIMARY KEY,
+	password varchar(20) null,
+	name varchar(20) null,
+	address varchar(50) null,
+	phone char(10) null,
+	emailAddress varchar(50) null,
+	sinOrStNo varchar(10) not null,
+	expiryDate date null,
+	type varchar(10) not null,
+	FOREIGN KEY (type) references BorrowerType);
+
+create table Book
+	(callNumber integer not null PRIMARY KEY,
+	isbn char(9) not null,
+	title varchar(50) null,
+	mainAuthor varchar(20) null,
+	publisher varchar(20) null,
+	year integer null);
+
+create table BookCopy 
+	(callNumber integer not null,
+	copyNo integer not null,
+	status varchar(10) null,
+	PRIMARY KEY (callNumber, copyNo),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HasAuthor
+	(callNumber integer not null,
+	name varchar(20) not null,
+	PRIMARY KEY (callNumber, name),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HasSubject
+	(callNumber integer not null,
+	subject varchar(50) not null,
+	PRIMARY KEY (callNumber, subject),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HoldRequest
+	(hid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber integer not null,
+	issuedDate date null,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber) references Book);
+
+create table Borrowing
+	(borid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber integer not null,
+	copyNo integer not null,
+	outDate date null,
+	inDate date null,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber, copyNo) references BookCopy);
+
+create table Fine
+	(fid integer not null PRIMARY KEY,
+	amount number null,
+	issuedDate date null,
+	paidDate date null,
+	borid integer not null,
+	FOREIGN KEY (borid) references Borrowing);
+
+
+insert into BorrowerType values
+('student', 2);
+insert into BorrowerType values
+('faculty', 12);
+insert into BorrowerType values
+('staff', 6);
+insert into BorrowerType values
+('general', 2);
+
+
+insert into Borrower values
+(12345678, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '12345678', '2015-09-09', 'faculty');
+insert into Borrower values
+(56781234, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '12345678', '2014-09-09', 'staff');
+insert into Borrower values
+(87654321, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '12345678', '2015-12-12', 'general');
+insert into Borrower values
+(11111111, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '12345678', '2015-09-09', 'staff');
+insert into Borrower values
+(22222222, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
+
+
+insert into Book values
+(100, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
+insert into Book values
+(200, '02000000', 'Hi Database', 'Laks', 'SFU','2000');
+insert into Book values
+(300, '03000000', 'Advanced Data Structures and Algorithms', 'Michelle Ng', 'UBC','2008');
+insert into Book values
+(400, '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
+insert into Book values
+(500, '05000000', 'Hi C++', 'Laks', 'UBC','2014');
+insert into Book values
+(600, '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
+insert into Book values
+(999, '123456789', 'ABCs', 'Sammy', 'Foo Readers', 2000);
+
+
+insert into BookCopy values
+(100, 1, 'out');
+insert into BookCopy values
+(200, 1, 'on hold');
+insert into BookCopy values
+(300, 1, 'out');
+insert into BookCopy values
+(300, 2, 'on hold');
+insert into BookCopy values
+(400, 1, 'in');
+insert into BookCopy values
+(500, 1, 'in');
+insert into BookCopy values
+(500, 1, 'in');
+insert into BookCopy values
+(600, 1, 'out');
+insert into BookCopy values
+(999, 1, 'in');
+insert into BookCopy values
+(999, 2, 'out');
+insert into BookCopy values
+(999, 3, 'on hold');
+
+
+insert into HasAuthor values
+(200, 'Gregor');
+insert into HasAuthor values
+(200, 'Mike');
+insert into HasAuthor values
+(500, 'Patrice');
+insert into HasAuthor values
+(999, 'Bobby');
+
+
+insert into HasSubject values
+(100, 'java');
+insert into HasSubject values
+(100, 'computer');
+insert into HasSubject values
+(200, 'database');
+insert into HasSubject values
+(200, 'computer');
+insert into HasSubject values
+(300, 'computer');
+insert into HasSubject values
+(400, 'computer');
+insert into HasSubject values
+(500, 'c++');
+insert into HasSubject values
+(500, 'computer');
+insert into HasSubject values
+(600, 'computer');
+insert into HasSubject values
+(999, 'kindergarten');
+insert into HasSubject values
+(999, 'letters');
+
+
+insert into Borrowing values
+(11111, 12345678, 1000, 2,'2014-03-29',null);
+insert into Borrowing values
+(22222, 12345678, 1000, 1,'2014-02-22','2014-03-29');
+insert into Borrowing values
+(33333, 12345678, 1000, 1,'2014-01-29','2014-01-31');
+insert into Borrowing values
+(44444, 12345678, 1000, 1,'2013-09-01','2013-10-10');
+
+insert into HoldRequest values
+(1111, 12345678, 1000, '2014-03-30');

commit e498e028f45101672d4cd8fde463cc04a2d3cbf1
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 20:41:12 2014 -0700

    In BorrowerUser searchBook() and helpers all work now!

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index b35cc94..d223ac8 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -162,25 +162,13 @@ public class BorrowerUser {
 				System.out.printf("%-15.15s", title);
 
 				mainAuthor = rs.getString(4);
-				System.out.printf("%-15.15s", mainAuthor);    
-
-				// # in library
-				ResultSet rsi = s.executeQuery("SELECT COUNT(*) "
-						+ "FROM BookCopy "
-						+ "WHERE callNumber=" + callNumber + " AND status='in'");
-				while (rsi.next()) {
-					inLib = rsi.getInt(1);
-				}
-				System.out.printf("%-15.15s", inLib);
+				System.out.printf("%-15.15s", mainAuthor);
 
-				// # out of library or on hold
-				ResultSet rso = s.executeQuery("SELECT COUNT(*) "
-						+ "FROM BookCopy "
-						+ "WHERE callNumber=" + callNumber + " AND (status='out' OR status='on hold')");
-				while (rso.next()) {
-					outLib = rso.getInt(1);
-				}
-				System.out.printf("%-15.15s", outLib);
+				int[] statusCounts = statusCounts(callNumber);
+				inLib = statusCounts[0];
+				outLib = statusCounts[1] + statusCounts[2];
+				System.out.printf("%-15.15s", inLib);
+				System.out.printf("%-15.15s\n", outLib);
 			}
 
 			System.out.println("\n No more search results");
@@ -222,7 +210,7 @@ public class BorrowerUser {
 
 			ResultSet rs = s.executeQuery("SELECT DISTINCT B.callNumber, B.isbn, B.title, B.mainAuthor "
 					+ "FROM HasAuthor A, Book B "
-					+ "WHERE (A.callNumber=B.callNumber AND A.name LIKE '%" + sAuthor + "%') "
+					+ "WHERE (A.callNumber=B.callNumber AND A.name LIKE '%" + sAuthor + "%' ) "
 					+ "OR B.mainAuthor LIKE '%" + sAuthor + "%'");
 
 			// get info on ResultSet
@@ -260,29 +248,16 @@ public class BorrowerUser {
 				System.out.printf("%-15.15s", title);
 
 				mainAuthor = rs.getString(4);
-				System.out.printf("%-15.15s", mainAuthor);    
-
-				// # in library
-				ResultSet rsi = s.executeQuery("SELECT COUNT(*) "
-						+ "FROM Book B, BookCopy C "
-						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
-				while (rsi.next()) {
-					inLib = rsi.getInt(1);
-				}
-				System.out.printf("%-15.15s", inLib);
+				System.out.printf("%-15.15s", mainAuthor);
 
-				// # out of library or on hold
-				ResultSet rso = s.executeQuery("SELECT COUNT(*) "
-						+ "FROM BookB, BookCopy C "
-						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
-						+ "AND (C.status='out' OR C.status='on hold'");
-				while (rso.next()) {
-					outLib = rso.getInt(1);
-				}
-				System.out.printf("%-15.15s", outLib);
+				int[] statusCounts = statusCounts(callNumber);
+				inLib = statusCounts[0];
+				outLib = statusCounts[1] + statusCounts[2];
+				System.out.printf("%-15.15s", inLib);
+				System.out.printf("%-15.15s\n", outLib);
 			}
-
-			System.out.println("No more search results");
+			
+			System.out.println("\n No more search results");
 			s.close();
 		}
 
@@ -307,57 +282,68 @@ public class BorrowerUser {
 		String             mainAuthor;
 
 		// book copies in/out
-		int inLib=0;
-		int outLib=0;
+		int inLib;
+		int outLib;
 
 		// to execute queries
 		Statement          s;
 
 		try {
-			// first search Book table based on author name
+			// first search Book table based on subject name
 			System.out.print("\n Subject: ");
 			sSubject = Main.in.readLine();
 
 			s = Main.con.createStatement();
 
-			ResultSet rs = s.executeQuery("SELECT DISTINCT B.callNumber, B.isbn, B.title, B.mainAuthor "
+			ResultSet rs = s.executeQuery("SELECT B.callNumber, B.isbn, B.title, B.mainAuthor "
 					+ "FROM HasSubject S, Book B "
-					+ "WHERE S.callNumber=B.callNumber AND S.subject='" + sSubject + "'");
+					+ "WHERE S.callNumber=B.callNumber AND S.subject LIKE '%" + sSubject + "%'");
+
+			// get info on ResultSet
+			ResultSetMetaData rsmd = rs.getMetaData();
+
+			// get number of columns
+			int numCols = rsmd.getColumnCount();
+
+			System.out.println(" ");
+
+			// display column names;
+			for (int i = 0; i < numCols; i++)
+			{
+				// get column name and print it
+
+				System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+			}
+			// add columns for in/out count
+			System.out.printf("%-15s", "in library");
+			System.out.printf("%-15s", "out/on hold");
+
+			System.out.println(" ");
+
+			while(rs.next())
+			{
+				// simplified output formatting; truncation may occur
 
-			// for each of the results
-			while (rs.next()) {
-				// parse the book
 				callNumber = rs.getInt(1);
+				System.out.printf("%-15.15s", callNumber);
+
 				isbn = rs.getString(2);
-				title = rs.getString(3);
-				mainAuthor = rs.getString(4);
+				System.out.printf("%-15.15s", isbn);
 
-				// # in library
-				s.executeQuery("SELECT COUNT(*) "
-						+ "FROM Book B, BookCopy C "
-						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber AND C.status='in'");
-				while (rs.next()) {
-					inLib = rs.getInt(1);
-				}
+				title = rs.getString(3);
+				System.out.printf("%-15.15s", title);
 
-				// # out of library or on hold
-				s.executeQuery("SELECT COUNT(*) "
-						+ "FROM BookB, BookCopy C "
-						+ "WHERE B.callNumber=" + callNumber + "B.callNumber=C.callNumber "
-						+ "AND (C.status='out' OR C.status='on hold')");
-				while (rs.next()) {
-					outLib = rs.getInt(1);
-				}
+				mainAuthor = rs.getString(4);
+				System.out.printf("%-15.15s", mainAuthor);
 
-				// print out search results
-				System.out.println("\n Call number: " + callNumber 
-						+ "\n ISBN: " + isbn
-						+ "\n Title: " + title + "\n"
-						+ "\n Main Author: " + mainAuthor 
-						+ "\n Copies in library: " + inLib 
-						+ "\n Copies out of library or on hold: " + outLib + "\n");
+				int[] statusCounts = statusCounts(callNumber);
+				inLib = statusCounts[0];
+				outLib = statusCounts[1] + statusCounts[2];
+				System.out.printf("%-15.15s", inLib);
+				System.out.printf("%-15.15s\n", outLib);
 			}
-			System.out.println("No more search results");
+
+			System.out.println("\n No more search results");
 			s.close();
 		}
 
@@ -369,7 +355,7 @@ public class BorrowerUser {
 		}
 	}
 
-	
+
 	/*
 	 * Displays the items the borrower has currently borrowed and
 	 * not yet returned, any outstanding fines and 
@@ -384,20 +370,20 @@ public class BorrowerUser {
 		int amount;
 		int totalAmount = 0;
 		Date issuedDate;
-		
+
 		Statement s;
-		
+
 
 		try {
 			s = Main.con.createStatement();
-			
+
 			System.out.printf("Please enter your Borrower ID: ");
 			userBid = Integer.parseInt(Main.in.readLine());
-			
+
 			// check that this is a valid Borrower account
 			ResultSet rs = s.executeQuery("SELECT * "
-										 + "FROM Borrower "
-										 + "WHERE bid=" + userBid);
+					+ "FROM Borrower "
+					+ "WHERE bid=" + userBid);
 			if (rs.next() == false) {
 				System.out.println("This is not a valid borrower ID.");
 				s.close();
@@ -560,4 +546,50 @@ public class BorrowerUser {
 			System.out.println("Message: " + e.getMessage());
 		}
 	}
+
+
+	/*
+	 * Helper method to get # book copies in/out/on hold.
+	 */
+	private static int[] statusCounts (int callNumber) {
+
+		// result array
+		int[] statusCounts = new int[3];
+
+		try {
+			Statement s = Main.con.createStatement();
+
+			// # in library
+			ResultSet rsi = s.executeQuery("SELECT COUNT(*) "
+					+ "FROM BookCopy "
+					+ "WHERE callNumber=" + callNumber + " AND status='in'");
+			if (rsi.next()) {
+				statusCounts[0] = rsi.getInt(1);
+			}
+
+			// # out of library 
+			ResultSet rso = s.executeQuery("SELECT COUNT(*) "
+					+ "FROM BookCopy "
+					+ "WHERE callNumber=" + callNumber + " AND status='out'");
+			if (rso.next()) {
+				statusCounts[1] = rso.getInt(1);
+			}
+			
+			// # on hold
+			ResultSet rsh = s.executeQuery("SELECT COUNT(*) "
+					+ "FROM BookCopy "
+					+ "WHERE callNumber=" + callNumber + "AND status='on hold'");
+			if (rsh.next()) {
+				statusCounts[2] = rsh.getInt(1);
+			}
+			
+			return statusCounts;
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			return null;
+		}
+	}
 }
+

commit e50e4a84ac43ed451f562207dfae8ca923efb4e0
Merge: e498e02 cc65c6a
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 20:46:41 2014 -0700

    Merge branch 'fromRemote'

commit ab95cdef7fe46e1dff5e659200787fb16289df55
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 20:55:28 2014 -0700

    working on checkoverdue() and reportcheckedout()

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index fd35dd1..e7d68d6 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -4,6 +4,7 @@ import gui.Main;
 
 import java.io.IOException;
 import java.sql.*;
+import java.util.GregorianCalendar;
 
 
 /**
@@ -28,7 +29,7 @@ public class ClerkUser {
 				System.out.print("1.  Add borrower\n");
 				//System.out.print("2.  Check out items\n");
 				//System.out.print("3.  Process a return\n");
-				//System.out.print("4.  Check overdue items\n");
+				System.out.print("4.  Check overdue items\n");
 				System.out.print("5.  Quit\n>>");
 
 				choice = Integer.parseInt(Main.in.readLine());
@@ -39,7 +40,7 @@ public class ClerkUser {
 				case 1:  addBorrower(); break;
 				case 2:  ; break; // TODO checkOutItems()
 				case 3:  ; break; // TODO processReturn()
-				case 4:  ; break; // TODO checkOverdueItems()
+				case 4:  checkOverdueItems(); break; // TODO checkOverdueItems()
 				case 5:  quit = true; 
 				}
 			}
@@ -168,4 +169,97 @@ public class ClerkUser {
 		}
 	}
 
+	
+
+
+	/*
+	 * Displays a list of the items that are overdue and the borrowers who have checked them out. 
+	 * The clerk may decide to send an email messages to any of them (or to all of them).
+	 */
+	private static void checkOverdueItems() {
+		Statement statement;
+		ResultSet rs;
+		try {
+			statement = Main.con.createStatement();
+
+			System.out.println("List of items overdue and the borrowers who have checked them out:");
+			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate, D.bookTimeLimit"
+							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
+							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
+							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
+							+ "ORDER BY E.bid, E.name ASC");
+			// get info on ResultSet
+			ResultSetMetaData rsmd = rs.getMetaData();
+
+			// get number of columns
+			int numCols = rsmd.getColumnCount();
+
+			System.out.println(" ");
+
+			// display column names;
+			for (int i = 0; i < numCols-2; i++) {
+				// get column name and print it
+				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
+			}
+			System.out.printf("%-25s", "DUEDATE");
+			
+			System.out.println(" ");
+
+			while (rs.next()) {
+				Integer bid = rs.getInt("bid");
+				Date outDate = rs.getDate("outDate");
+				Integer bookTimeLimit = rs.getInt("bookTimeLimit");
+				// pseudo code: Date dueDate = outDate + bookTimeLimit;
+				// System.out.printf("%-20.20s\n", dueDate);
+				if (overDue(getDueDate(bid, outDate))) {
+					System.out.printf("%-9.9s", bid);
+					String name = rs.getString("name");
+					if(rs.wasNull())
+						System.out.printf("%-20.20s", " ");
+					else
+						System.out.printf("%-20.20s", name);
+					String email = rs.getString("emailAddress");
+					if(rs.wasNull())
+						System.out.printf("%-30.30s", " ");
+					else
+						System.out.printf("%-30.30s", email);
+					
+					Integer callNumber = rs.getInt("callNumber");
+					if (rs.wasNull()) {
+						System.out.printf("%-9.9s", " ");
+					} else {
+						System.out.printf("%-9.9s", callNumber);
+					}
+
+					Integer copyNo = rs.getInt("copyNo");
+					if (rs.wasNull()) {
+						System.out.printf("%-20.20s", " ");
+					} else {
+						System.out.printf("%-20.20s", copyNo);
+					}
+
+					String title = rs.getString("title");
+					if (rs.wasNull()) {
+						System.out.printf("%-30.30s", " ");
+					} else {
+						System.out.printf("%-30.30s", title);
+					}
+				}
+			}
+
+			// close the statement;
+			// the ResultSet will also be closed
+			statement.close();
+		} catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+	
+	private static boolean overdue(Date dueDate){
+		GregorianCalendar gregCalendar = new GregorianCalendar();
+		if(gregCalendar.after(dueDate))
+			return true;
+		else
+			return false;
+	}
 }
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index b22012e..6c6e8aa 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -4,6 +4,7 @@ import gui.Main;
 
 import java.io.IOException;
 import java.sql.*;
+import java.sql.Date;
 import java.util.*;
 
 public class LibrarianUser {
@@ -22,10 +23,9 @@ public class LibrarianUser {
 			while (!quit) {
 				System.out.print("\n\nPlease choose one of the following: \n");
 				System.out.print("1.  Add book\n");
-				//System.out.print("2.  Check out items\n");
-				//System.out.print("3.  Process a return\n");
-				//System.out.print("4.  Check overdue items\n");
-				System.out.print("5.  Quit\n>>");
+				//System.out.println("2. Generate a report of all checked out books\n");
+//				System.out.println("3. Generate a report of the most popular items for a given year\n");
+				System.out.print("4.  Quit\n>>");
 
 				choice = Integer.parseInt(Main.in.readLine());
 
@@ -33,10 +33,9 @@ public class LibrarianUser {
 
 				switch (choice) {
 				case 1:  addBook(); break;
-				case 2:  ; break; // TODO checkOutItems()
-				case 3:  ; break; // TODO processReturn()
-				case 4:  ; break; // TODO checkOverdueItems()
-				case 5:  quit = true; 
+				case 2:  reportCheckedOutBooks(); break; // TODO reportCheckedOutBooks()
+				case 3:  ; break; // TODO mostPopular()
+				case 4:  quit = true; 
 				}
 			}
 			Main.con.close();
@@ -328,4 +327,92 @@ public class LibrarianUser {
 
 
 	}
+	
+
+	/*
+	 * Generate a report with all the books that have been checked out. For each
+	 * book the report shows the date it was checked out and the due date. The
+	 * system flags the items that are overdue. The items are ordered by the
+	 * book call number. If a subject is provided the report lists only books
+	 * related to that subject, otherwise all the books that are out are listed
+	 * by the report.
+	 */
+	private static void reportCheckedOutBooks() {
+		Statement statement;
+		ResultSet rs;
+		try {
+			statement = Main.con.createStatement();
+
+			// query of callNumber, copyNo, title, outDate and bookTimeLimit
+			// when borrowing's inDate is
+			// null.
+			System.out.println("List of items you currently borrowed:");
+			rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, D.bookTimeLimit"
+							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
+							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
+							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "
+							+ "ORDER BY A.callNumber, C.copyNo, A.title ASC");
+			// get info on ResultSet
+			ResultSetMetaData rsmd = rs.getMetaData();
+
+			// get number of columns
+			int numCols = rsmd.getColumnCount();
+
+			System.out.println(" ");
+
+			// display column names;
+			for (int i = 0; i < numCols-1; i++) {
+				// get column name and print it
+				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
+			}
+			System.out.printf("%-25s", "DUEDATE");
+			
+			System.out.println(" ");
+
+			while (rs.next()) {
+				Integer callNumber = rs.getInt("callNumber");
+				if (rs.wasNull()) {
+					System.out.printf("%-9.9s", " ");
+				} else {
+					System.out.printf("%-9.9s", callNumber);
+				}
+
+				Integer copyNo = rs.getInt("copyNo");
+				if (rs.wasNull()) {
+					System.out.printf("%-20.20s", " ");
+				} else {
+					System.out.printf("%-20.20s", copyNo);
+				}
+				
+				String title = rs.getString("title");
+				if (rs.wasNull()) {
+					System.out.printf("%-30.30s", " ");
+				} else {
+					System.out.printf("%-30.30s", title);
+				}
+				
+				Date outDate = rs.getDate("outDate");
+				if(rs.wasNull()){
+					System.out.printf("%-20.20s", " ");
+				} else {
+					System.out.printf("%-20.20s", outDate);
+				}
+				
+				Integer bookTimeLimit = rs.getInt("bookTimeLimit");
+				//pseudo code: Date dueDate = outDate + bookTimeLimit;
+				//System.out.printf("%-20.20s\n", dueDate);		
+				
+				//TODO: check if the item is overdue using gregorianCalendar(), and let it flags.
+
+				//TODO: If a subject is provided the report lists only books related to that subject, otherwise all the books that are out are listed by the report.
+				
+			}
+
+			// close the statement;
+			// the ResultSet will also be closed
+			statement.close();
+		} catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
 }

commit 79107ff40174dfadfda625fae0439ba16c92cca8
Merge: ab95cde e50e4a8
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 21:02:18 2014 -0700

    merge conflicts

commit ae1a1ffd81a15cd916750e4c58430dfca1b72426
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 21:06:43 2014 -0700

    Added back table.sql and deleted "Branch" folder in master project
    folder.

diff --git a/.DS_Store b/.DS_Store
deleted file mode 100644
index 5008ddf..0000000
Binary files a/.DS_Store and /dev/null differ
diff --git a/Branch/.classpath b/Branch/.classpath
deleted file mode 100644
index fb565a5..0000000
--- a/Branch/.classpath
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
diff --git a/Branch/.project b/Branch/.project
deleted file mode 100644
index a1cbcd1..0000000
--- a/Branch/.project
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>Branch</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/Branch/.settings/org.eclipse.jdt.core.prefs b/Branch/.settings/org.eclipse.jdt.core.prefs
deleted file mode 100644
index 7341ab1..0000000
--- a/Branch/.settings/org.eclipse.jdt.core.prefs
+++ /dev/null
@@ -1,11 +0,0 @@
-eclipse.preferences.version=1
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.7
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.source=1.7
diff --git a/Branch/branch.java b/Branch/branch.java
deleted file mode 100644
index 3ec4ce0..0000000
--- a/Branch/branch.java
+++ /dev/null
@@ -1,597 +0,0 @@
-
-// We need to import the java.sql package to use JDBC
-import gui.Main;
-
-import java.sql.*;
-// for reading from the command line
-import java.io.*;
-
-// for the login window
-import javax.swing.*;
-
-import java.awt.*;
-import java.awt.event.*;
-
-
-/*
- * This class implements a graphical login window and a simple text
- * interface for interacting with the branch table 
- */ 
-public class branch implements ActionListener
-{
-    // command line reader 
-    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
-
-    private Connection con;
-
-    // user is allowed 3 login attempts
-    private int loginAttempts = 0;
-
-    // components of the login window
-    private JTextField usernameField;
-    private JPasswordField passwordField;
-    private JFrame mainFrame;
-
-
-    /*
-     * constructs login window and loads JDBC driver
-     */ 
-    public branch()
-    {
-      mainFrame = new JFrame("User Login");
-
-      JLabel usernameLabel = new JLabel("Enter username: ");
-      JLabel passwordLabel = new JLabel("Enter password: ");
-
-      usernameField = new JTextField(10);
-      passwordField = new JPasswordField(10);
-      passwordField.setEchoChar('*');
-
-      JButton loginButton = new JButton("Log In");
-
-      JPanel contentPane = new JPanel();
-      mainFrame.setContentPane(contentPane);
-
-
-      // layout components using the GridBag layout manager
-
-      GridBagLayout gb = new GridBagLayout();
-      GridBagConstraints c = new GridBagConstraints();
-
-      contentPane.setLayout(gb);
-      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
-
-      // place the username label 
-      c.gridwidth = GridBagConstraints.RELATIVE;
-      c.insets = new Insets(10, 10, 5, 0);
-      gb.setConstraints(usernameLabel, c);
-      contentPane.add(usernameLabel);
-
-      // place the text field for the username 
-      c.gridwidth = GridBagConstraints.REMAINDER;
-      c.insets = new Insets(10, 0, 5, 10);
-      gb.setConstraints(usernameField, c);
-      contentPane.add(usernameField);
-
-      // place password label
-      c.gridwidth = GridBagConstraints.RELATIVE;
-      c.insets = new Insets(0, 10, 10, 0);
-      gb.setConstraints(passwordLabel, c);
-      contentPane.add(passwordLabel);
-
-      // place the password field 
-      c.gridwidth = GridBagConstraints.REMAINDER;
-      c.insets = new Insets(0, 0, 10, 10);
-      gb.setConstraints(passwordField, c);
-      contentPane.add(passwordField);
-
-      // place the login button
-      c.gridwidth = GridBagConstraints.REMAINDER;
-      c.insets = new Insets(5, 10, 10, 10);
-      c.anchor = GridBagConstraints.CENTER;
-      gb.setConstraints(loginButton, c);
-      contentPane.add(loginButton);
-
-      // register password field and OK button with action event handler
-      passwordField.addActionListener(this);
-      loginButton.addActionListener(this);
-
-      // anonymous inner class for closing the window
-      mainFrame.addWindowListener(new WindowAdapter() 
-      {
-	public void windowClosing(WindowEvent e) 
-	{ 
-	  System.exit(0); 
-	}
-      });
-
-      // size the window to obtain a best fit for the components
-      mainFrame.pack();
-
-      // center the frame
-      Dimension d = mainFrame.getToolkit().getScreenSize();
-      Rectangle r = mainFrame.getBounds();
-      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
-
-      // make the window visible
-      mainFrame.setVisible(true);
-
-      // place the cursor in the text field for the username
-      usernameField.requestFocus();
-
-      try 
-      {
-	// Load the Oracle JDBC driver
-    	  System.out.println(username);
-    	  System.out.println(password);
-
-	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
-      }
-      catch (SQLException ex)
-      {
-	System.out.println("Message: " + ex.getMessage());
-	System.exit(-1);
-      }
-    }
-
-
-    /*
-     * connects to Oracle database named ug using user supplied username and password
-     */ 
-    private boolean connect(String username, String password)
-    {
-      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1522:ug"; 
-
-      try 
-      {
-	con = DriverManager.getConnection(connectURL,username,password);
-
-	System.out.println("\nConnected to Oracle!");
-	return true;
-      }
-      catch (SQLException ex)
-      {
-	System.out.println("Message: " + ex.getMessage());
-	return false;
-      }
-    }
-
-
-    /*
-     * event handler for login window
-     */ 
-    public void actionPerformed(ActionEvent e) 
-    {
-	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
-	{
-	  // if the username and password are valid, 
-	  // remove the login window and display a text menu 
-	  mainFrame.dispose();
-          showMenu();     
-	}
-	else
-	{
-	  loginAttempts++;
-	  
-	  if (loginAttempts >= 3)
-	  {
-	      mainFrame.dispose();
-	      System.exit(-1);
-	  }
-	  else
-	  {
-	      // clear the password
-	      passwordField.setText("");
-	  }
-	}             
-                    
-    }
-
-
-    /*
-     * displays simple text interface
-     */ 
-    private void showMenu()
-    {
-	int choice;
-	boolean quit;
-
-	quit = false;
-	
-	try 
-	{
-	    // disable auto commit mode
-	    con.setAutoCommit(false);
-
-	    while (!quit)
-	    {
-		System.out.print("\n\nPlease choose one of the following: \n");
-		System.out.print("1.  Insert branch\n");
-		System.out.print("2.  Delete branch\n");
-		System.out.print("3.  Update branch\n");
-		System.out.print("4.  Show branch\n");
-		System.out.print("5.  Quit\n>> ");
-
-		choice = Integer.parseInt(in.readLine());
-		
-		System.out.println(" ");
-
-		switch(choice)
-		{
-		   case 1:  insertBranch(); break;
-		   case 2:  deleteBranch(); break;
-		   case 3:  updateBranch(); break;
-		   case 4:  showBranch(); break;
-		   case 5:  quit = true;
-		}
-	    }
-
-	    con.close();
-            in.close();
-	    System.out.println("\nGood Bye!\n\n");
-	    System.exit(0);
-	}
-	catch (IOException e)
-	{
-	    System.out.println("IOException!");
-
-	    try
-	    {
-		con.close();
-		System.exit(-1);
-	    }
-	    catch (SQLException ex)
-	    {
-		 System.out.println("Message: " + ex.getMessage());
-	    }
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-	}
-    }
-
-
-    /*
-     * inserts a branch
-     */ 
-    private void insertBranch()
-    {
-	int                bid;
-	String             bname;
-	String             baddr;
-	String             bcity;
-	int                bphone;
-	PreparedStatement  ps;
-	  
-	try
-	{
-	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
-	
-	  System.out.print("\nBranch ID: ");
-	  bid = Integer.parseInt(in.readLine());
-	  ps.setInt(1, bid);
-
-	  System.out.print("\nBranch Name: ");
-	  bname = in.readLine();
-	  ps.setString(2, bname);
-
-	  System.out.print("\nBranch Address: ");
-	  baddr = in.readLine();
-	  
-	  if (baddr.length() == 0)
-          {
-	      ps.setString(3, null);
-	  }
-	  else
-	  {
-	      ps.setString(3, baddr);
-	  }
-	 
-	  System.out.print("\nBranch City: ");
-	  bcity = in.readLine();
-	  ps.setString(4, bcity);
-
-	  System.out.print("\nBranch Phone: ");
-	  String phoneTemp = in.readLine();
-	  if (phoneTemp.length() == 0)
-	  {
-	      ps.setNull(5, java.sql.Types.INTEGER);
-	  }
-	  else
-	  {
-	      bphone = Integer.parseInt(phoneTemp);
-	      ps.setInt(5, bphone);
-	  }
-
-	  ps.executeUpdate();
-
-	  // commit work 
-	  con.commit();
-
-	  ps.close();
-	}
-	catch (IOException e)
-	{
-	    System.out.println("IOException!");
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-	    try 
-	    {
-		// undo the insert
-		con.rollback();	
-	    }
-	    catch (SQLException ex2)
-	    {
-		System.out.println("Message: " + ex2.getMessage());
-		System.exit(-1);
-	    }
-	}
-    }
-
-
-    /*
-     * deletes a branch
-     */ 
-    private void deleteBranch()
-    {
-	int                bid;
-	PreparedStatement  ps;
-	  
-	try
-	{
-	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
-	
-	  System.out.print("\nBranch ID: ");
-	  bid = Integer.parseInt(in.readLine());
-	  ps.setInt(1, bid);
-
-	  int rowCount = ps.executeUpdate();
-
-	  if (rowCount == 0)
-	  {
-	      System.out.println("\nBranch " + bid + " does not exist!");
-	  }
-
-	  con.commit();
-
-	  ps.close();
-	}
-	catch (IOException e)
-	{
-	    System.out.println("IOException!");
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-
-            try 
-	    {
-		con.rollback();	
-	    }
-	    catch (SQLException ex2)
-	    {
-		System.out.println("Message: " + ex2.getMessage());
-		System.exit(-1);
-	    }
-	}
-    }
-    
-
-    /*
-     * updates the name of a branch
-     */ 
-    private void updateBranch()
-    {
-	int                bid;
-	String             bname;
-	PreparedStatement  ps;
-	  
-	try
-	{
-	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
-	
-	  System.out.print("\nBranch ID: ");
-	  bid = Integer.parseInt(in.readLine());
-	  ps.setInt(2, bid);
-
-	  System.out.print("\nBranch Name: ");
-	  bname = in.readLine();
-	  ps.setString(1, bname);
-
-	  int rowCount = ps.executeUpdate();
-	  if (rowCount == 0)
-	  {
-	      System.out.println("\nBranch " + bid + " does not exist!");
-	  }
-
-	  con.commit();
-
-	  ps.close();
-	}
-	catch (IOException e)
-	{
-	    System.out.println("IOException!");
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-	    
-	    try 
-	    {
-		con.rollback();	
-	    }
-	    catch (SQLException ex2)
-	    {
-		System.out.println("Message: " + ex2.getMessage());
-		System.exit(-1);
-	    }
-	}	
-    }
-
-    
-    /*
-     * display information about branches
-     */ 
-    private void showBranch()
-    {
-	String     bid;
-	String     bname;
-	String     baddr;
-	String     bcity;
-	String     bphone;
-	Statement  stmt;
-	ResultSet  rs;
-	   
-	try
-	{
-	  stmt = con.createStatement();
-
-	  rs = stmt.executeQuery("SELECT * FROM branch");
-
-	  // get info on ResultSet
-	  ResultSetMetaData rsmd = rs.getMetaData();
-
-	  // get number of columns
-	  int numCols = rsmd.getColumnCount();
-
-	  System.out.println(" ");
-	  
-	  // display column names;
-	  for (int i = 0; i < numCols; i++)
-	  {
-	      // get column name and print it
-
-	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
-	  }
-
-	  System.out.println(" ");
-
-	  while(rs.next())
-	  {
-	      // for display purposes get everything from Oracle 
-	      // as a string
-
-	      // simplified output formatting; truncation may occur
-
-	      bid = rs.getString("branch_id");
-	      System.out.printf("%-10.10s", bid);
-
-	      bname = rs.getString("branch_name");
-	      System.out.printf("%-20.20s", bname);
-
-	      baddr = rs.getString("branch_addr");
-	      if (rs.wasNull())
-	      {
-	    	  System.out.printf("%-20.20s", " ");
-              }
-	      else
-	      {
-	    	  System.out.printf("%-20.20s", baddr);
-	      }
-
-	      bcity = rs.getString("branch_city");
-	      System.out.printf("%-15.15s", bcity);
-
-	      bphone = rs.getString("branch_phone");
-	      if (rs.wasNull())
-	      {
-	    	  System.out.printf("%-15.15s\n", " ");
-              }
-	      else
-	      {
-	    	  System.out.printf("%-15.15s\n", bphone);
-	      }      
-	  }
- 
-	  // close the statement; 
-	  // the ResultSet will also be closed
-	  stmt.close();
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-	}	
-    }
-    
- 
-    public static void main(String args[])
-    {
-      branch b = new branch();
-    }
-}
-
-private static void checkoutBorrower() {
-	int                bid;
-	int 			   borid;
-	int   			   callNumber;
-	int 			   copyNo;
-	int 			   outDate;
-	int 			   inDate;
-
-	PreparedStatement  ps;
-
-	try {
-		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
-
-		System.out.print("\n Borrower ID: ");
-		bid = Integer.parseInt(Main.in.readLine());
-		ps.setInt(1, bid);
-
-		System.out.print("\n Borrower password: ");
-		password = Main.in.readLine();
-		ps.setString(2, password);
-
-		System.out.print("\n Borrower name: ");
-		name = Main.in.readLine();
-		ps.setString(3, name);
-
-		System.out.print("\n Borrower address: ");
-		address = Main.in.readLine();
-		ps.setString(4, address);
-
-		System.out.print("\n Borrower phone number: ");
-		phone = Main.in.readLine();
-		ps.setString(5,  phone);
-
-		System.out.print("\n Borrower email address: ");
-		emailAddress = Main.in.readLine();
-		ps.setString(6, emailAddress);
-
-		System.out.print("\n Borrower SIN or student number: ");
-		sinOrStNo = Integer.parseInt(Main.in.readLine());
-		ps.setInt(7, sinOrStNo);
-
-		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
-		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
-		ps.setDate(8, expiryDate);
-
-		System.out.print("\n Borrower type: ");
-		type = Main.in.readLine();
-		ps.setString(9, type);
-
-		ps.executeUpdate();
-		// commit work 
-		Main.con.commit();
-		ps.close();
-	}
-
-	catch (IOException e) {
-		System.out.println("IOException!");
-	}
-	catch (SQLException ex) {
-		System.out.println("Message: " + ex.getMessage());
-		try 
-		{
-			// undo the insert
-			Main.con.rollback();	
-		}
-		catch (SQLException ex2)
-		{
-			System.out.println("Message: " + ex2.getMessage());
-			System.exit(-1);
-		}
-	}
-}
\ No newline at end of file
diff --git a/Branch/classes12.zip b/Branch/classes12.zip
deleted file mode 100644
index 860bb5a..0000000
Binary files a/Branch/classes12.zip and /dev/null differ
diff --git a/Branch/ojdbc6.jar b/Branch/ojdbc6.jar
deleted file mode 100644
index b663cd2..0000000
Binary files a/Branch/ojdbc6.jar and /dev/null differ
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 0a02096..8084743 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -177,7 +177,7 @@ public class LibrarianUser {
 			subjects = Arrays.asList(temp.split(","));
 
 			for (String subject : subjects) {				
-				if (subject.length() == 0) {
+				if (subject.trim().length() == 0) {
 					ps3.setString(2, null);
 				} else {
 					ps3.setString(2, subject.trim());
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
new file mode 100644
index 0000000..b430849
--- /dev/null
+++ b/Project Part III/table.sql	
@@ -0,0 +1,209 @@
+drop table Fine;
+drop table Borrowing;
+drop table HoldRequest;
+drop table HasSubject;
+drop table HasAuthor;
+drop table BookCopy;
+drop table Book;
+drop table Borrower;
+drop table BorrowerType;
+
+
+create sequence bid_c
+	start with 1000 
+	increment by 1;
+
+create sequence callNumber_c
+	start with 1000
+	increment by 1;
+
+create sequence hid_c
+	start with 1000
+	increment by 1;
+
+create sequence borid_c
+	start with 1000
+	increment by 1;
+
+create sequence fid_c
+	start with 1000
+	increment by 1;
+
+
+create table BorrowerType
+	(type varchar(10) not null PRIMARY KEY,
+	bookTimeLimit integer null);
+
+create table Borrower
+	(bid integer not null PRIMARY KEY,
+	password varchar(20) null,
+	name varchar(20) null,
+	address varchar(50) null,
+	phone char(10) null,
+	emailAddress varchar(50) null,
+	sinOrStNo varchar(10) not null,
+	expiryDate date null,
+	type varchar(10) not null,
+	FOREIGN KEY (type) references BorrowerType);
+
+create table Book
+	(callNumber integer not null PRIMARY KEY,
+	isbn char(9) not null,
+	title varchar(50) null,
+	mainAuthor varchar(20) null,
+	publisher varchar(20) null,
+	year integer null);
+
+create table BookCopy 
+	(callNumber integer not null,
+	copyNo integer not null,
+	status varchar(10) null,
+	PRIMARY KEY (callNumber, copyNo),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HasAuthor
+	(callNumber integer not null,
+	name varchar(20) not null,
+	PRIMARY KEY (callNumber, name),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HasSubject
+	(callNumber integer not null,
+	subject varchar(50) not null,
+	PRIMARY KEY (callNumber, subject),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HoldRequest
+	(hid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber integer not null,
+	issuedDate date null,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber) references Book);
+
+create table Borrowing
+	(borid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber integer not null,
+	copyNo integer not null,
+	outDate date null,
+	inDate date null,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber, copyNo) references BookCopy);
+
+create table Fine
+	(fid integer not null PRIMARY KEY,
+	amount number null,
+	issuedDate date null,
+	paidDate date null,
+	borid integer not null,
+	FOREIGN KEY (borid) references Borrowing);
+
+
+insert into BorrowerType values
+('student', 2);
+insert into BorrowerType values
+('faculty', 12);
+insert into BorrowerType values
+('staff', 6);
+insert into BorrowerType values
+('general', 2);
+
+
+insert into Borrower values
+(12345678, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '12345678', '2015-09-09', 'faculty');
+insert into Borrower values
+(56781234, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '12345678', '2014-09-09', 'staff');
+insert into Borrower values
+(87654321, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '12345678', '2015-12-12', 'general');
+insert into Borrower values
+(11111111, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '12345678', '2015-09-09', 'staff');
+insert into Borrower values
+(22222222, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
+
+
+insert into Book values
+(100, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
+insert into Book values
+(200, '02000000', 'Hi Database', 'Laks', 'SFU','2000');
+insert into Book values
+(300, '03000000', 'Advanced Data Structures and Algorithms', 'Michelle Ng', 'UBC','2008');
+insert into Book values
+(400, '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
+insert into Book values
+(500, '05000000', 'Hi C++', 'Laks', 'UBC','2014');
+insert into Book values
+(600, '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
+insert into Book values
+(999, '123456789', 'ABCs', 'Sammy', 'Foo Readers', 2000);
+
+
+insert into BookCopy values
+(100, 1, 'out');
+insert into BookCopy values
+(200, 1, 'on hold');
+insert into BookCopy values
+(300, 1, 'out');
+insert into BookCopy values
+(300, 2, 'on hold');
+insert into BookCopy values
+(400, 1, 'in');
+insert into BookCopy values
+(500, 1, 'in');
+insert into BookCopy values
+(500, 1, 'in');
+insert into BookCopy values
+(600, 1, 'out');
+insert into BookCopy values
+(999, 1, 'in');
+insert into BookCopy values
+(999, 2, 'out');
+insert into BookCopy values
+(999, 3, 'on hold');
+
+
+insert into HasAuthor values
+(200, 'Gregor');
+insert into HasAuthor values
+(200, 'Mike');
+insert into HasAuthor values
+(500, 'Patrice');
+insert into HasAuthor values
+(999, 'Bobby');
+
+
+insert into HasSubject values
+(100, 'java');
+insert into HasSubject values
+(100, 'computer');
+insert into HasSubject values
+(200, 'database');
+insert into HasSubject values
+(200, 'computer');
+insert into HasSubject values
+(300, 'computer');
+insert into HasSubject values
+(400, 'computer');
+insert into HasSubject values
+(500, 'c++');
+insert into HasSubject values
+(500, 'computer');
+insert into HasSubject values
+(600, 'computer');
+insert into HasSubject values
+(999, 'kindergarten');
+insert into HasSubject values
+(999, 'letters');
+
+
+insert into Borrowing values
+(11111, 12345678, 1000, 2,'2014-03-29',null);
+insert into Borrowing values
+(22222, 12345678, 1000, 1,'2014-02-22','2014-03-29');
+insert into Borrowing values
+(33333, 12345678, 1000, 1,'2014-01-29','2014-01-31');
+insert into Borrowing values
+(44444, 12345678, 1000, 1,'2013-09-01','2013-10-10');
+
+insert into HoldRequest values
+(1111, 12345678, 1000, '2014-03-30');
\ No newline at end of file
diff --git a/table.sql b/table.sql
deleted file mode 100644
index ecf5fe2..0000000
--- a/table.sql
+++ /dev/null
@@ -1,209 +0,0 @@
-drop table Fine;
-drop table Borrowing;
-drop table HoldRequest;
-drop table HasSubject;
-drop table HasAuthor;
-drop table BookCopy;
-drop table Book;
-drop table Borrower;
-drop table BorrowerType;
-
-
-create sequence bid_c
-	start with 1000 
-	increment by 1;
-	
-create sequence callNumber_c
-	start with 1000
-	increment by 1;
-	
-create sequence hid_c
-	start with 1000
-	increment by 1;
-	
-create sequence borid_c
-	start with 1000
-	increment by 1;
-	
-create sequence fid_c
-	start with 1000
-	increment by 1;
-
-
-create table BorrowerType
-	(type varchar(10) not null PRIMARY KEY,
-	bookTimeLimit integer null);
-
-create table Borrower
-	(bid integer not null PRIMARY KEY,
-	password varchar(20) null,
-	name varchar(20) null,
-	address varchar(50) null,
-	phone char(10) null,
-	emailAddress varchar(50) null,
-	sinOrStNo varchar(10) not null,
-	expiryDate date null,
-	type varchar(10) not null,
-	FOREIGN KEY (type) references BorrowerType);
-
-create table Book
-	(callNumber integer not null PRIMARY KEY,
-	isbn char(9) not null,
-	title varchar(50) null,
-	mainAuthor varchar(20) null,
-	publisher varchar(20) null,
-	year integer null);
-
-create table BookCopy 
-	(callNumber integer not null,
-	copyNo integer not null,
-	status varchar(10) null,
-	PRIMARY KEY (callNumber, copyNo),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HasAuthor
-	(callNumber integer not null,
-	name varchar(20) not null,
-	PRIMARY KEY (callNumber, name),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HasSubject
-	(callNumber integer not null,
-	subject varchar(50) not null,
-	PRIMARY KEY (callNumber, subject),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HoldRequest
-	(hid integer not null PRIMARY KEY,
-	bid integer not null,
-	callNumber integer not null,
-	issuedDate date null,
-	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber) references Book);
-
-create table Borrowing
-	(borid integer not null PRIMARY KEY,
-	bid integer not null,
-	callNumber integer not null,
-	copyNo integer not null,
-	outDate date null,
-	inDate date null,
-	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber, copyNo) references BookCopy);
-
-create table Fine
-	(fid integer not null PRIMARY KEY,
-	amount number null,
-	issuedDate date null,
-	paidDate date null,
-	borid integer not null,
-	FOREIGN KEY (borid) references Borrowing);
-
-
-insert into BorrowerType values
-('student', 2);
-insert into BorrowerType values
-('faculty', 12);
-insert into BorrowerType values
-('staff', 6);
-insert into BorrowerType values
-('general', 2);
-
-
-insert into Borrower values
-(12345678, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '12345678', '2015-09-09', 'faculty');
-insert into Borrower values
-(56781234, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '12345678', '2014-09-09', 'staff');
-insert into Borrower values
-(87654321, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '12345678', '2015-12-12', 'general');
-insert into Borrower values
-(11111111, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '12345678', '2015-09-09', 'staff');
-insert into Borrower values
-(22222222, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
-
-
-insert into Book values
-(100, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
-insert into Book values
-(200, '02000000', 'Hi Database', 'Laks', 'SFU','2000');
-insert into Book values
-(300, '03000000', 'Advanced Data Structures and Algorithms', 'Michelle Ng', 'UBC','2008');
-insert into Book values
-(400, '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
-insert into Book values
-(500, '05000000', 'Hi C++', 'Laks', 'UBC','2014');
-insert into Book values
-(600, '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
-insert into Book values
-(999, '123456789', 'ABCs', 'Sammy', 'Foo Readers', 2000);
-
-
-insert into BookCopy values
-(100, 1, 'out');
-insert into BookCopy values
-(200, 1, 'on hold');
-insert into BookCopy values
-(300, 1, 'out');
-insert into BookCopy values
-(300, 2, 'on hold');
-insert into BookCopy values
-(400, 1, 'in');
-insert into BookCopy values
-(500, 1, 'in');
-insert into BookCopy values
-(500, 1, 'in');
-insert into BookCopy values
-(600, 1, 'out');
-insert into BookCopy values
-(999, 1, 'in');
-insert into BookCopy values
-(999, 2, 'out');
-insert into BookCopy values
-(999, 3, 'on hold');
-
-
-insert into HasAuthor values
-(200, 'Gregor');
-insert into HasAuthor values
-(200, 'Mike');
-insert into HasAuthor values
-(500, 'Patrice');
-insert into HasAuthor values
-(999, 'Bobby');
-
-
-insert into HasSubject values
-(100, 'java');
-insert into HasSubject values
-(100, 'computer');
-insert into HasSubject values
-(200, 'database');
-insert into HasSubject values
-(200, 'computer');
-insert into HasSubject values
-(300, 'computer');
-insert into HasSubject values
-(400, 'computer');
-insert into HasSubject values
-(500, 'c++');
-insert into HasSubject values
-(500, 'computer');
-insert into HasSubject values
-(600, 'computer');
-insert into HasSubject values
-(999, 'kindergarten');
-insert into HasSubject values
-(999, 'letters');
-
-
-insert into Borrowing values
-(11111, 12345678, 1000, 2,'2014-03-29',null);
-insert into Borrowing values
-(22222, 12345678, 1000, 1,'2014-02-22','2014-03-29');
-insert into Borrowing values
-(33333, 12345678, 1000, 1,'2014-01-29','2014-01-31');
-insert into Borrowing values
-(44444, 12345678, 1000, 1,'2013-09-01','2013-10-10');
-
-insert into HoldRequest values
-(1111, 12345678, 1000, '2014-03-30');

commit 89320b3e0b2f6179def084c80cce14887449b64b
Merge: 79107ff ae1a1ff
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 21:10:44 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam

commit f671fd32196872b6fd2989b10844c8c35ac70a1b
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sat Mar 29 22:09:54 2014 -0700

    Fixed checkout

diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/13/100a5f00bcb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/13/100a5f00bcb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..75576c0
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/13/100a5f00bcb700131d4c9f1dfbb6ab58
@@ -0,0 +1,353 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2. Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/18/80061f48c5b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/18/80061f48c5b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..15ac79a
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/18/80061f48c5b700131d4c9f1dfbb6ab58
@@ -0,0 +1,367 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+			System.out.print("\n Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date(dd/mm/yy): ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+			
+			//!!
+			ps.setInt(2, bid);
+			ps.setInt(3, callNumber);
+			ps.setDate(6, null);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/27/c03d069cc2b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/27/c03d069cc2b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..fb81284
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/27/c03d069cc2b700131d4c9f1dfbb6ab58
@@ -0,0 +1,361 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in'");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(2, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(3, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/2b/5044eb9fbbb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/2b/5044eb9fbbb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..d0f8b7b
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/2b/5044eb9fbbb700131d4c9f1dfbb6ab58
@@ -0,0 +1,353 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  ; break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/34/20e0d640beb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/34/20e0d640beb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..b0692bf
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/34/20e0d640beb700131d4c9f1dfbb6ab58
@@ -0,0 +1,353 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/3b/b09a71b9c4b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/3b/b09a71b9c4b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..e45e9c4
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/3b/b09a71b9c4b700131d4c9f1dfbb6ab58
@@ -0,0 +1,367 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date(dd/mm/yy): ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+			
+			//!!
+			ps.setInt(2, bid);
+			ps.setInt(3, callNumber);
+			ps.setInt(6, null);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/40/20531ec0c5b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/40/20531ec0c5b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..c933675
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/40/20531ec0c5b700131d4c9f1dfbb6ab58
@@ -0,0 +1,367 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+			System.out.print("\n Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date(dd/mm/yy): ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+			
+			//!!
+			ps.setInt(2, bid);
+			ps.setInt(3, callNumber);
+			ps.setDate(6, null);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("-");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/58/a05d6714bcb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/58/a05d6714bcb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..51afe15
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/58/a05d6714bcb700131d4c9f1dfbb6ab58
@@ -0,0 +1,353 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/5d/10c89aa1c6b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/5d/10c89aa1c6b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..51cf8a2
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/5d/10c89aa1c6b700131d4c9f1dfbb6ab58
@@ -0,0 +1,367 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+			System.out.println("Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.println("Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.println("Out Date(dd/mm/yy): ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+			
+			//!!
+			ps.setInt(2, bid);
+			ps.setInt(3, callNumber);
+			ps.setDate(6, null);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("-");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/5e/30f14cb6bbb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/5e/30f14cb6bbb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..fb423ad
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/5e/30f14cb6bbb700131d4c9f1dfbb6ab58
@@ -0,0 +1,254 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+import java.text.ParseException;
+
+import javax.swing.*;
+
+import users.BorrowerUser;
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu() throws ParseException
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  BorrowerUser.main(); break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/77/10181cefbbb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/77/10181cefbbb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..1cdcc97
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/77/10181cefbbb700131d4c9f1dfbb6ab58
@@ -0,0 +1,353 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				//System.out.print("2.  Check out items\n");
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("\n List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c);
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/7a/e0a868acc4b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/7a/e0a868acc4b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..35b0dae
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/7a/e0a868acc4b700131d4c9f1dfbb6ab58
@@ -0,0 +1,362 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(2, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(3, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/84/b09638a4c1b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/84/b09638a4c1b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..489d467
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/84/b09638a4c1b700131d4c9f1dfbb6ab58
@@ -0,0 +1,361 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in'");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID for " + bid + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/86/a03a12c0c4b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/86/a03a12c0c4b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..2e3e899
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/86/a03a12c0c4b700131d4c9f1dfbb6ab58
@@ -0,0 +1,367 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date(dd/mm/yy): ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+			
+			//!!
+			ps.setInt(2, bid);
+			ps.setInt(3, callNumber);
+			ps.setDate(6, null);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/8d/90d78476c3b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/8d/90d78476c3b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..35b0dae
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/8d/90d78476c3b700131d4c9f1dfbb6ab58
@@ -0,0 +1,362 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(2, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(3, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/ca/b07645a4bbb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/ca/b07645a4bbb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..cc9d472
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/ca/b07645a4bbb700131d4c9f1dfbb6ab58
@@ -0,0 +1,253 @@
+package gui;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.io.*;
+import java.sql.*;
+
+import javax.swing.*;
+
+import users.BorrowerUser;
+import users.ClerkUser;
+import users.LibrarianUser;
+
+
+/**
+ * Loads application.
+ * Using simple text interface like "branch" tutorial until GUI is set up
+ */
+public class Main implements ActionListener {
+
+	// command line reader 
+    public static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
+    
+	public static Connection con;
+	
+    // user is allowed 3 login attempts
+    private int loginAttempts = 0;
+
+	// components of the login window
+	private JTextField usernameField;
+	private JPasswordField passwordField;
+	private JFrame mainFrame;
+
+
+    /*
+     * constructs login window and loads JDBC driver
+     */ 
+	public Main() {
+		// TODO
+		mainFrame = new JFrame("User Login");
+
+		JLabel usernameLabel = new JLabel("Enter username: ");
+		JLabel passwordLabel = new JLabel("Enter password: ");
+
+		usernameField = new JTextField(10);
+		passwordField = new JPasswordField(10);
+		passwordField.setEchoChar('*');
+
+		JButton loginButton = new JButton("Log In");
+
+		JPanel contentPane = new JPanel();
+		mainFrame.setContentPane(contentPane);
+
+
+		// layout components using the GridBag layout manager
+
+		GridBagLayout gb = new GridBagLayout();
+		GridBagConstraints c = new GridBagConstraints();
+
+		contentPane.setLayout(gb);
+		contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
+
+		// place the username label 
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(10, 10, 5, 0);
+		gb.setConstraints(usernameLabel, c);
+		contentPane.add(usernameLabel);
+
+		// place the text field for the username 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(10, 0, 5, 10);
+		gb.setConstraints(usernameField, c);
+		contentPane.add(usernameField);
+
+		// place password label
+		c.gridwidth = GridBagConstraints.RELATIVE;
+		c.insets = new Insets(0, 10, 10, 0);
+		gb.setConstraints(passwordLabel, c);
+		contentPane.add(passwordLabel);
+
+		// place the password field 
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(0, 0, 10, 10);
+		gb.setConstraints(passwordField, c);
+		contentPane.add(passwordField);
+
+		// place the login button
+		c.gridwidth = GridBagConstraints.REMAINDER;
+		c.insets = new Insets(5, 10, 10, 10);
+		c.anchor = GridBagConstraints.CENTER;
+		gb.setConstraints(loginButton, c);
+		contentPane.add(loginButton);
+
+		// register password field and OK button with action event handler
+		passwordField.addActionListener(this);
+		loginButton.addActionListener(this);
+
+		// anonymous inner class for closing the window
+		mainFrame.addWindowListener(new WindowAdapter() 
+		{
+			public void windowClosing(WindowEvent e) 
+			{ 
+				System.exit(0); 
+			}
+		});
+
+		// size the window to obtain a best fit for the components
+		mainFrame.pack();
+
+		// center the frame
+		Dimension d = mainFrame.getToolkit().getScreenSize();
+		Rectangle r = mainFrame.getBounds();
+		mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
+
+		// make the window visible
+		mainFrame.setVisible(true);
+
+		// place the cursor in the text field for the username
+		usernameField.requestFocus();
+
+		try 
+		{
+			// Load the Oracle JDBC driver
+			DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			System.exit(-1);
+		}
+	}
+
+
+	/*
+	 * connects to Oracle database named ug using user supplied username and password
+	 */ 
+	private boolean connect(String username, String password)
+	{
+		String connectURL = "jdbc:oracle:thin:@localhost:1522:ug"; 
+
+		try 
+		{
+			con = DriverManager.getConnection(connectURL,username,password);
+
+			System.out.println("\nConnected to Oracle!");
+			return true;
+		}
+		catch (SQLException ex)
+		{
+			System.out.println("Message: " + ex.getMessage());
+			return false;
+		}
+	}
+
+
+	/*
+	 * event handler for login window
+	 */ 
+	public void actionPerformed(ActionEvent e) 
+	{
+		if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
+		{
+			// if the username and password are valid, 
+			// remove the login window and display a text menu 
+			mainFrame.dispose();
+			showMenu();     
+		}
+		else
+		{
+			loginAttempts++;
+
+			if (loginAttempts >= 3)
+			{
+				mainFrame.dispose();
+				System.exit(-1);
+			}
+			else
+			{
+				// clear the password
+				passwordField.setText("");
+			}
+		}             
+
+	}
+	
+	
+	/*
+     * displays simple text interface
+     */ 
+    private void showMenu()
+    {
+	int choice;
+	boolean quit;
+
+	quit = false;
+	
+	try 
+	{
+	    // disable auto commit mode
+	    con.setAutoCommit(false);
+
+	    while (!quit)
+	    {
+		System.out.print("\n\nPlease choose one of the following: \n");
+		System.out.print("1.  Borrower\n");
+		System.out.print("2.  Clerk\n");
+		System.out.print("3.  Librarian\n");
+		System.out.print("4.  Quit\n>>");
+
+		choice = Integer.parseInt(in.readLine());
+		
+		System.out.println(" ");
+
+		switch(choice)
+		{
+		   case 1:  BorrowerUser.main(); break;
+		   case 2:  ClerkUser.main(); break;
+		   case 3:  LibrarianUser.main(); break;
+		   case 4:  quit = true; 
+		}
+	    }
+
+	    con.close();
+        in.close();
+	    System.out.println("\nGood Bye!\n\n");
+	    System.exit(0);
+	}
+	catch (IOException e)
+	{
+	    System.out.println("IOException!");
+
+	    try
+	    {
+		con.close();
+		System.exit(-1);
+	    }
+	    catch (SQLException ex)
+	    {
+		 System.out.println("Message: " + ex.getMessage());
+	    }
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	}
+    }
+
+    
+    public static void main(String args[])
+    {
+      Main m = new Main();
+    }
+}
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/d0/509066fbc5b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/d0/509066fbc5b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..855e2e5
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/d0/509066fbc5b700131d4c9f1dfbb6ab58
@@ -0,0 +1,367 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+			System.out.println("Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.println("Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.println("Out Date(dd/mm/yy): ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+			
+			//!!
+			ps.setInt(2, bid);
+			ps.setInt(3, callNumber);
+			ps.setDate(6, null);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("-");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/d4/7063e90bc2b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/d4/7063e90bc2b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..4f089c3
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/d4/7063e90bc2b700131d4c9f1dfbb6ab58
@@ -0,0 +1,361 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in'");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/d5/8077ae63c7b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/d5/8077ae63c7b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..5bd490c
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/d5/8077ae63c7b700131d4c9f1dfbb6ab58
@@ -0,0 +1,367 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+
+			System.out.println("Borrowing ID for " + callNumber + ":");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.println("Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.println("Out Date(dd/mm/yy): ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+			
+			//!!
+			ps.setInt(2, bid);
+			ps.setInt(3, callNumber);
+			ps.setDate(6, null);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("-");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DAY_OF_YEAR, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/e5/30716d26bfb700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/e5/30716d26bfb700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..06a58c4
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/e5/30716d26bfb700131d4c9f1dfbb6ab58
@@ -0,0 +1,355 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+	
+			
+			
+			for (String c: callNumbersS){
+				int callNumber;
+				callNumber = Integer.parseInt(c.trim());
+				callNumbers.add(callNumber);
+			}
+			
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
+
+			if (rs.next() == false){
+				System.out.println("Invalid ID");
+				
+			}
+			else {
+				for (int j = 0; j < callNumbers.size(); j++) {
+					int i = callNumbers.get(j);
+					checkOutItem(bid, i);
+				}
+				
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/f9/30d48c61c0b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/f9/30d48c61c0b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..5bbe609
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/f9/30d48c61c0b700131d4c9f1dfbb6ab58
@@ -0,0 +1,361 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = in");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.history/f9/9054f346c1b700131d4c9f1dfbb6ab58 b/.metadata/.plugins/org.eclipse.core.resources/.history/f9/9054f346c1b700131d4c9f1dfbb6ab58
new file mode 100644
index 0000000..4214811
--- /dev/null
+++ b/.metadata/.plugins/org.eclipse.core.resources/.history/f9/9054f346c1b700131d4c9f1dfbb6ab58
@@ -0,0 +1,361 @@
+package users;
+
+import gui.Main;
+
+import java.io.IOException;
+import java.sql.*;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.GregorianCalendar;
+import java.util.List;
+
+
+/**
+ * Loads Clerk user interface.
+ * Executes Clerk transactions.
+ */
+public class ClerkUser {
+
+	/*
+	 * Loads clerk's side of application.
+	 * Uses buffer line reader and connection established in Main class.
+	 */
+	public static void main() throws ParseException {
+		int choice;
+		boolean quit;
+
+		quit = false;
+		try {
+			while (!quit) {
+				System.out.print("\n\nPlease choose one of the following: \n");
+				System.out.print("1.  Add borrower\n");
+				System.out.print("2.  Check out item\n");;
+				//System.out.print("3.  Process a return\n");
+				//System.out.print("4.  Check overdue items\n");
+				System.out.print("5.  Quit\n>>");
+
+				choice = Integer.parseInt(Main.in.readLine());
+
+				System.out.println(" ");
+
+				switch (choice) {
+				case 1:  addBorrower(); break;
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
+				case 3:  ; break; // TODO processReturn()
+				case 4:  ; break; // TODO checkOverdueItems()
+				case 5:  quit = true; 
+				}
+			}
+			Main.con.close();
+			Main.in.close();
+			System.out.println("\nGood Bye!\n\n");
+			System.exit(0);
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
+
+
+	/*
+	 * Add a new borrower to the library.  
+	 * User should provide all required info.
+	 */
+	private static void addBorrower() {
+		int                bid;
+		String             password; 
+		String             name;
+		String             address;
+		String             phone;
+		String             emailAddress;
+		int                sinOrStNo;
+		Date               expiryDate;
+		String             type;
+
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+
+			System.out.print("\n Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, bid);
+
+			System.out.print("\n Borrower password: ");
+			password = Main.in.readLine();
+			ps.setString(2, password);
+
+			System.out.print("\n Borrower name: ");
+			name = Main.in.readLine();
+			ps.setString(3, name);
+
+			System.out.print("\n Borrower address: ");
+			address = Main.in.readLine();
+			ps.setString(4, address);
+
+			System.out.print("\n Borrower phone number: ");
+			phone = Main.in.readLine();
+			ps.setString(5,  phone);
+
+			System.out.print("\n Borrower email address: ");
+			emailAddress = Main.in.readLine();
+			ps.setString(6, emailAddress);
+
+			System.out.print("\n Borrower SIN or student number: ");
+			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(7, sinOrStNo);
+
+			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
+			ps.setDate(8, expiryDate);
+
+			System.out.print("\n Borrower type: ");
+			type = Main.in.readLine();
+			ps.setString(9, type);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	
+	private static void checkOutItems() throws ParseException {
+		int 			   bid;
+		List<String>	   callNumbersS;
+		ArrayList<Integer> callNumbers = null;
+		callNumbers = new ArrayList<Integer>();
+		Statement  		   s;
+		
+		try {
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			System.out.println("List of call numbers: ");
+			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
+			
+			if (callNumbersS.isEmpty()) {
+				
+			}
+	
+			
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
+
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
+				
+				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
+				
+				}
+			}
+			
+		}
+
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void checkOutItem(int bid, int callNumber) throws ParseException {
+		
+		Statement			s;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+										+ "FROM BookCopy  "
+										+ "WHERE status = 'in'");
+
+			if (rs.next() == false){
+				System.out.println("Book not available for borrowing");
+				
+			}
+			else {
+				addBorrowingHelper(bid, callNumber);
+			}
+			
+		}
+		
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
+
+		int						borid;
+		int						copyNo;
+		java.sql.Date 			outDate;
+		PreparedStatement  ps;
+
+		try {
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+
+			System.out.print("\n Borrowing ID: ");
+			borid = Integer.parseInt(Main.in.readLine());
+			ps.setInt(1, borid);
+
+			System.out.print("\n Copy No: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(4, copyNo);
+
+			System.out.print("\n Out Date: ");
+			outDate = stringToDate(Main.in.readLine());
+			ps.setDate(5, outDate);
+
+			ps.executeUpdate();
+			// commit work 
+			Main.con.commit();
+			ps.close();
+			
+			System.out.println("Call Number: " + callNumber);
+			System.out.println("Copy Number: " + copyNo);
+			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+		}
+
+		
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+	
+	static Date stringToDate(String date) throws ParseException{
+		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		
+	}
+	
+	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+		
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+		
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
+
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+				
+			}
+
+			
+		}
+		
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+		String outDateS = outDate.toString();
+		System.out.println("This is the outDate in string: " + outDateS);
+		String[] tokens = outDateS.split("/");
+		
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
+		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;
+		
+	}
+}
+
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.markers.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.markers.snap
index 4eb4941..0b992ea 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.markers.snap and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.markers.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.syncinfo.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.syncinfo.snap
index 4eb4941..0b992ea 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.syncinfo.snap and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Branch/.syncinfo.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/e4/3b/history.index b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/e4/3b/history.index
new file mode 100644
index 0000000..035d971
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/e4/3b/history.index differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/e4/8/history.index b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/e4/8/history.index
new file mode 100644
index 0000000..6e215fa
Binary files /dev/null and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.indexes/e4/8/history.index differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap
index 223fbff..d17af01 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.markers.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap
index 1253ec8..837b604 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap and b/.metadata/.plugins/org.eclipse.core.resources/.projects/Project Part III/.syncinfo.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap b/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap
index 1253ec8..837b604 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap and b/.metadata/.plugins/org.eclipse.core.resources/.root/.markers.snap differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources b/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources
index 917ee53..27c3e4e 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources and b/.metadata/.plugins/org.eclipse.core.resources/.safetable/org.eclipse.core.resources differ
diff --git a/.metadata/.plugins/org.eclipse.core.resources/.snap b/.metadata/.plugins/org.eclipse.core.resources/.snap
index 1472c1c..260d42e 100644
Binary files a/.metadata/.plugins/org.eclipse.core.resources/.snap and b/.metadata/.plugins/org.eclipse.core.resources/.snap differ
diff --git a/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi b/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
index 07990f1..398a635 100644
--- a/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
+++ b/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
@@ -1,17 +1,17 @@
 <?xml version="1.0" encoding="ASCII"?>
-<application:Application xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:advanced="http://www.eclipse.org/ui/2010/UIModel/application/ui/advanced" xmlns:application="http://www.eclipse.org/ui/2010/UIModel/application" xmlns:basic="http://www.eclipse.org/ui/2010/UIModel/application/ui/basic" xmlns:menu="http://www.eclipse.org/ui/2010/UIModel/application/ui/menu" xmi:id="_eXnDsLe6EeOxntPoYxjofg" elementId="org.eclipse.e4.legacy.ide.application" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_eXnDsbe6EeOxntPoYxjofg" bindingContexts="_eXqHTLe6EeOxntPoYxjofg">
-  <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workbench>&#xA;&lt;mruList>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;ClerkUser.java&quot; tooltip=&quot;Project Part III/src/users/ClerkUser.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/users/ClerkUser.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;LibrarianUser.java&quot; tooltip=&quot;Project Part III/src/users/LibrarianUser.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/users/LibrarianUser.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;BorrowerUser.java&quot; tooltip=&quot;Project Part III/src/users/BorrowerUser.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/users/BorrowerUser.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;Main.java&quot; tooltip=&quot;Project Part III/src/gui/Main.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/gui/Main.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;branch.java&quot; tooltip=&quot;Branch/branch.java&quot;>&#xA;&lt;persistable path=&quot;/Branch/branch.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.jdt.ui.ClassFileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.ClassFileEditor&quot; name=&quot;DatabaseError.class&quot; tooltip=&quot;oracle.jdbc.driver.DatabaseError&quot;>&#xA;&lt;persistable org.eclipse.jdt.ui.ClassFileIdentifier=&quot;=Project Part III/classes12.zip&amp;lt;oracle.jdbc.driver(DatabaseError.class&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.ui.DefaultTextEditor&quot; name=&quot;table.sql&quot; tooltip=&quot;Project Part III/table.sql&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/table.sql&quot;/>&#xA;&lt;/file>&#xA;&lt;/mruList>&#xA;&lt;/workbench>"/>
+<application:Application xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:advanced="http://www.eclipse.org/ui/2010/UIModel/application/ui/advanced" xmlns:application="http://www.eclipse.org/ui/2010/UIModel/application" xmlns:basic="http://www.eclipse.org/ui/2010/UIModel/application/ui/basic" xmlns:menu="http://www.eclipse.org/ui/2010/UIModel/application/ui/menu" xmi:id="_JPbLMLfJEeOxntPoYxjofg" elementId="org.eclipse.e4.legacy.ide.application" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_JPbLMbfJEeOxntPoYxjofg" bindingContexts="_JPfctLfJEeOxntPoYxjofg">
+  <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workbench>&#xA;&lt;mruList>&#xA;&lt;file factoryID=&quot;org.eclipse.jdt.ui.ClassFileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.ClassFileEditor&quot; name=&quot;NumberFormatException.class&quot; tooltip=&quot;java.lang.NumberFormatException&quot;>&#xA;&lt;persistable org.eclipse.jdt.ui.ClassFileIdentifier=&quot;=Branch/\/Library\/Java\/JavaVirtualMachines\/jdk1.7.0_40.jdk\/Contents\/Home\/jre\/lib\/rt.jar&amp;lt;java.lang(NumberFormatException.class&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;ClerkUser.java&quot; tooltip=&quot;Project Part III/src/users/ClerkUser.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/users/ClerkUser.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;LibrarianUser.java&quot; tooltip=&quot;Project Part III/src/users/LibrarianUser.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/users/LibrarianUser.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;BorrowerUser.java&quot; tooltip=&quot;Project Part III/src/users/BorrowerUser.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/users/BorrowerUser.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;Main.java&quot; tooltip=&quot;Project Part III/src/gui/Main.java&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/src/gui/Main.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot; name=&quot;branch.java&quot; tooltip=&quot;Branch/branch.java&quot;>&#xA;&lt;persistable path=&quot;/Branch/branch.java&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.jdt.ui.ClassFileEditorInputFactory&quot; id=&quot;org.eclipse.jdt.ui.ClassFileEditor&quot; name=&quot;DatabaseError.class&quot; tooltip=&quot;oracle.jdbc.driver.DatabaseError&quot;>&#xA;&lt;persistable org.eclipse.jdt.ui.ClassFileIdentifier=&quot;=Project Part III/classes12.zip&amp;lt;oracle.jdbc.driver(DatabaseError.class&quot;/>&#xA;&lt;/file>&#xA;&lt;file factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; id=&quot;org.eclipse.ui.DefaultTextEditor&quot; name=&quot;table.sql&quot; tooltip=&quot;Project Part III/table.sql&quot;>&#xA;&lt;persistable path=&quot;/Project Part III/table.sql&quot;/>&#xA;&lt;/file>&#xA;&lt;/mruList>&#xA;&lt;/workbench>"/>
   <tags>activeSchemeId:org.eclipse.ui.defaultAcceleratorConfiguration</tags>
-  <children xsi:type="basic:TrimmedWindow" xmi:id="_eXnDsbe6EeOxntPoYxjofg" elementId="IDEWindow" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_eXnDsre6EeOxntPoYxjofg" label="%trimmedwindow.label.eclipseSDK" x="26" y="22" width="1027" height="768">
+  <children xsi:type="basic:TrimmedWindow" xmi:id="_JPbLMbfJEeOxntPoYxjofg" elementId="IDEWindow" contributorURI="platform:/plugin/org.eclipse.platform" selectedElement="_JPbLMrfJEeOxntPoYxjofg" label="%trimmedwindow.label.eclipseSDK" x="28" y="22" width="1027" height="768">
     <persistedState key="coolBarVisible" value="true"/>
     <persistedState key="perspectiveBarVisible" value="true"/>
     <persistedState key="workingSets" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;workingSets/>"/>
     <persistedState key="aggregateWorkingSetId" value="Aggregate for window 1395689134483"/>
     <tags>topLevel</tags>
     <tags>shellMaximized</tags>
-    <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDsre6EeOxntPoYxjofg" selectedElement="_eXnDs7e6EeOxntPoYxjofg" horizontal="true">
-      <children xsi:type="advanced:PerspectiveStack" xmi:id="_eXnDs7e6EeOxntPoYxjofg" elementId="PerspectiveStack" containerData="7500" selectedElement="_eXnDtLe6EeOxntPoYxjofg">
-        <children xsi:type="advanced:Perspective" xmi:id="_eXnDtLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaPerspective" selectedElement="_eXnDtbe6EeOxntPoYxjofg" label="Java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/jperspective.gif">
+    <children xsi:type="basic:PartSashContainer" xmi:id="_JPbLMrfJEeOxntPoYxjofg" selectedElement="_JPbLM7fJEeOxntPoYxjofg" horizontal="true">
+      <children xsi:type="advanced:PerspectiveStack" xmi:id="_JPbLM7fJEeOxntPoYxjofg" elementId="PerspectiveStack" containerData="7500" selectedElement="_JPbLNLfJEeOxntPoYxjofg">
+        <children xsi:type="advanced:Perspective" xmi:id="_JPbLNLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaPerspective" selectedElement="_JPbLNbfJEeOxntPoYxjofg" label="Java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/jperspective.gif">
           <persistedState key="persp.hiddenItems" value="persp.hideToolbarSC:org.eclipse.debug.ui.commands.RunToLine,persp.hideToolbarSC:org.eclipse.jdt.ui.actions.OpenProjectWizard,persp.hideToolbarSC:org.eclipse.ui.edit.text.toggleShowSelectedElementOnly,"/>
           <tags>persp.actionSet:org.eclipse.ui.cheatsheets.actionSet</tags>
           <tags>persp.actionSet:org.eclipse.search.searchActionSet</tags>
@@ -74,2422 +74,2426 @@
           <tags>persp.viewSC:org.eclipse.wb.core.StructureView</tags>
           <tags>persp.viewSC:org.eclipse.wb.core.PaletteView</tags>
           <tags>persp.perspSC:org.eclipse.wst.jsdt.ui.JavaPerspective</tags>
-          <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDtbe6EeOxntPoYxjofg" selectedElement="_eXnDwbe6EeOxntPoYxjofg" horizontal="true">
-            <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDtre6EeOxntPoYxjofg" containerData="2500" selectedElement="_eXnDt7e6EeOxntPoYxjofg">
-              <children xsi:type="basic:PartStack" xmi:id="_eXnDt7e6EeOxntPoYxjofg" elementId="left" containerData="6000" selectedElement="_eXnDuLe6EeOxntPoYxjofg">
+          <children xsi:type="basic:PartSashContainer" xmi:id="_JPbLNbfJEeOxntPoYxjofg" selectedElement="_JPbLQbfJEeOxntPoYxjofg" horizontal="true">
+            <children xsi:type="basic:PartSashContainer" xmi:id="_JPbLNrfJEeOxntPoYxjofg" containerData="2500" selectedElement="_JPbLN7fJEeOxntPoYxjofg">
+              <children xsi:type="basic:PartStack" xmi:id="_JPbLN7fJEeOxntPoYxjofg" elementId="left" containerData="6000" selectedElement="_JPbLOLfJEeOxntPoYxjofg">
                 <tags>newtablook</tags>
                 <tags>org.eclipse.e4.primaryNavigationStack</tags>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDuLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer" ref="_eXnE_re6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDube6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypeHierarchy" toBeRendered="false" ref="_eXnrGLe6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDure6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ResourceNavigator" toBeRendered="false" ref="_eXnrGbe6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDu7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigator.ProjectExplorer" toBeRendered="false" ref="_eXnrGre6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDvLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.ResultView" toBeRendered="false" ref="_eXnrYbe6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDvbe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.StructureView" toBeRendered="false" ref="_eXnrYre6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDvre6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.PaletteView" toBeRendered="false" ref="_eXnrY7e6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLOLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer" ref="_JPbzBLfJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLObfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypeHierarchy" toBeRendered="false" ref="_JPcZY7fJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLOrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ResourceNavigator" toBeRendered="false" ref="_JPcZZLfJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLO7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigator.ProjectExplorer" toBeRendered="false" ref="_JPcZZbfJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLPLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.ResultView" toBeRendered="false" ref="_JPcZs7fJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLPbfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.StructureView" toBeRendered="false" ref="_JPcZtLfJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLPrfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.PaletteView" toBeRendered="false" ref="_JPcZtbfJEeOxntPoYxjofg"/>
               </children>
-              <children xsi:type="basic:PartStack" xmi:id="_eXnDv7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewMStack" toBeRendered="false" containerData="4000">
+              <children xsi:type="basic:PartStack" xmi:id="_JPbLP7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewMStack" toBeRendered="false" containerData="4000">
                 <tags>newtablook</tags>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDwLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" toBeRendered="false" ref="_eXnrYLe6EeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLQLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" toBeRendered="false" ref="_JPcZsrfJEeOxntPoYxjofg"/>
               </children>
             </children>
-            <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDwbe6EeOxntPoYxjofg" containerData="7500" selectedElement="_eXnDwre6EeOxntPoYxjofg">
-              <children xsi:type="basic:PartSashContainer" xmi:id="_eXnDwre6EeOxntPoYxjofg" containerData="7928" selectedElement="_eXnDw7e6EeOxntPoYxjofg" horizontal="true">
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDw7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.editorss" containerData="7979" ref="_eXnE7Le6EeOxntPoYxjofg"/>
-                <children xsi:type="basic:PartStack" xmi:id="_eXnDxLe6EeOxntPoYxjofg" elementId="right" containerData="2021" selectedElement="_eXnDxbe6EeOxntPoYxjofg">
+            <children xsi:type="basic:PartSashContainer" xmi:id="_JPbLQbfJEeOxntPoYxjofg" containerData="7500" selectedElement="_JPbLSLfJEeOxntPoYxjofg">
+              <children xsi:type="basic:PartSashContainer" xmi:id="_JPbLQrfJEeOxntPoYxjofg" containerData="6870" selectedElement="_JPbLQ7fJEeOxntPoYxjofg" horizontal="true">
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLQ7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.editorss" containerData="7979" ref="_JPby8rfJEeOxntPoYxjofg"/>
+                <children xsi:type="basic:PartStack" xmi:id="_JPbLRLfJEeOxntPoYxjofg" elementId="right" containerData="2021" selectedElement="_JPbLRbfJEeOxntPoYxjofg">
                   <tags>newtablook</tags>
                   <tags>org.eclipse.e4.secondaryNavigationStack</tags>
-                  <children xsi:type="advanced:Placeholder" xmi:id="_eXnDxbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline" ref="_eXnrNLe6EeOxntPoYxjofg"/>
-                  <children xsi:type="advanced:Placeholder" xmi:id="_eXnDxre6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.TemplatesView" toBeRendered="false" ref="_eXnrXbe6EeOxntPoYxjofg"/>
-                  <children xsi:type="advanced:Placeholder" xmi:id="_eXnDx7e6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.views.AntView" toBeRendered="false" ref="_eXnrX7e6EeOxntPoYxjofg"/>
+                  <children xsi:type="advanced:Placeholder" xmi:id="_JPbLRbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline" ref="_JPcZgLfJEeOxntPoYxjofg"/>
+                  <children xsi:type="advanced:Placeholder" xmi:id="_JPbLRrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.TemplatesView" toBeRendered="false" ref="_JPcZr7fJEeOxntPoYxjofg"/>
+                  <children xsi:type="advanced:Placeholder" xmi:id="_JPbLR7fJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.views.AntView" toBeRendered="false" ref="_JPcZsbfJEeOxntPoYxjofg"/>
                 </children>
               </children>
-              <children xsi:type="basic:PartStack" xmi:id="_eXnDyLe6EeOxntPoYxjofg" elementId="bottom" containerData="2072" selectedElement="_eXnDzbe6EeOxntPoYxjofg">
+              <children xsi:type="basic:PartStack" xmi:id="_JPbLSLfJEeOxntPoYxjofg" elementId="bottom" containerData="3130" selectedElement="_JPbLTbfJEeOxntPoYxjofg">
                 <tags>newtablook</tags>
                 <tags>org.eclipse.e4.secondaryDataStack</tags>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDybe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" ref="_eXnrG7e6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDyre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavadocView" ref="_eXnrH7e6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDy7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SourceView" ref="_eXnrILe6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDzLe6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.views.SearchView" toBeRendered="false" ref="_eXnrIbe6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDzbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" ref="_eXnrIre6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDzre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.BookmarkView" toBeRendered="false" ref="_eXnrMre6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnDz7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProgressView" toBeRendered="false" ref="_eXnrM7e6EeOxntPoYxjofg"/>
-                <children xsi:type="advanced:Placeholder" xmi:id="_eXnD0Le6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.DevModeView" toBeRendered="false" ref="_eXnrXre6EeOxntPoYxjofg"/>
+                <tags>active</tags>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLSbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" ref="_JPcZZrfJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLSrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavadocView" ref="_JPcZarfJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLS7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SourceView" ref="_JPcZa7fJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLTLfJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.views.SearchView" toBeRendered="false" ref="_JPcZbLfJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLTbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" ref="_JPcZbbfJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLTrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.BookmarkView" toBeRendered="false" ref="_JPcZfrfJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLT7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProgressView" toBeRendered="false" ref="_JPcZf7fJEeOxntPoYxjofg"/>
+                <children xsi:type="advanced:Placeholder" xmi:id="_JPbLULfJEeOxntPoYxjofg" elementId="com.google.gwt.eclipse.DevModeView" toBeRendered="false" ref="_JPcZsLfJEeOxntPoYxjofg"/>
               </children>
             </children>
           </children>
         </children>
       </children>
-      <children xsi:type="basic:PartStack" xmi:id="_eXnD0be6EeOxntPoYxjofg" elementId="stickyFolderRight" visible="false" containerData="2500" selectedElement="_eXnD07e6EeOxntPoYxjofg">
+      <children xsi:type="basic:PartStack" xmi:id="_JPbLUbfJEeOxntPoYxjofg" elementId="stickyFolderRight" visible="false" containerData="2500" selectedElement="_JPbLU7fJEeOxntPoYxjofg">
         <tags>Minimized</tags>
-        <children xsi:type="advanced:Placeholder" xmi:id="_eXnD0re6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.HelpView" toBeRendered="false" ref="_eXnE4Le6EeOxntPoYxjofg"/>
-        <children xsi:type="advanced:Placeholder" xmi:id="_eXnD07e6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview" ref="_eXnE4be6EeOxntPoYxjofg"/>
-        <children xsi:type="advanced:Placeholder" xmi:id="_eXnD1Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" toBeRendered="false" ref="_eXnE67e6EeOxntPoYxjofg"/>
+        <children xsi:type="advanced:Placeholder" xmi:id="_JPbLUrfJEeOxntPoYxjofg" elementId="org.eclipse.help.ui.HelpView" toBeRendered="false" ref="_JPby5rfJEeOxntPoYxjofg"/>
+        <children xsi:type="advanced:Placeholder" xmi:id="_JPbLU7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview" ref="_JPby57fJEeOxntPoYxjofg"/>
+        <children xsi:type="advanced:Placeholder" xmi:id="_JPbLVLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" toBeRendered="false" ref="_JPby8bfJEeOxntPoYxjofg"/>
       </children>
     </children>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnE4Le6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.HelpView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPby5rfJEeOxntPoYxjofg" elementId="org.eclipse.help.ui.HelpView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:Help</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnE4be6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.gif" tooltip="" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPby57fJEeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.gif" tooltip="" closeable="true">
       <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view>&#xA;&lt;presentation currentPage=&quot;root&quot; restore=&quot;true&quot;/>&#xA;&lt;standbyPart/>&#xA;&lt;/view>"/>
       <tags>View</tags>
       <tags>categoryTag:General</tags>
       <tags>activeOnClose</tags>
-      <menus xmi:id="_eXnE4re6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview">
+      <menus xmi:id="_JPby6LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview">
         <tags>ViewMenu</tags>
         <tags>menuContribution:menu</tags>
       </menus>
-      <toolbar xmi:id="_eXnE47e6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview"/>
+      <toolbar xmi:id="_JPby6bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview"/>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnE67e6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPby8bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:Help</tags>
     </sharedElements>
-    <sharedElements xsi:type="advanced:Area" xmi:id="_eXnE7Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.editorss" selectedElement="_eXnE7be6EeOxntPoYxjofg">
-      <children xsi:type="basic:PartStack" xmi:id="_eXnE7be6EeOxntPoYxjofg" elementId="org.eclipse.e4.primaryDataStack" selectedElement="_eXnE9re6EeOxntPoYxjofg">
+    <sharedElements xsi:type="advanced:Area" xmi:id="_JPby8rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.editorss" selectedElement="_JPby87fJEeOxntPoYxjofg">
+      <children xsi:type="basic:PartStack" xmi:id="_JPby87fJEeOxntPoYxjofg" elementId="org.eclipse.e4.primaryDataStack" selectedElement="_JPby_LfJEeOxntPoYxjofg">
         <tags>newtablook</tags>
         <tags>org.eclipse.e4.primaryDataStack</tags>
         <tags>EditorStack</tags>
-        <tags>active</tags>
-        <children xsi:type="basic:Part" xmi:id="_eXnE7re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="Main.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/gui/Main.java" closeable="true">
-          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/gui/Main.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;5520&quot; selectionTopPixel=&quot;0&quot;/>&#xA;&lt;/editor>"/>
+        <children xsi:type="basic:Part" xmi:id="_JPby9LfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="Main.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/gui/Main.java" closeable="true">
+          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/gui/Main.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;5578&quot; selectionTopPixel=&quot;3398&quot;/>&#xA;&lt;/editor>"/>
           <tags>Editor</tags>
           <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
           <tags>removeOnHide</tags>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE77e6EeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPby9bfJEeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#CompilationUnitEditorContext</tags>
             <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.EditorContext</tags>
             <tags>popup:#AbstractTextEditorContext</tags>
           </menus>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE8Le6EeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPby9rfJEeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#CompilationUnitRulerContext</tags>
             <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.RulerContext</tags>
             <tags>popup:#AbstractTextEditorRulerContext</tags>
           </menus>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE8be6EeOxntPoYxjofg" elementId="#OverviewRulerContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPby97fJEeOxntPoYxjofg" elementId="#OverviewRulerContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#OverviewRulerContext</tags>
           </menus>
         </children>
-        <children xsi:type="basic:Part" xmi:id="_eXnE8re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="BorrowerUser.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/users/BorrowerUser.java" closeable="true">
+        <children xsi:type="basic:Part" xmi:id="_JPby-LfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="BorrowerUser.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/users/BorrowerUser.java" closeable="true">
           <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/users/BorrowerUser.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;0&quot; selectionTopPixel=&quot;0&quot;/>&#xA;&lt;/editor>"/>
           <tags>Editor</tags>
           <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
           <tags>removeOnHide</tags>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE87e6EeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPby-bfJEeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#CompilationUnitEditorContext</tags>
             <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.EditorContext</tags>
             <tags>popup:#AbstractTextEditorContext</tags>
           </menus>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE9Le6EeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPby-rfJEeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#CompilationUnitRulerContext</tags>
             <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.RulerContext</tags>
             <tags>popup:#AbstractTextEditorRulerContext</tags>
           </menus>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE9be6EeOxntPoYxjofg" elementId="#OverviewRulerContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPby-7fJEeOxntPoYxjofg" elementId="#OverviewRulerContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#OverviewRulerContext</tags>
           </menus>
         </children>
-        <children xsi:type="basic:Part" xmi:id="_eXnE9re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="ClerkUser.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/users/ClerkUser.java" closeable="true">
-          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/users/ClerkUser.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;27&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;0&quot; selectionTopPixel=&quot;633&quot;/>&#xA;&lt;/editor>"/>
+        <children xsi:type="basic:Part" xmi:id="_JPby_LfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="ClerkUser.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/users/ClerkUser.java" closeable="true">
+          <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/users/ClerkUser.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;8599&quot; selectionTopPixel=&quot;4434&quot;/>&#xA;&lt;/editor>"/>
           <tags>Editor</tags>
           <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
           <tags>removeOnHide</tags>
-          <tags>active</tags>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE97e6EeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPby_bfJEeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#CompilationUnitEditorContext</tags>
             <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.EditorContext</tags>
             <tags>popup:#AbstractTextEditorContext</tags>
           </menus>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE-Le6EeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPby_rfJEeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#CompilationUnitRulerContext</tags>
             <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.RulerContext</tags>
             <tags>popup:#AbstractTextEditorRulerContext</tags>
           </menus>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE-be6EeOxntPoYxjofg" elementId="#OverviewRulerContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPby_7fJEeOxntPoYxjofg" elementId="#OverviewRulerContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#OverviewRulerContext</tags>
           </menus>
         </children>
-        <children xsi:type="basic:Part" xmi:id="_eXnE-re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="LibrarianUser.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/users/LibrarianUser.java" closeable="true">
+        <children xsi:type="basic:Part" xmi:id="_JPbzALfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor" label="LibrarianUser.java" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/obj16/jcu_obj.gif" tooltip="Project Part III/src/users/LibrarianUser.java" closeable="true">
           <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;editor id=&quot;org.eclipse.jdt.ui.CompilationUnitEditor&quot;>&#xA;&lt;input factoryID=&quot;org.eclipse.ui.part.FileEditorInputFactory&quot; path=&quot;/Project Part III/src/users/LibrarianUser.java&quot;/>&#xA;&lt;editorState selectionHorizontalPixel=&quot;0&quot; selectionLength=&quot;0&quot; selectionOffset=&quot;0&quot; selectionTopPixel=&quot;4238&quot;/>&#xA;&lt;/editor>"/>
           <tags>Editor</tags>
           <tags>org.eclipse.jdt.ui.CompilationUnitEditor</tags>
           <tags>removeOnHide</tags>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE-7e6EeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPbzAbfJEeOxntPoYxjofg" elementId="#CompilationUnitEditorContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#CompilationUnitEditorContext</tags>
             <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.EditorContext</tags>
             <tags>popup:#AbstractTextEditorContext</tags>
           </menus>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE_Le6EeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPbzArfJEeOxntPoYxjofg" elementId="#CompilationUnitRulerContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#CompilationUnitRulerContext</tags>
             <tags>popup:org.eclipse.jdt.ui.CompilationUnitEditor.RulerContext</tags>
             <tags>popup:#AbstractTextEditorRulerContext</tags>
           </menus>
-          <menus xsi:type="menu:PopupMenu" xmi:id="_eXnE_be6EeOxntPoYxjofg" elementId="#OverviewRulerContext">
+          <menus xsi:type="menu:PopupMenu" xmi:id="_JPbzA7fJEeOxntPoYxjofg" elementId="#OverviewRulerContext">
             <tags>menuContribution:popup</tags>
             <tags>popup:#OverviewRulerContext</tags>
           </menus>
         </children>
       </children>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnE_re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.gif" tooltip="Workspace" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPbzBLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.gif" tooltip="Workspace" closeable="true">
       <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view group_libraries=&quot;1&quot; layout=&quot;2&quot; linkWithEditor=&quot;0&quot; rootMode=&quot;1&quot; workingSetName=&quot;Aggregate for window 1395689134483&quot;>&#xA;&lt;customFilters userDefinedPatternsEnabled=&quot;false&quot;>&#xA;&lt;xmlDefinedFilters>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.LocalTypesFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.StaticsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.pde.ui.ExternalPluginLibrariesFilter1&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ClosedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonSharedProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaElementFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ContainedLibraryFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.CuAndClassFileFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonJavaProjectsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyInnerPackageFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.PackageDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.EmptyPackageFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;com.google.gdt.eclipse.managedapis.ui.ManagedApiContainerFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.ImportDeclarationFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.FieldsFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.internal.ui.PackageExplorer.HideInnerClassFilesFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.NonPublicFilter&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer_patternFilterId_.*&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.EmptyLibraryContainerFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.pde.ui.BinaryProjectFilter1&quot; isEnabled=&quot;false&quot;/>&#xA;&lt;child filterId=&quot;org.eclipse.jdt.ui.PackageExplorer.SyntheticMembersFilter&quot; isEnabled=&quot;true&quot;/>&#xA;&lt;/xmlDefinedFilters>&#xA;&lt;/customFilters>&#xA;&lt;/view>"/>
       <tags>View</tags>
       <tags>categoryTag:Java</tags>
-      <menus xmi:id="_eXnE_7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer">
+      <menus xmi:id="_JPbzBbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer">
         <tags>ViewMenu</tags>
         <tags>menuContribution:menu</tags>
       </menus>
-      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnFFbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer">
+      <menus xsi:type="menu:PopupMenu" xmi:id="_JPbzG7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer">
         <tags>menuContribution:popup</tags>
         <tags>popup:org.eclipse.jdt.ui.PackageExplorer</tags>
       </menus>
-      <toolbar xmi:id="_eXnrFLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer"/>
+      <toolbar xmi:id="_JPcZX7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer"/>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrGLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypeHierarchy" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZY7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypeHierarchy" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:Java</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrGbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ResourceNavigator" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZZLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ResourceNavigator" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:General</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrGre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigator.ProjectExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZZbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigator.ProjectExplorer" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:General</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrG7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.gif" tooltip="" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZZrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.gif" tooltip="" closeable="true">
       <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view PRIMARY_SORT_FIELD=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot; categoryGroup=&quot;org.eclipse.ui.ide.severity&quot; markerContentGenerator=&quot;org.eclipse.ui.ide.problemsGenerator&quot; partName=&quot;Problems&quot;>&#xA;&lt;expanded>&#xA;&lt;category IMemento.internal.id=&quot;Warnings (3 items)&quot;/>&#xA;&lt;category IMemento.internal.id=&quot;Errors&quot;/>&#xA;&lt;/expanded>&#xA;&lt;columnWidths org.eclipse.ui.ide.locationField=&quot;90&quot; org.eclipse.ui.ide.markerType=&quot;90&quot; org.eclipse.ui.ide.pathField=&quot;120&quot; org.eclipse.ui.ide.resourceField=&quot;90&quot; org.eclipse.ui.ide.severityAndDescriptionField=&quot;300&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.severityAndDescriptionField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.resourceField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.pathField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.locationField&quot;/>&#xA;&lt;visible IMemento.internal.id=&quot;org.eclipse.ui.ide.markerType&quot;/>&#xA;&lt;/view>"/>
       <tags>View</tags>
       <tags>categoryTag:General</tags>
-      <menus xmi:id="_eXnrHLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView">
+      <menus xmi:id="_JPcZZ7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView">
         <tags>ViewMenu</tags>
         <tags>menuContribution:menu</tags>
       </menus>
-      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrHbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView">
+      <menus xsi:type="menu:PopupMenu" xmi:id="_JPcZaLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView">
         <tags>menuContribution:popup</tags>
         <tags>popup:org.eclipse.ui.views.ProblemView</tags>
         <tags>popup:org.eclipse.ui.ide.MarkersView</tags>
       </menus>
-      <toolbar xmi:id="_eXnrHre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" visible="false"/>
+      <toolbar xmi:id="_JPcZabfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" visible="false"/>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrH7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavadocView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZarfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavadocView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:Java</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrILe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SourceView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZa7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SourceView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:Java</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrIbe6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.views.SearchView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZbLfJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.views.SearchView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:General</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrIre6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.gif" tooltip="" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZbbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.gif" tooltip="" closeable="true">
       <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view/>"/>
       <tags>View</tags>
       <tags>categoryTag:General</tags>
-      <menus xmi:id="_eXnrI7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView">
+      <tags>active</tags>
+      <menus xmi:id="_JPcZbrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView">
         <tags>ViewMenu</tags>
         <tags>menuContribution:menu</tags>
       </menus>
-      <toolbar xmi:id="_eXnrJLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView"/>
+      <menus xsi:type="menu:PopupMenu" xmi:id="_JPcZb7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.ProcessConsoleType.#ContextMenu">
+        <tags>menuContribution:popup</tags>
+        <tags>popup:org.eclipse.debug.ui.ProcessConsoleType.#ContextMenu</tags>
+      </menus>
+      <toolbar xmi:id="_JPcZcLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView"/>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrMre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.BookmarkView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZfrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.BookmarkView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:General</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrM7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProgressView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZf7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProgressView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:General</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrNLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.gif" tooltip="" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZgLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.gif" tooltip="" closeable="true">
       <persistedState key="memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xA;&lt;view/>"/>
       <tags>View</tags>
       <tags>categoryTag:General</tags>
-      <menus xmi:id="_eXnrNbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline">
+      <menus xmi:id="_JPcZgbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline">
         <tags>ViewMenu</tags>
         <tags>menuContribution:menu</tags>
       </menus>
-      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrQLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
+      <menus xsi:type="menu:PopupMenu" xmi:id="_JPcZjLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
         <tags>menuContribution:popup</tags>
         <tags>popup:org.eclipse.jdt.ui.outline</tags>
       </menus>
-      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrQbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
+      <menus xsi:type="menu:PopupMenu" xmi:id="_JPcZjbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
         <tags>menuContribution:popup</tags>
         <tags>popup:org.eclipse.jdt.ui.outline</tags>
       </menus>
-      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrQre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
+      <menus xsi:type="menu:PopupMenu" xmi:id="_JPcZjrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
         <tags>menuContribution:popup</tags>
         <tags>popup:org.eclipse.jdt.ui.outline</tags>
       </menus>
-      <menus xsi:type="menu:PopupMenu" xmi:id="_eXnrQ7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
+      <menus xsi:type="menu:PopupMenu" xmi:id="_JPcZj7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.outline">
         <tags>menuContribution:popup</tags>
         <tags>popup:org.eclipse.jdt.ui.outline</tags>
       </menus>
-      <toolbar xmi:id="_eXnrRLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline"/>
+      <toolbar xmi:id="_JPcZkLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline"/>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrXbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.TemplatesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZr7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.TemplatesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:General</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrXre6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.DevModeView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Development Mode" iconURI="platform:/plugin/com.google.gwt.eclipse.oophm/icons/gwt_oophm_16x16.png" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZsLfJEeOxntPoYxjofg" elementId="com.google.gwt.eclipse.DevModeView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Development Mode" iconURI="platform:/plugin/com.google.gwt.eclipse.oophm/icons/gwt_oophm_16x16.png" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:Google</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrX7e6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.views.AntView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZsbfJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.views.AntView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:Ant</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrYLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZsrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:Git</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrYbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.ResultView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZs7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.ResultView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:Java</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrYre6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.StructureView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZtLfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.StructureView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:WindowBuilder</tags>
     </sharedElements>
-    <sharedElements xsi:type="basic:Part" xmi:id="_eXnrY7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.PaletteView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" closeable="true">
+    <sharedElements xsi:type="basic:Part" xmi:id="_JPcZtbfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.PaletteView" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" closeable="true">
       <tags>View</tags>
       <tags>categoryTag:WindowBuilder</tags>
     </sharedElements>
-    <trimBars xmi:id="_eXnrZLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.main.toolbar">
-      <children xsi:type="menu:ToolBar" xmi:id="_eXnrZbe6EeOxntPoYxjofg" elementId="group.file" toBeRendered="false">
+    <trimBars xmi:id="_JPcZtrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.main.toolbar">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPcZt7fJEeOxntPoYxjofg" elementId="group.file" toBeRendered="false">
         <tags>toolbarSeparator</tags>
-        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXnrZre6EeOxntPoYxjofg" elementId="group.file" toBeRendered="false"/>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_JPcZuLfJEeOxntPoYxjofg" elementId="group.file" toBeRendered="false"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXnrZ7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.file">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPcZubfJEeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.file">
         <tags>Draggable</tags>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnraLe6EeOxntPoYxjofg" elementId="new.group"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrabe6EeOxntPoYxjofg" elementId="newWizardDropDown"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrare6EeOxntPoYxjofg" elementId="new.ext" visible="false"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnra7e6EeOxntPoYxjofg" elementId="save.group" visible="false"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrbLe6EeOxntPoYxjofg" elementId="save"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrbbe6EeOxntPoYxjofg" elementId="saveAll"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrbre6EeOxntPoYxjofg" elementId="save.ext" visible="false"/>
-        <children xsi:type="menu:HandledToolItem" xmi:id="_eXnrb7e6EeOxntPoYxjofg" elementId="print" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/print_edit.gif" tooltip="Print" command="_eYB6ire6EeOxntPoYxjofg"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrcLe6EeOxntPoYxjofg" elementId="print.ext" visible="false"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrcbe6EeOxntPoYxjofg" elementId="build.group"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrcre6EeOxntPoYxjofg" elementId="build.ext" visible="false"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrc7e6EeOxntPoYxjofg" elementId="additions"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXnrdLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.wizards.actions.NewDesignerTypeDropDownAction"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZurfJEeOxntPoYxjofg" elementId="new.group"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZu7fJEeOxntPoYxjofg" elementId="newWizardDropDown"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZvLfJEeOxntPoYxjofg" elementId="new.ext" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZvbfJEeOxntPoYxjofg" elementId="save.group" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZvrfJEeOxntPoYxjofg" elementId="save"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZv7fJEeOxntPoYxjofg" elementId="saveAll"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZwLfJEeOxntPoYxjofg" elementId="save.ext" visible="false"/>
+        <children xsi:type="menu:HandledToolItem" xmi:id="_JPcZwbfJEeOxntPoYxjofg" elementId="print" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/print_edit.gif" tooltip="Print" enabled="false" command="_JP33IbfJEeOxntPoYxjofg"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZwrfJEeOxntPoYxjofg" elementId="print.ext" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZw7fJEeOxntPoYxjofg" elementId="build.group"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZxLfJEeOxntPoYxjofg" elementId="build.ext" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZxbfJEeOxntPoYxjofg" elementId="additions"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZxrfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.wizards.actions.NewDesignerTypeDropDownAction"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXnrebe6EeOxntPoYxjofg" elementId="additions" toBeRendered="false">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPcZy7fJEeOxntPoYxjofg" elementId="additions" toBeRendered="false">
         <tags>toolbarSeparator</tags>
-        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXnrere6EeOxntPoYxjofg" elementId="additions" toBeRendered="false"/>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_JPcZzLfJEeOxntPoYxjofg" elementId="additions" toBeRendered="false"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR0Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.presentation">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPcZ7LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.presentation">
         <tags>Draggable</tags>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR0be6EeOxntPoYxjofg" elementId="Presentation"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR0re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleBreadcrumb"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR07e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleMarkOccurrences"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR1Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleBlockSelectionMode"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR1be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowWhitespaceCharacters"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR1re6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowSelectedElementOnly"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ7bfJEeOxntPoYxjofg" elementId="Presentation"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ7rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleBreadcrumb"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ77fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleMarkOccurrences"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ8LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleBlockSelectionMode"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ8bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowWhitespaceCharacters"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ8rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowSelectedElementOnly"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR17e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.breakpointActionSet">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPcZ87fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.breakpointActionSet">
         <tags>Draggable</tags>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR2Le6EeOxntPoYxjofg" elementId="breakpointGroup"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR2be6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.actions.SkipAllBreakpoints"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ9LfJEeOxntPoYxjofg" elementId="breakpointGroup"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ9bfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.actions.SkipAllBreakpoints"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR2re6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.launchActionSet">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPcZ9rfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.launchActionSet">
         <tags>Draggable</tags>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR27e6EeOxntPoYxjofg" elementId="debug"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR3Le6EeOxntPoYxjofg" elementId="org.eclipse.debug.internal.ui.actions.DebugDropDownAction"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR3be6EeOxntPoYxjofg" elementId="org.eclipse.debug.internal.ui.actions.RunDropDownAction"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR3re6EeOxntPoYxjofg" elementId="org.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ97fJEeOxntPoYxjofg" elementId="debug"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ-LfJEeOxntPoYxjofg" elementId="org.eclipse.debug.internal.ui.actions.DebugDropDownAction"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ-bfJEeOxntPoYxjofg" elementId="org.eclipse.debug.internal.ui.actions.RunDropDownAction"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ-rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR37e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPcZ-7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet">
         <tags>Draggable</tags>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR4Le6EeOxntPoYxjofg" elementId="JavaWizards"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR4be6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.actions.OpenProjectWizard"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR4re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.actions.OpenPackageWizard"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR47e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.actions.NewTypeDropDown"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ_LfJEeOxntPoYxjofg" elementId="JavaWizards"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ_bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.actions.OpenProjectWizard"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ_rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.actions.OpenPackageWizard"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcZ_7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.actions.NewTypeDropDown"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR5Le6EeOxntPoYxjofg" elementId="org.eclipse.search.searchActionSet">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPcaALfJEeOxntPoYxjofg" elementId="org.eclipse.search.searchActionSet">
         <tags>Draggable</tags>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR5be6EeOxntPoYxjofg" elementId="Search"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR5re6EeOxntPoYxjofg" elementId="openType"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR57e6EeOxntPoYxjofg" elementId="org.eclipse.search.OpenSearchDialogPage"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcaAbfJEeOxntPoYxjofg" elementId="Search"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcaArfJEeOxntPoYxjofg" elementId="openType"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPcaA7fJEeOxntPoYxjofg" elementId="org.eclipse.search.OpenSearchDialogPage"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR6Le6EeOxntPoYxjofg" elementId="group.nav" toBeRendered="false">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPdAYLfJEeOxntPoYxjofg" elementId="group.nav" toBeRendered="false">
         <tags>toolbarSeparator</tags>
-        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXoR6be6EeOxntPoYxjofg" elementId="group.nav" toBeRendered="false"/>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_JPdAYbfJEeOxntPoYxjofg" elementId="group.nav" toBeRendered="false"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR6re6EeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.navigate">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPdAYrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.navigate">
         <tags>Draggable</tags>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR67e6EeOxntPoYxjofg" elementId="history.group"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR7Le6EeOxntPoYxjofg" elementId="group.application" visible="false"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR7be6EeOxntPoYxjofg" elementId="backardHistory"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR7re6EeOxntPoYxjofg" elementId="forwardHistory"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR77e6EeOxntPoYxjofg" elementId="pin.group"/>
-        <children xsi:type="menu:HandledToolItem" xmi:id="_eXoR8Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.pinEditor" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/pin_editor.gif" tooltip="Pin Editor" enabled="false" command="_eX8a6be6EeOxntPoYxjofg"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR8be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoNextAnnotation"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR8re6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoPreviousAnnotation"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR87e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoLastEditPosition"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAY7fJEeOxntPoYxjofg" elementId="history.group"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAZLfJEeOxntPoYxjofg" elementId="group.application" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAZbfJEeOxntPoYxjofg" elementId="backardHistory"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAZrfJEeOxntPoYxjofg" elementId="forwardHistory"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAZ7fJEeOxntPoYxjofg" elementId="pin.group"/>
+        <children xsi:type="menu:HandledToolItem" xmi:id="_JPdAaLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.pinEditor" iconURI="platform:/plugin/org.eclipse.ui/icons/full/etool16/pin_editor.gif" tooltip="Pin Editor" enabled="false" command="_JPxwkrfJEeOxntPoYxjofg"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAabfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoNextAnnotation"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAarfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoPreviousAnnotation"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAa7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoLastEditPosition"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR9Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.CompilationUnitEditor" visible="false">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPdAbLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.CompilationUnitEditor" visible="false">
         <tags>Draggable</tags>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR9be6EeOxntPoYxjofg" elementId="group.editor" toBeRendered="false">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPdAbbfJEeOxntPoYxjofg" elementId="group.editor" toBeRendered="false">
         <tags>toolbarSeparator</tags>
-        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXoR9re6EeOxntPoYxjofg" elementId="group.editor" toBeRendered="false"/>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_JPdAbrfJEeOxntPoYxjofg" elementId="group.editor" toBeRendered="false"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR97e6EeOxntPoYxjofg" elementId="group.help" toBeRendered="false">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPdAb7fJEeOxntPoYxjofg" elementId="group.help" toBeRendered="false">
         <tags>toolbarSeparator</tags>
-        <children xsi:type="menu:ToolBarSeparator" xmi:id="_eXoR-Le6EeOxntPoYxjofg" elementId="group.help" toBeRendered="false"/>
+        <children xsi:type="menu:ToolBarSeparator" xmi:id="_JPdAcLfJEeOxntPoYxjofg" elementId="group.help" toBeRendered="false"/>
       </children>
-      <children xsi:type="menu:ToolBar" xmi:id="_eXoR-be6EeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.help" visible="false">
+      <children xsi:type="menu:ToolBar" xmi:id="_JPdAcbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.help" visible="false">
         <tags>Draggable</tags>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR-re6EeOxntPoYxjofg" elementId="group.help"/>
-        <children xsi:type="menu:OpaqueToolItem" xmi:id="_eXoR-7e6EeOxntPoYxjofg" elementId="group.application" visible="false"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAcrfJEeOxntPoYxjofg" elementId="group.help"/>
+        <children xsi:type="menu:OpaqueToolItem" xmi:id="_JPdAc7fJEeOxntPoYxjofg" elementId="group.application" visible="false"/>
       </children>
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoR_Le6EeOxntPoYxjofg" elementId="PerspectiveSpacer" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAdLfJEeOxntPoYxjofg" elementId="PerspectiveSpacer" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
         <tags>stretch</tags>
       </children>
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoR_be6EeOxntPoYxjofg" elementId="Spacer Glue" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAdbfJEeOxntPoYxjofg" elementId="Spacer Glue" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
         <tags>glue</tags>
       </children>
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoR_re6EeOxntPoYxjofg" elementId="SearchField" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.quickaccess.SearchField"/>
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoR_7e6EeOxntPoYxjofg" elementId="Search-PS Glue" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAdrfJEeOxntPoYxjofg" elementId="SearchField" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.quickaccess.SearchField"/>
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAd7fJEeOxntPoYxjofg" elementId="Search-PS Glue" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.LayoutModifierToolControl">
         <tags>glue</tags>
       </children>
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoSALe6EeOxntPoYxjofg" elementId="PerspectiveSwitcher" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.e4.ui.workbench.addons.perspectiveswitcher.PerspectiveSwitcher">
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAeLfJEeOxntPoYxjofg" elementId="PerspectiveSwitcher" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.e4.ui.workbench.addons.perspectiveswitcher.PerspectiveSwitcher">
         <tags>Draggable</tags>
       </children>
     </trimBars>
-    <trimBars xmi:id="_eXoSAbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.trim.status" side="Bottom">
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoSAre6EeOxntPoYxjofg" elementId="org.eclipse.ui.StatusLine" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
+    <trimBars xmi:id="_JPdAebfJEeOxntPoYxjofg" elementId="org.eclipse.ui.trim.status" side="Bottom">
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAerfJEeOxntPoYxjofg" elementId="org.eclipse.ui.StatusLine" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
         <tags>stretch</tags>
       </children>
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoSA7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.HeapStatus" toBeRendered="false" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim"/>
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoSBLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ProgressBar" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAe7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.HeapStatus" toBeRendered="false" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim"/>
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAfLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.ProgressBar" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.StandardTrim">
         <tags>Draggable</tags>
       </children>
     </trimBars>
-    <trimBars xmi:id="_eXoSB7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.trim.vertical1" toBeRendered="false" side="Left">
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoSCLe6EeOxntPoYxjofg" elementId="PerspectiveStack(minimized)" toBeRendered="false" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
+    <trimBars xmi:id="_JPdAf7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.trim.vertical1" toBeRendered="false" side="Left">
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAgLfJEeOxntPoYxjofg" elementId="PerspectiveStack(minimized)" toBeRendered="false" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
         <tags>TrimStack</tags>
       </children>
     </trimBars>
-    <trimBars xmi:id="_eXoSCbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.trim.vertical2" side="Right">
-      <children xsi:type="menu:ToolControl" xmi:id="_eXoSCre6EeOxntPoYxjofg" elementId="stickyFolderRight(minimized)" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
+    <trimBars xmi:id="_JPdAgbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.trim.vertical2" side="Right">
+      <children xsi:type="menu:ToolControl" xmi:id="_JPdAgrfJEeOxntPoYxjofg" elementId="stickyFolderRight(minimized)" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.TrimStack">
         <tags>TrimStack</tags>
       </children>
     </trimBars>
   </children>
-  <handlers xmi:id="_eXoSC7e6EeOxntPoYxjofg" elementId="_UW9TY_r3Ed6gmo7caOxU9g" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.ExitHandler" command="_eXz4Jbe6EeOxntPoYxjofg"/>
-  <handlers xmi:id="_eXoSDLe6EeOxntPoYxjofg" elementId="_BESTZfr3Ed6gmo7caOxU04" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.swt/org.eclipse.e4.ui.internal.workbench.swt.handlers.ShowViewHandler" command="_eX0fELe6EeOxntPoYxjofg"/>
-  <handlers xmi:id="_eXoSDbe6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveHandler" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.handlers.SaveHandler" command="_eX0fEre6EeOxntPoYxjofg"/>
-  <handlers xmi:id="_eXoSDre6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveAllHandler" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.handlers.SaveAllHandler" command="_eX0fE7e6EeOxntPoYxjofg"/>
-  <handlers xmi:id="_eXoSD7e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ArrangeWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ArrangeWindowHandler" command="_eYFk3Le6EeOxntPoYxjofg"/>
-  <handlers xmi:id="_eXoSELe6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.MinimizeWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.MinimizeWindowHandler" command="_eYFk3be6EeOxntPoYxjofg"/>
-  <handlers xmi:id="_eXoSEbe6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.FullscreenWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.FullscreenWindowHandler" command="_eYFk3re6EeOxntPoYxjofg"/>
-  <handlers xmi:id="_eXoSEre6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ZoomWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ZoomWindowHandler" command="_eYFk37e6EeOxntPoYxjofg"/>
-  <handlers xmi:id="_eXoSE7e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CloseDialogHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CloseDialogHandler" command="_eYFk4Le6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXoSFLe6EeOxntPoYxjofg" contributorURI="platform:/plugin/org.eclipse.platform" bindingContext="_eXqHTLe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXoSFbe6EeOxntPoYxjofg" elementId="_UW9TZfr3Ed6gmo7caOxU9g" contributorURI="platform:/plugin/org.eclipse.platform" keySequence="CTRL+Q" command="_eXz4Jbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSFre6EeOxntPoYxjofg" elementId="_oRr6EAFSEd-Z8rQksLwRYw" contributorURI="platform:/plugin/org.eclipse.platform" keySequence="CTRL+S" command="_eX0fEre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSF7e6EeOxntPoYxjofg" contributorURI="platform:/plugin/org.eclipse.platform" keySequence="CTRL+SHIFT+S" command="_eX0fE7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSGLe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+F2" command="_eX27a7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSGbe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+F1" command="_eX0fGbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSGre6EeOxntPoYxjofg" keySequence="CTRL+SPACE" command="_eX_eOLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSG7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+SPACE" command="_eX5-sLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSHLe6EeOxntPoYxjofg" keySequence="COMMAND+F10" command="_eX-3Mre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSHbe6EeOxntPoYxjofg" keySequence="COMMAND+Z" command="_eX1GOLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSHre6EeOxntPoYxjofg" keySequence="COMMAND+X" command="_eYAsaLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSH7e6EeOxntPoYxjofg" keySequence="COMMAND+V" command="_eX9CBLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSILe6EeOxntPoYxjofg" keySequence="SHIFT+F10" command="_eX0fNre6EeOxntPoYxjofg">
-      <tags>platform:cocoa</tags>
-    </bindings>
-    <bindings xmi:id="_eXoSIbe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+F3" command="_eYE9wbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSIre6EeOxntPoYxjofg" keySequence="COMMAND+1" command="_eX3icbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSI7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+L" command="_eX9B-7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSJLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+Z" command="_eX4wlre6EeOxntPoYxjofg">
-      <tags>platform:cocoa</tags>
-    </bindings>
-    <bindings xmi:id="_eXoSJbe6EeOxntPoYxjofg" keySequence="COMMAND+C" command="_eX-QKbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSJre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+I" command="_eX8a7Le6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSJ7e6EeOxntPoYxjofg" keySequence="COMMAND+A" command="_eX-QJbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSKLe6EeOxntPoYxjofg" keySequence="ALT+PAGE_UP" command="_eX_eNLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSKbe6EeOxntPoYxjofg" keySequence="ALT+PAGE_DOWN" command="_eX4JfLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSKre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+D" command="_eX4wkre6EeOxntPoYxjofg"/>
+  <handlers xmi:id="_JPdAg7fJEeOxntPoYxjofg" elementId="_UW9TY_r3Ed6gmo7caOxU9g" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.ExitHandler" command="_JPpNwbfJEeOxntPoYxjofg"/>
+  <handlers xmi:id="_JPdAhLfJEeOxntPoYxjofg" elementId="_BESTZfr3Ed6gmo7caOxU04" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.swt/org.eclipse.e4.ui.internal.workbench.swt.handlers.ShowViewHandler" command="_JPpNwrfJEeOxntPoYxjofg"/>
+  <handlers xmi:id="_JPdAhbfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveHandler" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.handlers.SaveHandler" command="_JPp0sbfJEeOxntPoYxjofg"/>
+  <handlers xmi:id="_JPdAhrfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveAllHandler" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.handlers.SaveAllHandler" command="_JPp0srfJEeOxntPoYxjofg"/>
+  <handlers xmi:id="_JPdAh7fJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ArrangeWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ArrangeWindowHandler" command="_JP66e7fJEeOxntPoYxjofg"/>
+  <handlers xmi:id="_JPdAiLfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.MinimizeWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.MinimizeWindowHandler" command="_JP66fLfJEeOxntPoYxjofg"/>
+  <handlers xmi:id="_JPdAibfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.FullscreenWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.FullscreenWindowHandler" command="_JP66fbfJEeOxntPoYxjofg"/>
+  <handlers xmi:id="_JPdAirfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ZoomWindowHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.ZoomWindowHandler" command="_JP66frfJEeOxntPoYxjofg"/>
+  <handlers xmi:id="_JPdAi7fJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CloseDialogHandler" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CloseDialogHandler" command="_JP66f7fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPdAjLfJEeOxntPoYxjofg" contributorURI="platform:/plugin/org.eclipse.platform" bindingContext="_JPfctLfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPdAjbfJEeOxntPoYxjofg" elementId="_UW9TZfr3Ed6gmo7caOxU9g" contributorURI="platform:/plugin/org.eclipse.platform" keySequence="CTRL+Q" command="_JPpNwbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAjrfJEeOxntPoYxjofg" elementId="_oRr6EAFSEd-Z8rQksLwRYw" contributorURI="platform:/plugin/org.eclipse.platform" keySequence="CTRL+S" command="_JPp0sbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAj7fJEeOxntPoYxjofg" contributorURI="platform:/plugin/org.eclipse.platform" keySequence="CTRL+SHIFT+S" command="_JPp0srfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAkLfJEeOxntPoYxjofg" keySequence="ALT+SHIFT+F2" command="_JPsRDrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAkbfJEeOxntPoYxjofg" keySequence="ALT+SHIFT+F1" command="_JPp0uLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAkrfJEeOxntPoYxjofg" keySequence="CTRL+SPACE" command="_JP0z37fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAk7fJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+SPACE" command="_JPvUVrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAlLfJEeOxntPoYxjofg" keySequence="COMMAND+F10" command="_JP0M27fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAlbfJEeOxntPoYxjofg" keySequence="COMMAND+Z" command="_JPqb2bfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAlrfJEeOxntPoYxjofg" keySequence="COMMAND+X" command="_JP2pArfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAl7fJEeOxntPoYxjofg" keySequence="COMMAND+V" command="_JPyXrbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAmLfJEeOxntPoYxjofg" keySequence="SHIFT+F10" command="_JPqbwLfJEeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_JPdAmbfJEeOxntPoYxjofg" keySequence="ALT+SHIFT+F3" command="_JP6TZLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAmrfJEeOxntPoYxjofg" keySequence="COMMAND+1" command="_JPs4ErfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAm7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+L" command="_JPyXpLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAnLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+Z" command="_JPuGOLfJEeOxntPoYxjofg">
+      <tags>platform:cocoa</tags>
+    </bindings>
+    <bindings xmi:id="_JPdAnbfJEeOxntPoYxjofg" keySequence="COMMAND+C" command="_JP0MxLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAnrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+I" command="_JPxwlbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAn7fJEeOxntPoYxjofg" keySequence="COMMAND+A" command="_JP0MwLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAoLfJEeOxntPoYxjofg" keySequence="ALT+PAGE_UP" command="_JP0z27fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAobfJEeOxntPoYxjofg" keySequence="ALT+PAGE_DOWN" command="_JPtfHrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAorfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+D" command="_JPuGNLfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXoSK7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.window" bindingContext="_eXqHTbe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXoSLLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_MULTIPLY" command="_eX7z6be6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSLbe6EeOxntPoYxjofg" keySequence="COMMAND+E" command="_eX9CALe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSLre6EeOxntPoYxjofg" keySequence="ALT+SHIFT+D R" command="_eYChl7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSL7e6EeOxntPoYxjofg" keySequence="COMMAND+]" command="_eX4wmre6EeOxntPoYxjofg">
+  <bindingTables xmi:id="_JPdAo7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.window" bindingContext="_JPfctbfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPdApLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_MULTIPLY" command="_JPxwgrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdApbfJEeOxntPoYxjofg" keySequence="COMMAND+E" command="_JPyXqbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAprfJEeOxntPoYxjofg" keySequence="ALT+SHIFT+D R" command="_JP33ObfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAp7fJEeOxntPoYxjofg" keySequence="COMMAND+]" command="_JPuGPLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSMLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_LEFT" command="_eYAsUre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdAqLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_LEFT" command="_JP2B-bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSMbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+C" command="_eX5Xpbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdAqbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+C" command="_JPutSrfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSMre6EeOxntPoYxjofg" keySequence="ALT+CTRL+SHIFT+X" command="_eX7z7be6EeOxntPoYxjofg">
-      <parameters xmi:id="_eXoSM7e6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer.param1" name="com.google.gwt.eclipse.oophm.logSniffer.param1" value="CMD_CLEAR"/>
+    <bindings xmi:id="_JPdAqrfJEeOxntPoYxjofg" keySequence="ALT+CTRL+SHIFT+X" command="_JPxwhrfJEeOxntPoYxjofg">
+      <parameters xmi:id="_JPdAq7fJEeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer.param1" name="com.google.gwt.eclipse.oophm.logSniffer.param1" value="CMD_CLEAR"/>
     </bindings>
-    <bindings xmi:id="_eXoSNLe6EeOxntPoYxjofg" keySequence="ALT+CTRL+SHIFT+Z" command="_eX7z7be6EeOxntPoYxjofg">
-      <parameters xmi:id="_eXoSNbe6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer.param1" name="com.google.gwt.eclipse.oophm.logSniffer.param1" value="CMD_DUMP"/>
+    <bindings xmi:id="_JPdArLfJEeOxntPoYxjofg" keySequence="ALT+CTRL+SHIFT+Z" command="_JPxwhrfJEeOxntPoYxjofg">
+      <parameters xmi:id="_JPdArbfJEeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer.param1" name="com.google.gwt.eclipse.oophm.logSniffer.param1" value="CMD_DUMP"/>
     </bindings>
-    <bindings xmi:id="_eXoSNre6EeOxntPoYxjofg" keySequence="F2" command="_eX-QFbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSN7e6EeOxntPoYxjofg" keySequence="CTRL+Q" command="_eX4wgre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSOLe6EeOxntPoYxjofg" keySequence="COMMAND+G" command="_eX1tUre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSObe6EeOxntPoYxjofg" keySequence="SHIFT+F2" command="_eYDIo7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSOre6EeOxntPoYxjofg" keySequence="F3" command="_eX4Jere6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSO7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+N" command="_eX7z3Le6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSPLe6EeOxntPoYxjofg" keySequence="SHIFT+F5" command="_eX9pAre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSPbe6EeOxntPoYxjofg" keySequence="COMMAND+U" command="_eYFk27e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSPre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+SHIFT+M" command="_eX9pE7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSP7e6EeOxntPoYxjofg" keySequence="COMMAND+N" command="_eX2UT7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSQLe6EeOxntPoYxjofg" keySequence="COMMAND+W" command="_eX2UTre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSQbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+W" command="_eYEWyLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSQre6EeOxntPoYxjofg" keySequence="COMMAND+S" command="_eYAFTre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSQ7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+S" command="_eX2UYre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSRLe6EeOxntPoYxjofg" keySequence="COMMAND+P" command="_eYB6ire6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSRbe6EeOxntPoYxjofg" keySequence="ALT+CR" command="_eX5Xnre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSRre6EeOxntPoYxjofg" keySequence="F5" command="_eX9pDbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSR7e6EeOxntPoYxjofg" keySequence="DEL" command="_eX1GJbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSSLe6EeOxntPoYxjofg" keySequence="COMMAND+F" command="_eX4JdLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSSbe6EeOxntPoYxjofg" keySequence="COMMAND+." command="_eX1tTLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSSre6EeOxntPoYxjofg" keySequence="COMMAND+F6" command="_eX1tNre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSS7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Z" command="_eX0fKre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdArrfJEeOxntPoYxjofg" keySequence="F2" command="_JPzlvbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAr7fJEeOxntPoYxjofg" keySequence="CTRL+Q" command="_JPuGJLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAsLfJEeOxntPoYxjofg" keySequence="COMMAND+G" command="_JPrp4bfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAsbfJEeOxntPoYxjofg" keySequence="SHIFT+F2" command="_JP4eRbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAsrfJEeOxntPoYxjofg" keySequence="F3" command="_JPtfHLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAs7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+N" command="_JPxJgrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAtLfJEeOxntPoYxjofg" keySequence="SHIFT+F5" command="_JPy-qrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAtbfJEeOxntPoYxjofg" keySequence="COMMAND+U" command="_JP66erfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAtrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+SHIFT+M" command="_JPy-u7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAt7fJEeOxntPoYxjofg" keySequence="COMMAND+N" command="_JPrp87fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAuLfJEeOxntPoYxjofg" keySequence="COMMAND+W" command="_JPrp8rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAubfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+W" command="_JP6TYbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAurfJEeOxntPoYxjofg" keySequence="COMMAND+S" command="_JP1a9bfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAu7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+S" command="_JPsQ8rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAvLfJEeOxntPoYxjofg" keySequence="COMMAND+P" command="_JP33IbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAvbfJEeOxntPoYxjofg" keySequence="ALT+CR" command="_JPutQ7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAvrfJEeOxntPoYxjofg" keySequence="F5" command="_JPy-tbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAv7fJEeOxntPoYxjofg" keySequence="DEL" command="_JPqbxrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAwLfJEeOxntPoYxjofg" keySequence="COMMAND+F" command="_JPtfFrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAwbfJEeOxntPoYxjofg" keySequence="COMMAND+." command="_JPrC7rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAwrfJEeOxntPoYxjofg" keySequence="COMMAND+F6" command="_JPrC2LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAw7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Z" command="_JPp0ybfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSTLe6EeOxntPoYxjofg" keySequence="CTRL+M" command="_eX27Wre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdAxLfJEeOxntPoYxjofg" keySequence="CTRL+M" command="_JPsQ_bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSTbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+3" command="_eYBTbLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdAxbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+3" command="_JP2pD7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSTre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+N" command="_eX1GNbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdAxrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+N" command="_JPqb1rfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoST7e6EeOxntPoYxjofg" keySequence="COMMAND+3" command="_eYE9w7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSULe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+R" command="_eX2UXbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSUbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_DIVIDE" command="_eX4wiLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSUre6EeOxntPoYxjofg" keySequence="ALT+SHIFT+F7" command="_eX-3KLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSU7e6EeOxntPoYxjofg" keySequence="ALT+F7" command="_eYAFXLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSVLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F8" command="_eX3iZbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSVbe6EeOxntPoYxjofg" keySequence="COMMAND+F8" command="_eYFk0be6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSVre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F7" command="_eX27b7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSV7e6EeOxntPoYxjofg" keySequence="COMMAND+F7" command="_eX5XnLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSWLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F6" command="_eX-3OLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSWbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+O" command="_eX4Jh7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSWre6EeOxntPoYxjofg" keySequence="COMMAND+I" command="_eX5Xnre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdAx7fJEeOxntPoYxjofg" keySequence="COMMAND+3" command="_JP6TZrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAyLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+R" command="_JPrqAbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAybfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_DIVIDE" command="_JPuGKrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAyrfJEeOxntPoYxjofg" keySequence="ALT+SHIFT+F7" command="_JP0M0bfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAy7fJEeOxntPoYxjofg" keySequence="ALT+F7" command="_JP2B9rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAzLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F8" command="_JPs4BrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAzbfJEeOxntPoYxjofg" keySequence="COMMAND+F8" command="_JP66cLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAzrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F7" command="_JPsRErfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdAz7fJEeOxntPoYxjofg" keySequence="COMMAND+F7" command="_JPutQbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdA0LfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F6" command="_JP0z1LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdA0bfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+O" command="_JPtfKbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdA0rfJEeOxntPoYxjofg" keySequence="COMMAND+I" command="_JPutQ7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSW7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+T" command="_eX3iY7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSXLe6EeOxntPoYxjofg" keySequence="F4" command="_eYAFVLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSXbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+U" command="_eX8a9be6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSXre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_eX4Jcbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdA07fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+T" command="_JPs4BLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdA1LfJEeOxntPoYxjofg" keySequence="F4" command="_JP1a-7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdA1bfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+U" command="_JPyXkLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdA1rfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_JPtfE7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSX7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+T" command="_eX4wobe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdA17fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+T" command="_JPutNLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSYLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+V" command="_eX9pELe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdA2LfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+V" command="_JPy-uLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSYbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+L" command="_eYDvpre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdA2bfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+L" command="_JP5FSbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSYre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+M" command="_eYDvsLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdA2rfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+M" command="_JP5FU7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSY7e6EeOxntPoYxjofg" keySequence="COMMAND+F12" command="_eX4Jhre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdncLfJEeOxntPoYxjofg" keySequence="COMMAND+F12" command="_JPtfKLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSZLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F10" command="_eX3id7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdncbfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F10" command="_JPs4GLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSZbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+." command="_eX1GMLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdncrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+." command="_JPqb0bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSZre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F11" command="_eX4wnre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnc7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F11" command="_JPutMbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSZ7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+S" command="_eX9CB7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdndLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+S" command="_JPy-obfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSaLe6EeOxntPoYxjofg" keySequence="COMMAND+F11" command="_eX1GObe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdndbfJEeOxntPoYxjofg" keySequence="COMMAND+F11" command="_JPqb2rfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSabe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+W" command="_eX-QEbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdndrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+W" command="_JPzlubfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSare6EeOxntPoYxjofg" keySequence="COMMAND+[" command="_eYAsUre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnd7fJEeOxntPoYxjofg" keySequence="COMMAND+[" command="_JP2B-bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSa7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+I" command="_eX2UUbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdneLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+I" command="_JPrp9bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSbLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+H" command="_eX0fHbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSbbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D Q" command="_eYB6eLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnebfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+H" command="_JPp0vLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnerfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D Q" command="_JP3QG7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSbre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D P" command="_eYEWtbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdne7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D P" command="_JP5sWLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSb7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D O" command="_eX9CBre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnfLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D O" command="_JPy-oLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoScLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D E" command="_eX27Ure6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnfbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D E" command="_JPsQ9bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoScbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D J" command="_eYDvpbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnfrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D J" command="_JP5FSLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoScre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D T" command="_eX_eS7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnf7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D T" command="_JP1a5rfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSc7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D A" command="_eX5Xkre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdngLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+CTRL+D A" command="_JPutN7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSdLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_RIGHT" command="_eX4wmre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdngbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_RIGHT" command="_JPuGPLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSdbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+SHIFT+A" command="_eX8a_Le6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSdre6EeOxntPoYxjofg" keySequence="CTRL+H" command="_eYChlbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXoSd7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+J" command="_eYFk1re6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdngrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+SHIFT+A" command="_JPyXl7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdng7fJEeOxntPoYxjofg" keySequence="CTRL+H" command="_JP33N7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnhLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+J" command="_JP66dbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXoSeLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_eX4Jfbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo44Le6EeOxntPoYxjofg" keySequence="ALT+COMMAND+G" command="_eX9B_be6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo44be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q P" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnhbfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_JPtfH7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnhrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+G" command="_JPyXprfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnh7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q P" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo44re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.PackageExplorer"/>
+      <parameters xmi:id="_JPdniLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.PackageExplorer"/>
     </bindings>
-    <bindings xmi:id="_eXo447e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q D" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnibfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q D" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo45Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.SourceView"/>
+      <parameters xmi:id="_JPdnirfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.SourceView"/>
     </bindings>
-    <bindings xmi:id="_eXo45be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X A" command="_eYE90Le6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdni7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+X A" command="_JP6Tc7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo45re6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X J" command="_eYChi7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnjLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+X J" command="_JP33LbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo457e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q S" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnjbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q S" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo46Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.search.ui.views.SearchView"/>
+      <parameters xmi:id="_JPdnjrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.search.ui.views.SearchView"/>
     </bindings>
-    <bindings xmi:id="_eXo46be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q J" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnj7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q J" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo46re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.JavadocView"/>
+      <parameters xmi:id="_JPdnkLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.JavadocView"/>
     </bindings>
-    <bindings xmi:id="_eXo467e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q T" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnkbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q T" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo47Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.TypeHierarchy"/>
+      <parameters xmi:id="_JPdnkrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.jdt.ui.TypeHierarchy"/>
     </bindings>
-    <bindings xmi:id="_eXo47be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q Z" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnk7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q Z" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo47re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.ui.GenericHistoryView"/>
+      <parameters xmi:id="_JPdnlLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.ui.GenericHistoryView"/>
     </bindings>
-    <bindings xmi:id="_eXo477e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q H" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnlbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q H" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo48Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.cheatsheets.views.CheatSheetView"/>
+      <parameters xmi:id="_JPdnlrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.cheatsheets.views.CheatSheetView"/>
     </bindings>
-    <bindings xmi:id="_eXo48be6EeOxntPoYxjofg" keySequence="ALT+SHIFT+X R" command="_eYBTebe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo48re6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X P" command="_eYChkLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnl7fJEeOxntPoYxjofg" keySequence="ALT+SHIFT+X R" command="_JP3QELfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnmLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+X P" command="_JP33MrfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo487e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q O" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnmbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q O" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo49Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ContentOutline"/>
+      <parameters xmi:id="_JPdnmrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ContentOutline"/>
     </bindings>
-    <bindings xmi:id="_eXo49be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q C" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnm7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q C" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo49re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.console.ConsoleView"/>
+      <parameters xmi:id="_JPdnnLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.console.ConsoleView"/>
     </bindings>
-    <bindings xmi:id="_eXo497e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X E" command="_eYE9ybe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnnbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+X E" command="_JP6TbLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo4-Le6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q Q" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnnrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q Q" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo4-be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q V" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnn7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q V" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo4-re6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.VariableView"/>
+      <parameters xmi:id="_JPdnoLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.VariableView"/>
     </bindings>
-    <bindings xmi:id="_eXo4-7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X O" command="_eX27Xbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnobfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+X O" command="_JPsRALfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo4_Le6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X T" command="_eX5Xnbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnorfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+X T" command="_JPutQrfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo4_be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+X Q" command="_eYAsVre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdno7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+X Q" command="_JP2B_bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo4_re6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q L" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnpLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q L" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo4_7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.pde.runtime.LogView"/>
+      <parameters xmi:id="_JPdnpbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.pde.runtime.LogView"/>
     </bindings>
-    <bindings xmi:id="_eXo5ALe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q X" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnprfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q X" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo5Abe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ProblemView"/>
+      <parameters xmi:id="_JPdnp7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.ui.views.ProblemView"/>
     </bindings>
-    <bindings xmi:id="_eXo5Are6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q Y" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnqLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q Y" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo5A7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.sync.views.SynchronizeView"/>
+      <parameters xmi:id="_JPdnqbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.team.sync.views.SynchronizeView"/>
     </bindings>
-    <bindings xmi:id="_eXo5BLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q B" command="_eX7Mw7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnqrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q B" command="_JPwiabfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
-      <parameters xmi:id="_eXo5Bbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.BreakpointView"/>
+      <parameters xmi:id="_JPdnq7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="org.eclipse.ui.views.showView.viewId" value="org.eclipse.debug.ui.BreakpointView"/>
     </bindings>
-    <bindings xmi:id="_eXo5Bre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+B" command="_eX4Jj7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5B7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+E" command="_eX27bre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5CLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+G" command="_eX1GLre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Cbe6EeOxntPoYxjofg" keySequence="COMMAND+B" command="_eX7z6Le6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Cre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+F" command="_eYE9yLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnrLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+B" command="_JPuGILfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnrbfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+E" command="_JPsREbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnrrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+G" command="_JPqbz7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnr7fJEeOxntPoYxjofg" keySequence="COMMAND+B" command="_JPxwgbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnsLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+F" command="_JP6Ta7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5C7e6EeOxntPoYxjofg" keySequence="ALT+CTRL+H" command="_eX1GMre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5DLe6EeOxntPoYxjofg" keySequence="COMMAND+CTRL+F" command="_eYFk3re6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnsbfJEeOxntPoYxjofg" keySequence="ALT+CTRL+H" command="_JPqb07fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnsrfJEeOxntPoYxjofg" keySequence="COMMAND+CTRL+F" command="_JP66fbfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXo5Dbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.textEditorScope" bindingContext="_eXqHWLe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXo5Dre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_MULTIPLY" command="_eX8a87e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5D7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+J" command="_eYBTcre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5ELe6EeOxntPoYxjofg" keySequence="CTRL+ARROW_UP" command="_eYB6iLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Ebe6EeOxntPoYxjofg" keySequence="ALT+ARROW_LEFT" command="_eX1GQLe6EeOxntPoYxjofg">
+  <bindingTables xmi:id="_JPdns7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.textEditorScope" bindingContext="_JPfcwLfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPdntLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_MULTIPLY" command="_JPxwnLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdntbfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+J" command="_JP2pFbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdntrfJEeOxntPoYxjofg" keySequence="CTRL+ARROW_UP" command="_JP3QK7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnt7fJEeOxntPoYxjofg" keySequence="ALT+ARROW_LEFT" command="_JPqb4bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Ere6EeOxntPoYxjofg" keySequence="ALT+ARROW_DOWN" command="_eYBTYLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5E7e6EeOxntPoYxjofg" keySequence="CTRL+ARROW_DOWN" command="_eYB6hLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5FLe6EeOxntPoYxjofg" keySequence="ALT+ARROW_RIGHT" command="_eYDIlLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnuLfJEeOxntPoYxjofg" keySequence="ALT+ARROW_DOWN" command="_JP2pA7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnubfJEeOxntPoYxjofg" keySequence="CTRL+ARROW_DOWN" command="_JP3QJ7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnurfJEeOxntPoYxjofg" keySequence="ALT+ARROW_RIGHT" command="_JP4eNrfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Fbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+DEL" command="_eX1tNbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Fre6EeOxntPoYxjofg" keySequence="SHIFT+F12" command="_eX3igbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5F7e6EeOxntPoYxjofg" keySequence="F12" command="_eYDIk7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5GLe6EeOxntPoYxjofg" keySequence="F2" command="_eX9B8re6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Gbe6EeOxntPoYxjofg" keySequence="COMMAND+HOME" command="_eYChk7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Gre6EeOxntPoYxjofg" keySequence="COMMAND+END" command="_eX1GI7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5G7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+Y" command="_eYAsWbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5HLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+X" command="_eX5-s7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Hbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+CR" command="_eX0fJLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Hre6EeOxntPoYxjofg" keySequence="SHIFT+CR" command="_eX_eNbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5H7e6EeOxntPoYxjofg" keySequence="COMMAND+F10" command="_eYAFVre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5ILe6EeOxntPoYxjofg" keySequence="INSERT" command="_eX9B9be6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Ibe6EeOxntPoYxjofg" keySequence="COMMAND+L" command="_eYBTZre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Ire6EeOxntPoYxjofg" keySequence="COMMAND+J" command="_eX-3Nbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5I7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+K" command="_eX7Mwbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5JLe6EeOxntPoYxjofg" keySequence="COMMAND+K" command="_eYEWsLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Jbe6EeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_SUBTRACT" command="_eX5Xl7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Jre6EeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_ADD" command="_eX3iZre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5J7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_DIVIDE" command="_eX-3Ore6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5KLe6EeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_MULTIPLY" command="_eX_eObe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Kbe6EeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_DIVIDE" command="_eX4wire6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Kre6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+Q" command="_eX4Jd7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5K7e6EeOxntPoYxjofg" keySequence="END" command="_eX1GI7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdnu7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+DEL" command="_JPrC17fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnvLfJEeOxntPoYxjofg" keySequence="SHIFT+F12" command="_JPtfELfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnvbfJEeOxntPoYxjofg" keySequence="F12" command="_JP4eNbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnvrfJEeOxntPoYxjofg" keySequence="F2" command="_JPyXm7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnv7fJEeOxntPoYxjofg" keySequence="COMMAND+HOME" command="_JP33NbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnwLfJEeOxntPoYxjofg" keySequence="COMMAND+END" command="_JPqbxLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnwbfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+Y" command="_JP2CALfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnwrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+X" command="_JPvUWbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnw7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+CR" command="_JPp0w7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnxLfJEeOxntPoYxjofg" keySequence="SHIFT+CR" command="_JP0z3LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnxbfJEeOxntPoYxjofg" keySequence="COMMAND+F10" command="_JP2B8LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnxrfJEeOxntPoYxjofg" keySequence="INSERT" command="_JPyXnrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnx7fJEeOxntPoYxjofg" keySequence="COMMAND+L" command="_JP2pCbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnyLfJEeOxntPoYxjofg" keySequence="COMMAND+J" command="_JP0z0bfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnybfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+K" command="_JPwiZ7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnyrfJEeOxntPoYxjofg" keySequence="COMMAND+K" command="_JP5sU7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdny7fJEeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_SUBTRACT" command="_JPutPLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnzLfJEeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_ADD" command="_JPs4B7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnzbfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+NUMPAD_DIVIDE" command="_JP0z1rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnzrfJEeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_MULTIPLY" command="_JP0z4LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdnz7fJEeOxntPoYxjofg" keySequence="COMMAND+NUMPAD_DIVIDE" command="_JPuGLLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdn0LfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+Q" command="_JPtfGbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdn0bfJEeOxntPoYxjofg" keySequence="END" command="_JPqbxLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5LLe6EeOxntPoYxjofg" keySequence="CTRL+." command="_eYFk07e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdn0rfJEeOxntPoYxjofg" keySequence="CTRL+." command="_JP66crfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Lbe6EeOxntPoYxjofg" keySequence="HOME" command="_eYChk7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdn07fJEeOxntPoYxjofg" keySequence="HOME" command="_JP33NbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Lre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_LEFT" command="_eYBTb7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdn1LfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_LEFT" command="_JP2pErfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5L7e6EeOxntPoYxjofg" keySequence="SHIFT+END" command="_eX27VLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdn1bfJEeOxntPoYxjofg" keySequence="SHIFT+END" command="_JPsQ97fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5MLe6EeOxntPoYxjofg" keySequence="COMMAND+ARROW_LEFT" command="_eYAFSre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdn1rfJEeOxntPoYxjofg" keySequence="COMMAND+ARROW_LEFT" command="_JP1a8bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Mbe6EeOxntPoYxjofg" keySequence="ALT+ARROW_UP" command="_eX5Xobe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Mre6EeOxntPoYxjofg" keySequence="COMMAND+D" command="_eX27Vbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5M7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+INSERT" command="_eX4Jebe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5NLe6EeOxntPoYxjofg" keySequence="COMMAND+ARROW_RIGHT" command="_eX7Mz7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdn17fJEeOxntPoYxjofg" keySequence="ALT+ARROW_UP" command="_JPutRrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdn2LfJEeOxntPoYxjofg" keySequence="COMMAND+D" command="_JPsQ-LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdn2bfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+INSERT" command="_JPtfG7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPdn2rfJEeOxntPoYxjofg" keySequence="COMMAND+ARROW_RIGHT" command="_JPwidbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Nbe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_RIGHT" command="_eYE9wLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPdn27fJEeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_RIGHT" command="_JP6TY7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Nre6EeOxntPoYxjofg" keySequence="ALT+DEL" command="_eX1GN7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOgLfJEeOxntPoYxjofg" keySequence="ALT+DEL" command="_JPqb2LfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5N7e6EeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_LEFT" command="_eX4Jc7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOgbfJEeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_LEFT" command="_JPtfFbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5OLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+A" command="_eYAFT7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOgrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+A" command="_JP1a9rfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Obe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_UP" command="_eX4wn7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Ore6EeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_DOWN" command="_eX5Xpre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5O7e6EeOxntPoYxjofg" keySequence="ALT+BS" command="_eX1tPre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOg7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_UP" command="_JPutMrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOhLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+ARROW_DOWN" command="_JPutS7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOhbfJEeOxntPoYxjofg" keySequence="ALT+BS" command="_JPrC4LfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5PLe6EeOxntPoYxjofg" keySequence="SHIFT+HOME" command="_eX0fHLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOhrfJEeOxntPoYxjofg" keySequence="SHIFT+HOME" command="_JPp0u7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Pbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_RIGHT" command="_eX0fIbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOh7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_RIGHT" command="_JPp0wLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
   </bindingTables>
-  <bindingTables xmi:id="_eXo5Pre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.javaEditorScope" bindingContext="_eXquHre6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXo5P7e6EeOxntPoYxjofg" keySequence="COMMAND+CTRL+\" command="_eYE9yre6EeOxntPoYxjofg">
+  <bindingTables xmi:id="_JPeOiLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.javaEditorScope" bindingContext="_JPfc1bfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOibfJEeOxntPoYxjofg" keySequence="COMMAND+CTRL+\" command="_JP6TbbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5QLe6EeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_UP" command="_eX3idLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOirfJEeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_UP" command="_JPs4FbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Qbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+\" command="_eYE9yre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Qre6EeOxntPoYxjofg" keySequence="COMMAND+O" command="_eX1tTbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Q7e6EeOxntPoYxjofg" keySequence="COMMAND+T" command="_eX-3K7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5RLe6EeOxntPoYxjofg" keySequence="COMMAND+/" command="_eX0fL7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Rbe6EeOxntPoYxjofg" keySequence="COMMAND+7" command="_eX0fL7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Rre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+U" command="_eX5Xqbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOi7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+\" command="_JP6TbbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOjLfJEeOxntPoYxjofg" keySequence="COMMAND+O" command="_JPrC77fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOjbfJEeOxntPoYxjofg" keySequence="COMMAND+T" command="_JP0M1LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOjrfJEeOxntPoYxjofg" keySequence="COMMAND+/" command="_JPp0zrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOj7fJEeOxntPoYxjofg" keySequence="COMMAND+7" command="_JPp0zrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOkLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+U" command="_JPutTrfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5R7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+M" command="_eYChgre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5SLe6EeOxntPoYxjofg" keySequence="COMMAND+I" command="_eX-3Jbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Sbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+P" command="_eX27YLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Sre6EeOxntPoYxjofg" keySequence="COMMAND+F3" command="_eYAFSLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5S7e6EeOxntPoYxjofg" keySequence="COMMAND+CTRL+/" command="_eX8a7re6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOkbfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+M" command="_JP33JLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOkrfJEeOxntPoYxjofg" keySequence="COMMAND+I" command="_JP0MzrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOk7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+P" command="_JPsRA7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOlLfJEeOxntPoYxjofg" keySequence="COMMAND+F3" command="_JP1a77fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOlbfJEeOxntPoYxjofg" keySequence="COMMAND+CTRL+/" command="_JPxwl7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5TLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+O" command="_eX0fGLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOlrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+O" command="_JPp0t7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Tbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_eX0fL7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Tre6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_UP" command="_eYAsWLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOl7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_JPp0zrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOmLfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_UP" command="_JP2B_7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5T7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_eYDvqbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOmbfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_JP5FTLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5ULe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eX4wkbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Ube6EeOxntPoYxjofg" keySequence="COMMAND+2 R" command="_eX1GPre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5Ure6EeOxntPoYxjofg" keySequence="COMMAND+2 L" command="_eX27Ube6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5U7e6EeOxntPoYxjofg" keySequence="COMMAND+2 F" command="_eX5XpLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXo5VLe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_eX-QIbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOmrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_JPuGM7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOm7fJEeOxntPoYxjofg" keySequence="COMMAND+2 R" command="_JPqb37fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOnLfJEeOxntPoYxjofg" keySequence="COMMAND+2 L" command="_JPsQ9LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOnbfJEeOxntPoYxjofg" keySequence="COMMAND+2 F" command="_JPutSbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOnrfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_JPzlybfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXo5Vbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+B" command="_eYB6gre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOn7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+B" command="_JP3QJbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpf8Le6EeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_DOWN" command="_eYE9xbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOoLfJEeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_DOWN" command="_JP6TaLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpf8be6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_eX7Mzre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOobfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_JPwidLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
   </bindingTables>
-  <bindingTables xmi:id="_eXpf8re6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javaEditorScope" bindingContext="_eXquHLe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpf87e6EeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_UP" command="_eX27Vre6EeOxntPoYxjofg">
+  <bindingTables xmi:id="_JPeOorfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javaEditorScope" bindingContext="_JPfc07fJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOo7fJEeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_UP" command="_JPsQ-bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpf9Le6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+\" command="_eX27ULe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf9be6EeOxntPoYxjofg" keySequence="COMMAND+O" command="_eYEWt7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf9re6EeOxntPoYxjofg" keySequence="COMMAND+T" command="_eYDvtLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf97e6EeOxntPoYxjofg" keySequence="COMMAND+/" command="_eYChm7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf-Le6EeOxntPoYxjofg" keySequence="COMMAND+7" command="_eYChm7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf-be6EeOxntPoYxjofg" keySequence="ALT+COMMAND+U" command="_eX0fNbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOpLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+\" command="_JPsQ87fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOpbfJEeOxntPoYxjofg" keySequence="COMMAND+O" command="_JP5sWrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOprfJEeOxntPoYxjofg" keySequence="COMMAND+T" command="_JP5FV7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOp7fJEeOxntPoYxjofg" keySequence="COMMAND+/" command="_JP4eMbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOqLfJEeOxntPoYxjofg" keySequence="COMMAND+7" command="_JP4eMbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOqbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+U" command="_JPp01LfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpf-re6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+M" command="_eX8a77e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf-7e6EeOxntPoYxjofg" keySequence="COMMAND+I" command="_eX1tP7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf_Le6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+P" command="_eX5-pre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf_be6EeOxntPoYxjofg" keySequence="COMMAND+F3" command="_eX4Jibe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf_re6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+T" command="_eX6lzbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpf_7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+O" command="_eX5XqLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOqrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+M" command="_JPxwmLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOq7fJEeOxntPoYxjofg" keySequence="COMMAND+I" command="_JPrC4bfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOrLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+P" command="_JPvUTLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOrbfJEeOxntPoYxjofg" keySequence="COMMAND+F3" command="_JPtfK7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOrrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+T" command="_JPwiYrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOr7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+O" command="_JPutTbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgALe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_eYChm7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgAbe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_UP" command="_eX9pGre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOsLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_JP4eMbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOsbfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_UP" command="_JPzltLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgAre6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_eX_eQ7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOsrfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_JP0z6rfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgA7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eYChjre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgBLe6EeOxntPoYxjofg" keySequence="COMMAND+2 R" command="_eYDIoLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgBbe6EeOxntPoYxjofg" keySequence="COMMAND+2 L" command="_eX4whLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgBre6EeOxntPoYxjofg" keySequence="COMMAND+2 F" command="_eX4Jhbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgB7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_eYChkbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOs7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_JP33MLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOtLfJEeOxntPoYxjofg" keySequence="COMMAND+2 R" command="_JP4eQrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOtbfJEeOxntPoYxjofg" keySequence="COMMAND+2 L" command="_JPuGJrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOtrfJEeOxntPoYxjofg" keySequence="COMMAND+2 F" command="_JPtfJ7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOt7fJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_JP33M7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgCLe6EeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_DOWN" command="_eYDImLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOuLfJEeOxntPoYxjofg" keySequence="ALT+CTRL+ARROW_DOWN" command="_JP4eOrfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgCbe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_eX0fF7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOubfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_JPp0trfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgCre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javascriptViewScope" bindingContext="_eXquHbe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgC7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+C" command="_eYDInbe6EeOxntPoYxjofg">
+  <bindingTables xmi:id="_JPeOurfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javascriptViewScope" bindingContext="_JPfc1LfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOu7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+C" command="_JP4eP7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgDLe6EeOxntPoYxjofg" keySequence="COMMAND+G" command="_eX8a7be6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgDbe6EeOxntPoYxjofg" keySequence="SHIFT+F2" command="_eX1GOre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgDre6EeOxntPoYxjofg" keySequence="F3" command="_eX7Myre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgD7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Z" command="_eX0fI7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOvLfJEeOxntPoYxjofg" keySequence="COMMAND+G" command="_JPxwlrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOvbfJEeOxntPoYxjofg" keySequence="SHIFT+F2" command="_JPqb27fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOvrfJEeOxntPoYxjofg" keySequence="F3" command="_JPwicLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOv7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Z" command="_JPp0wrfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgELe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+O" command="_eX2UQre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgEbe6EeOxntPoYxjofg" keySequence="F4" command="_eYFk17e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgEre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+U" command="_eX5-u7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgE7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_eX1GIre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOwLfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+O" command="_JPrp5rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOwbfJEeOxntPoYxjofg" keySequence="F4" command="_JP66drfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOwrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+U" command="_JPv7ULfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOw7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_JPqbw7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgFLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+T" command="_eX0fH7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOxLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+T" command="_JPp0vrfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgFbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+V" command="_eX4JgLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOxbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+V" command="_JPtfIrfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgFre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+L" command="_eX1tTre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOxrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+L" command="_JPrC8LfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgF7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+M" command="_eX5XrLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOx7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+M" command="_JPvUQLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgGLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+S" command="_eX5-q7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOyLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+S" command="_JPvUUbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgGbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+I" command="_eX-3JLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOybfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+I" command="_JP0MzbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgGre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+H" command="_eX3ifbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgG7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+J" command="_eX2USbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOyrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+H" command="_JPs4HrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeOy7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+J" command="_JPrp7bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgHLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q P" command="_eX_eR7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOzLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q P" command="_JP1a4rfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgHbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q D" command="_eYEWwre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOzbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q D" command="_JP5sZbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgHre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q J" command="_eYAFSbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOzrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q J" command="_JP1a8LfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgH7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+Q T" command="_eX3igLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeOz7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+Q T" command="_JPs4IbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgILe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+G" command="_eX9pAbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgIbe6EeOxntPoYxjofg" keySequence="ALT+CTRL+H" command="_eYE9y7e6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO0LfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+G" command="_JPy-qbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO0bfJEeOxntPoYxjofg" keySequence="ALT+CTRL+H" command="_JP6TbrfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgIre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" bindingContext="_eXqHWre6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgI7e6EeOxntPoYxjofg" keySequence="COMMAND+\" command="_eYBTbbe6EeOxntPoYxjofg">
+  <bindingTables xmi:id="_JPeO0rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" bindingContext="_JPfcwrfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPeO07fJEeOxntPoYxjofg" keySequence="COMMAND+\" command="_JP2pELfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgJLe6EeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_UP" command="_eX7z3re6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgJbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+\" command="_eYBTbbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgJre6EeOxntPoYxjofg" keySequence="COMMAND+O" command="_eYB6fre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgJ7e6EeOxntPoYxjofg" keySequence="F3" command="_eX3iZLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgKLe6EeOxntPoYxjofg" keySequence="COMMAND+/" command="_eX3idre6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeO1LfJEeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_UP" command="_JPxJhLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO1bfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+\" command="_JP2pELfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO1rfJEeOxntPoYxjofg" keySequence="COMMAND+O" command="_JP3QIbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO17fJEeOxntPoYxjofg" keySequence="F3" command="_JPs4BbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO2LfJEeOxntPoYxjofg" keySequence="COMMAND+/" command="_JPs4F7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgKbe6EeOxntPoYxjofg" keySequence="COMMAND+I" command="_eX0fMLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgKre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+P" command="_eX5-sre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgK7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+/" command="_eX3idre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgLLe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+." command="_eX2UWbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeO2bfJEeOxntPoYxjofg" keySequence="COMMAND+I" command="_JPp0z7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO2rfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+P" command="_JPvUWLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO27fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+/" command="_JPs4F7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO3LfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+." command="_JPrp_bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgLbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_eX1tQLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgLre6EeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_DOWN" command="_eX1tUbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgL7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_UP" command="_eYDvqLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeO3bfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_JPrC4rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO3rfJEeOxntPoYxjofg" keySequence="ALT+SHIFT+ARROW_DOWN" command="_JPrp4LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO37fJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_UP" command="_JP5FS7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgMLe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_eX6lx7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeO4LfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_LEFT" command="_JPv7bLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgMbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_eX6lwLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgMre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_UP" command="_eYDvqLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgM7e6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eX27U7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgNLe6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_eX1GRbe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeO4bfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_JPv7ZbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO4rfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_UP" command="_JP5FS7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO47fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_JPsQ9rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO5LfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_DOWN" command="_JPrC0bfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgNbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_DOWN" command="_eX1GRbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgNre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+>" command="_eX2UWbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgN7e6EeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_eYChj7e6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPeO5bfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+ARROW_DOWN" command="_JPrC0bfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPeO5rfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+>" command="_JPrp_bfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1kLfJEeOxntPoYxjofg" keySequence="CTRL+SHIFT+ARROW_RIGHT" command="_JP33MbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgOLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editorScope" bindingContext="_eXquFre6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgObe6EeOxntPoYxjofg" keySequence="F12" command="_eX7MyLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgOre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_eYAFWLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgO7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+A" command="_eYAFWLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1kbfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editorScope" bindingContext="_JPfczbfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1krfJEeOxntPoYxjofg" keySequence="F12" command="_JPwibrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1k7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_JP2B8rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1lLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+A" command="_JP2B8rfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgPLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.pdeEditorContext" bindingContext="_eXquH7e6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgPbe6EeOxntPoYxjofg" keySequence="COMMAND+O" command="_eYDvr7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgPre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eX-3Nre6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1lbfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.pdeEditorContext" bindingContext="_JPfc1rfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1lrfJEeOxntPoYxjofg" keySequence="COMMAND+O" command="_JP5FUrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1l7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_JP0z0rfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgP7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" bindingContext="_eXqHU7e6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgQLe6EeOxntPoYxjofg" keySequence="COMMAND+G" command="_eX27bLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgQbe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+," command="_eYEWvre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgQre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+." command="_eX0fFLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1mLfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" bindingContext="_JPfcu7fJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1mbfJEeOxntPoYxjofg" keySequence="COMMAND+G" command="_JPsRD7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1mrfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+," command="_JP5sYbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1m7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+." command="_JPp0s7fJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgQ7e6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.AntEditorScope" bindingContext="_eXqHWbe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgRLe6EeOxntPoYxjofg" keySequence="SHIFT+F2" command="_eX-3Ire6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgRbe6EeOxntPoYxjofg" keySequence="F3" command="_eX3ia7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgRre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_eX8a5Le6EeOxntPoYxjofg">
+  <bindingTables xmi:id="_JPe1nLfJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.AntEditorScope" bindingContext="_JPfcwbfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1nbfJEeOxntPoYxjofg" keySequence="SHIFT+F2" command="_JP0My7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1nrfJEeOxntPoYxjofg" keySequence="F3" command="_JPs4DLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1n7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_JPxwjbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgR7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+O" command="_eYEWwLe6EeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1oLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+O" command="_JP5sY7fJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
-    <bindings xmi:id="_eXpgSLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_eX4wkbe6EeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1obfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+F" command="_JPuGM7fJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgSbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memoryview" bindingContext="_eXquIbe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgSre6EeOxntPoYxjofg" keySequence="COMMAND+T" command="_eX4wg7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgS7e6EeOxntPoYxjofg" keySequence="COMMAND+N" command="_eX3iere6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgTLe6EeOxntPoYxjofg" keySequence="COMMAND+W" command="_eX3iYLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgTbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+N" command="_eX9B9Le6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgTre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+M" command="_eX0fK7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1orfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memoryview" bindingContext="_JPfc2LfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1o7fJEeOxntPoYxjofg" keySequence="COMMAND+T" command="_JPuGJbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1pLfJEeOxntPoYxjofg" keySequence="COMMAND+N" command="_JPs4G7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1pbfJEeOxntPoYxjofg" keySequence="COMMAND+W" command="_JPs4AbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1prfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+N" command="_JPyXnbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1p7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+M" command="_JPp0yrfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgT7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.propertiesEditorScope" bindingContext="_eXquILe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgULe6EeOxntPoYxjofg" keySequence="COMMAND+/" command="_eX0fL7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgUbe6EeOxntPoYxjofg" keySequence="COMMAND+7" command="_eX0fL7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgUre6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_eX0fL7e6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1qLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.propertiesEditorScope" bindingContext="_JPfc17fJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1qbfJEeOxntPoYxjofg" keySequence="COMMAND+/" command="_JPp0zrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1qrfJEeOxntPoYxjofg" keySequence="COMMAND+7" command="_JPp0zrfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1q7fJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+C" command="_JPp0zrfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgU7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.debugging" bindingContext="_eXqHUre6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgVLe6EeOxntPoYxjofg" keySequence="COMMAND+R" command="_eX2UV7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgVbe6EeOxntPoYxjofg" keySequence="COMMAND+F2" command="_eX27are6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgVre6EeOxntPoYxjofg" keySequence="F8" command="_eYFk2re6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgV7e6EeOxntPoYxjofg" keySequence="F7" command="_eX7Mzbe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgWLe6EeOxntPoYxjofg" keySequence="F6" command="_eX0fKLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgWbe6EeOxntPoYxjofg" keySequence="F5" command="_eYB6hre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgWre6EeOxntPoYxjofg" keySequence="ALT+F5" command="_eYBTYbe6EeOxntPoYxjofg">
+  <bindingTables xmi:id="_JPe1rLfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.debugging" bindingContext="_JPfcurfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1rbfJEeOxntPoYxjofg" keySequence="COMMAND+R" command="_JPrp-7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1rrfJEeOxntPoYxjofg" keySequence="COMMAND+F2" command="_JPsRDbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1r7fJEeOxntPoYxjofg" keySequence="F8" command="_JP66ebfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1sLfJEeOxntPoYxjofg" keySequence="F7" command="_JPwic7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1sbfJEeOxntPoYxjofg" keySequence="F6" command="_JPp0x7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1srfJEeOxntPoYxjofg" keySequence="F5" command="_JP3QKbfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1s7fJEeOxntPoYxjofg" keySequence="ALT+F5" command="_JP2pBLfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgW7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.BreakpointView" bindingContext="_eXqHVre6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgXLe6EeOxntPoYxjofg" keySequence="ALT+CR" command="_eYChgLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1tLfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.BreakpointView" bindingContext="_JPfcvrfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1tbfJEeOxntPoYxjofg" keySequence="ALT+CR" command="_JP33IrfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXpgXbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" bindingContext="_eXqHULe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXpgXre6EeOxntPoYxjofg" keySequence="COMMAND+V" command="_eX1GL7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXpgX7e6EeOxntPoYxjofg" keySequence="COMMAND+C" command="_eX9CCLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1trfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" bindingContext="_JPfcuLfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1t7fJEeOxntPoYxjofg" keySequence="COMMAND+V" command="_JPqb0LfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1uLfJEeOxntPoYxjofg" keySequence="COMMAND+C" command="_JPy-orfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXqHALe6EeOxntPoYxjofg" elementId="org.eclipse.ui.serverViewScope" bindingContext="_eXqHVbe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXqHAbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+P" command="_eYB6gLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXqHAre6EeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_eYChhre6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXqHA7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+S" command="_eX_eO7e6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXqHBLe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+D" command="_eX6lvbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1ubfJEeOxntPoYxjofg" elementId="org.eclipse.ui.serverViewScope" bindingContext="_JPfcvbfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1urfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+P" command="_JP3QI7fJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1u7fJEeOxntPoYxjofg" keySequence="ALT+COMMAND+R" command="_JP33KLfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1vLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+S" command="_JP0z4rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1vbfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+D" command="_JPv7YrfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXqHBbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ReflogView" bindingContext="_eXqHUbe6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXqHBre6EeOxntPoYxjofg" keySequence="COMMAND+C" command="_eX2UTbe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1vrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ReflogView" bindingContext="_JPfcubfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1v7fJEeOxntPoYxjofg" keySequence="COMMAND+C" command="_JPrp8bfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXqHB7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.java.editorScope" bindingContext="_eXquG7e6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXqHCLe6EeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_eYAFWLe6EeOxntPoYxjofg"/>
-    <bindings xmi:id="_eXqHCbe6EeOxntPoYxjofg" keySequence="ALT+COMMAND+A" command="_eYAFWLe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1wLfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.java.editorScope" bindingContext="_JPfc0rfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1wbfJEeOxntPoYxjofg" keySequence="COMMAND+SHIFT+A" command="_JP2B8rfJEeOxntPoYxjofg"/>
+    <bindings xmi:id="_JPe1wrfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+A" command="_JP2B8rfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXqHCre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" bindingContext="_eXquJre6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXqHC7e6EeOxntPoYxjofg" keySequence="ALT+COMMAND+B" command="_eYB6gre6EeOxntPoYxjofg">
+  <bindingTables xmi:id="_JPe1w7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" bindingContext="_JPfc3bfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1xLfJEeOxntPoYxjofg" keySequence="ALT+COMMAND+B" command="_JP3QJbfJEeOxntPoYxjofg">
       <tags>platform:cocoa</tags>
     </bindings>
   </bindingTables>
-  <bindingTables xmi:id="_eXqHDLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.console" bindingContext="_eXqHV7e6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXqHDbe6EeOxntPoYxjofg" keySequence="CTRL+D" command="_eX27Ybe6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1xbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.console" bindingContext="_JPfcv7fJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1xrfJEeOxntPoYxjofg" keySequence="CTRL+D" command="_JPsRBLfJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXqHDre6EeOxntPoYxjofg" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" bindingContext="_eXquI7e6EeOxntPoYxjofg">
-    <bindings xmi:id="_eXqHD7e6EeOxntPoYxjofg" keySequence="M1+W" command="_eYFk4Le6EeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1x7fJEeOxntPoYxjofg" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" bindingContext="_JPfc2rfJEeOxntPoYxjofg">
+    <bindings xmi:id="_JPe1yLfJEeOxntPoYxjofg" keySequence="M1+W" command="_JP66f7fJEeOxntPoYxjofg"/>
   </bindingTables>
-  <bindingTables xmi:id="_eXqHELe6EeOxntPoYxjofg" bindingContext="_eXquJ7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHEbe6EeOxntPoYxjofg" bindingContext="_eXquKLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHEre6EeOxntPoYxjofg" bindingContext="_eXquKbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHE7e6EeOxntPoYxjofg" bindingContext="_eXquKre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHFLe6EeOxntPoYxjofg" bindingContext="_eXquK7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHFbe6EeOxntPoYxjofg" bindingContext="_eXquLLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHFre6EeOxntPoYxjofg" bindingContext="_eXquLbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHF7e6EeOxntPoYxjofg" bindingContext="_eXquLre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHGLe6EeOxntPoYxjofg" bindingContext="_eXquL7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHGbe6EeOxntPoYxjofg" bindingContext="_eXquMLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHGre6EeOxntPoYxjofg" bindingContext="_eXquMbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHG7e6EeOxntPoYxjofg" bindingContext="_eXquMre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHHLe6EeOxntPoYxjofg" bindingContext="_eXquM7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHHbe6EeOxntPoYxjofg" bindingContext="_eXquNLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHHre6EeOxntPoYxjofg" bindingContext="_eXquNbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHH7e6EeOxntPoYxjofg" bindingContext="_eXquNre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHILe6EeOxntPoYxjofg" bindingContext="_eXquN7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHIbe6EeOxntPoYxjofg" bindingContext="_eXquOLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHIre6EeOxntPoYxjofg" bindingContext="_eXquObe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHI7e6EeOxntPoYxjofg" bindingContext="_eXquOre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHJLe6EeOxntPoYxjofg" bindingContext="_eXquO7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHJbe6EeOxntPoYxjofg" bindingContext="_eXquPLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHJre6EeOxntPoYxjofg" bindingContext="_eXquPbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHJ7e6EeOxntPoYxjofg" bindingContext="_eXquPre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHKLe6EeOxntPoYxjofg" bindingContext="_eXquP7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHKbe6EeOxntPoYxjofg" bindingContext="_eXquQLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHKre6EeOxntPoYxjofg" bindingContext="_eXquQbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHK7e6EeOxntPoYxjofg" bindingContext="_eXquQre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHLLe6EeOxntPoYxjofg" bindingContext="_eXquQ7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHLbe6EeOxntPoYxjofg" bindingContext="_eXquRLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHLre6EeOxntPoYxjofg" bindingContext="_eXquRbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHL7e6EeOxntPoYxjofg" bindingContext="_eXquRre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHMLe6EeOxntPoYxjofg" bindingContext="_eXquR7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHMbe6EeOxntPoYxjofg" bindingContext="_eXquSLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHMre6EeOxntPoYxjofg" bindingContext="_eXquSbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHM7e6EeOxntPoYxjofg" bindingContext="_eXquSre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHNLe6EeOxntPoYxjofg" bindingContext="_eXquS7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHNbe6EeOxntPoYxjofg" bindingContext="_eXquTLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHNre6EeOxntPoYxjofg" bindingContext="_eXquTbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHN7e6EeOxntPoYxjofg" bindingContext="_eXquTre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHOLe6EeOxntPoYxjofg" bindingContext="_eXquT7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHObe6EeOxntPoYxjofg" bindingContext="_eXquULe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHOre6EeOxntPoYxjofg" bindingContext="_eXquUbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHO7e6EeOxntPoYxjofg" bindingContext="_eXquUre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHPLe6EeOxntPoYxjofg" bindingContext="_eXquU7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHPbe6EeOxntPoYxjofg" bindingContext="_eXquVLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHPre6EeOxntPoYxjofg" bindingContext="_eXquVbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHP7e6EeOxntPoYxjofg" bindingContext="_eXquVre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHQLe6EeOxntPoYxjofg" bindingContext="_eXquV7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHQbe6EeOxntPoYxjofg" bindingContext="_eXquWLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHQre6EeOxntPoYxjofg" bindingContext="_eXquWbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHQ7e6EeOxntPoYxjofg" bindingContext="_eXquWre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHRLe6EeOxntPoYxjofg" bindingContext="_eXquW7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHRbe6EeOxntPoYxjofg" bindingContext="_eXquXLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHRre6EeOxntPoYxjofg" bindingContext="_eXquXbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHR7e6EeOxntPoYxjofg" bindingContext="_eXquXre6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHSLe6EeOxntPoYxjofg" bindingContext="_eXquX7e6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHSbe6EeOxntPoYxjofg" bindingContext="_eXquYLe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHSre6EeOxntPoYxjofg" bindingContext="_eXquYbe6EeOxntPoYxjofg"/>
-  <bindingTables xmi:id="_eXqHS7e6EeOxntPoYxjofg" bindingContext="_eXquYre6EeOxntPoYxjofg"/>
-  <rootContext xmi:id="_eXqHTLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.dialogAndWindow" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs and Windows" description="Either a dialog or a window is open">
-    <children xmi:id="_eXqHTbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.window" contributorURI="platform:/plugin/org.eclipse.platform" name="In Windows" description="A window is open">
-      <children xmi:id="_eXqHTre6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.contexts.views" contributorURI="platform:/plugin/org.eclipse.platform" name="%bindingcontext.name.bindingView"/>
-      <children xmi:id="_eXqHT7e6EeOxntPoYxjofg" elementId="org.eclipse.compare.compareEditorScope" name="Comparing in an Editor" description="Comparing in an Editor"/>
-      <children xmi:id="_eXqHULe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" name="In Git Repositories View"/>
-      <children xmi:id="_eXqHUbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ReflogView" name="In Git Reflog View"/>
-      <children xmi:id="_eXqHUre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.debugging" name="Debugging" description="Debugging programs">
-        <children xmi:id="_eXqHU7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" name="In Table Memory Rendering" description="In Table Memory Rendering"/>
-        <children xmi:id="_eXqHVLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.debugging" name="Debugging Java" description="Debugging Java programs"/>
+  <bindingTables xmi:id="_JPe1ybfJEeOxntPoYxjofg" bindingContext="_JPfc3rfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1yrfJEeOxntPoYxjofg" bindingContext="_JPfc37fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1y7fJEeOxntPoYxjofg" bindingContext="_JPfc4LfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1zLfJEeOxntPoYxjofg" bindingContext="_JPfc4bfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1zbfJEeOxntPoYxjofg" bindingContext="_JPfc4rfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1zrfJEeOxntPoYxjofg" bindingContext="_JPfc47fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe1z7fJEeOxntPoYxjofg" bindingContext="_JPfc5LfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe10LfJEeOxntPoYxjofg" bindingContext="_JPfc5bfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe10bfJEeOxntPoYxjofg" bindingContext="_JPfc5rfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe10rfJEeOxntPoYxjofg" bindingContext="_JPfc57fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe107fJEeOxntPoYxjofg" bindingContext="_JPfc6LfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe11LfJEeOxntPoYxjofg" bindingContext="_JPfc6bfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe11bfJEeOxntPoYxjofg" bindingContext="_JPfc6rfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe11rfJEeOxntPoYxjofg" bindingContext="_JPfc67fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe117fJEeOxntPoYxjofg" bindingContext="_JPfc7LfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe12LfJEeOxntPoYxjofg" bindingContext="_JPfc7bfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe12bfJEeOxntPoYxjofg" bindingContext="_JPfc7rfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe12rfJEeOxntPoYxjofg" bindingContext="_JPfc77fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe127fJEeOxntPoYxjofg" bindingContext="_JPfc8LfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe13LfJEeOxntPoYxjofg" bindingContext="_JPfc8bfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe13bfJEeOxntPoYxjofg" bindingContext="_JPfc8rfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe13rfJEeOxntPoYxjofg" bindingContext="_JPfc87fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe137fJEeOxntPoYxjofg" bindingContext="_JPfc9LfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe14LfJEeOxntPoYxjofg" bindingContext="_JPgDsLfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe14bfJEeOxntPoYxjofg" bindingContext="_JPgDsbfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe14rfJEeOxntPoYxjofg" bindingContext="_JPgDsrfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe147fJEeOxntPoYxjofg" bindingContext="_JPgDs7fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe15LfJEeOxntPoYxjofg" bindingContext="_JPgDtLfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe15bfJEeOxntPoYxjofg" bindingContext="_JPgDtbfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe15rfJEeOxntPoYxjofg" bindingContext="_JPgDtrfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe157fJEeOxntPoYxjofg" bindingContext="_JPgDt7fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe16LfJEeOxntPoYxjofg" bindingContext="_JPgDuLfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe16bfJEeOxntPoYxjofg" bindingContext="_JPgDubfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe16rfJEeOxntPoYxjofg" bindingContext="_JPgDurfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe167fJEeOxntPoYxjofg" bindingContext="_JPgDu7fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe17LfJEeOxntPoYxjofg" bindingContext="_JPgDvLfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe17bfJEeOxntPoYxjofg" bindingContext="_JPgDvbfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe17rfJEeOxntPoYxjofg" bindingContext="_JPgDvrfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe177fJEeOxntPoYxjofg" bindingContext="_JPgDv7fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPe18LfJEeOxntPoYxjofg" bindingContext="_JPgDwLfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcoLfJEeOxntPoYxjofg" bindingContext="_JPgDwbfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcobfJEeOxntPoYxjofg" bindingContext="_JPgDwrfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcorfJEeOxntPoYxjofg" bindingContext="_JPgDw7fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfco7fJEeOxntPoYxjofg" bindingContext="_JPgDxLfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcpLfJEeOxntPoYxjofg" bindingContext="_JPgDxbfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcpbfJEeOxntPoYxjofg" bindingContext="_JPgDxrfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcprfJEeOxntPoYxjofg" bindingContext="_JPgDx7fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcp7fJEeOxntPoYxjofg" bindingContext="_JPgDyLfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcqLfJEeOxntPoYxjofg" bindingContext="_JPgDybfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcqbfJEeOxntPoYxjofg" bindingContext="_JPgDyrfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcqrfJEeOxntPoYxjofg" bindingContext="_JPgDy7fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcq7fJEeOxntPoYxjofg" bindingContext="_JPgDzLfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcrLfJEeOxntPoYxjofg" bindingContext="_JPgDzbfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcrbfJEeOxntPoYxjofg" bindingContext="_JPgDzrfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcrrfJEeOxntPoYxjofg" bindingContext="_JPgDz7fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcr7fJEeOxntPoYxjofg" bindingContext="_JPgD0LfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcsLfJEeOxntPoYxjofg" bindingContext="_JPgD0bfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcsbfJEeOxntPoYxjofg" bindingContext="_JPgD0rfJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcsrfJEeOxntPoYxjofg" bindingContext="_JPgD07fJEeOxntPoYxjofg"/>
+  <bindingTables xmi:id="_JPfcs7fJEeOxntPoYxjofg" bindingContext="_JPgD1LfJEeOxntPoYxjofg"/>
+  <rootContext xmi:id="_JPfctLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.dialogAndWindow" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs and Windows" description="Either a dialog or a window is open">
+    <children xmi:id="_JPfctbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.window" contributorURI="platform:/plugin/org.eclipse.platform" name="In Windows" description="A window is open">
+      <children xmi:id="_JPfctrfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.contexts.views" contributorURI="platform:/plugin/org.eclipse.platform" name="%bindingcontext.name.bindingView"/>
+      <children xmi:id="_JPfct7fJEeOxntPoYxjofg" elementId="org.eclipse.compare.compareEditorScope" name="Comparing in an Editor" description="Comparing in an Editor"/>
+      <children xmi:id="_JPfcuLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" name="In Git Repositories View"/>
+      <children xmi:id="_JPfcubfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ReflogView" name="In Git Reflog View"/>
+      <children xmi:id="_JPfcurfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.debugging" name="Debugging" description="Debugging programs">
+        <children xmi:id="_JPfcu7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memory.abstractasynctablerendering" name="In Table Memory Rendering" description="In Table Memory Rendering"/>
+        <children xmi:id="_JPfcvLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.debugging" name="Debugging Java" description="Debugging Java programs"/>
       </children>
-      <children xmi:id="_eXqHVbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.serverViewScope" name="In Servers View" description="In Servers View"/>
-      <children xmi:id="_eXqHVre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.BreakpointView" name="In Breakpoints View" description="The breakpoints view context"/>
-      <children xmi:id="_eXqHV7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.console" name="In I/O Console" description="In I/O console"/>
-      <children xmi:id="_eXqHWLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.textEditorScope" name="Editing Text" description="Editing Text Context">
-        <children xmi:id="_eXqHWbe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.AntEditorScope" name="Editing Ant Buildfiles" description="Editing Ant Buildfiles Context"/>
-        <children xmi:id="_eXqHWre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors">
-          <children xmi:id="_eXqHW7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.html.occurrences" name="HTML Source Occurrences" description="HTML Source Occurrences"/>
-          <children xmi:id="_eXqHXLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.html.core.htmlsource" name="Editing HTML Source" description="Editing HTML Source"/>
-          <children xmi:id="_eXqHXbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.occurrences" name="XML Source Occurrences" description="XML Source Occurrences"/>
-          <children xmi:id="_eXqHXre6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.navigation" name="XML Source Navigation" description="XML Source Navigation"/>
-          <children xmi:id="_eXquELe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.cleanup" name="XML Source Cleanup" description="XML Source Cleanup"/>
-          <children xmi:id="_eXquEbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.grammar" name="XML Source Grammar" description="XML Source Grammar"/>
-          <children xmi:id="_eXquEre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.comments" name="Source Comments in Structured Text Editors" description="Source Comments in Structured Text Editors"/>
-          <children xmi:id="_eXquE7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.selection" name="XML Source Selection" description="XML Source Selection"/>
-          <children xmi:id="_eXquFLe6EeOxntPoYxjofg" elementId="org.eclipse.core.runtime.xml" name="Editing XML Source" description="Editing XML Source"/>
-          <children xmi:id="_eXquFbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.comments" name="XML Source Comments" description="XML Source Comments"/>
-          <children xmi:id="_eXquFre6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editorScope" name="WindowBuilder XML scope"/>
-          <children xmi:id="_eXquF7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.hideFormat" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors"/>
-          <children xmi:id="_eXquGLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.css.core.csssource" name="Editing CSS Source" description="Editing CSS Source"/>
-          <children xmi:id="_eXquGbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.dependencies" name="XML Source Dependencies" description="XML Source Dependencies"/>
-          <children xmi:id="_eXquGre6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.expand" name="XML Source Expand/Collapse" description="XML Source Expand/Collapse"/>
+      <children xmi:id="_JPfcvbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.serverViewScope" name="In Servers View" description="In Servers View"/>
+      <children xmi:id="_JPfcvrfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.BreakpointView" name="In Breakpoints View" description="The breakpoints view context"/>
+      <children xmi:id="_JPfcv7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.console" name="In I/O Console" description="In I/O console"/>
+      <children xmi:id="_JPfcwLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.textEditorScope" name="Editing Text" description="Editing Text Context">
+        <children xmi:id="_JPfcwbfJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.AntEditorScope" name="Editing Ant Buildfiles" description="Editing Ant Buildfiles Context"/>
+        <children xmi:id="_JPfcwrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structuredTextEditorScope" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors">
+          <children xmi:id="_JPfcw7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.html.occurrences" name="HTML Source Occurrences" description="HTML Source Occurrences"/>
+          <children xmi:id="_JPfcxLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.html.core.htmlsource" name="Editing HTML Source" description="Editing HTML Source"/>
+          <children xmi:id="_JPfcxbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.occurrences" name="XML Source Occurrences" description="XML Source Occurrences"/>
+          <children xmi:id="_JPfcxrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.navigation" name="XML Source Navigation" description="XML Source Navigation"/>
+          <children xmi:id="_JPfcx7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.cleanup" name="XML Source Cleanup" description="XML Source Cleanup"/>
+          <children xmi:id="_JPfcyLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.grammar" name="XML Source Grammar" description="XML Source Grammar"/>
+          <children xmi:id="_JPfcybfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.comments" name="Source Comments in Structured Text Editors" description="Source Comments in Structured Text Editors"/>
+          <children xmi:id="_JPfcyrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.selection" name="XML Source Selection" description="XML Source Selection"/>
+          <children xmi:id="_JPfcy7fJEeOxntPoYxjofg" elementId="org.eclipse.core.runtime.xml" name="Editing XML Source" description="Editing XML Source"/>
+          <children xmi:id="_JPfczLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.comments" name="XML Source Comments" description="XML Source Comments"/>
+          <children xmi:id="_JPfczbfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editorScope" name="WindowBuilder XML scope"/>
+          <children xmi:id="_JPfczrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.hideFormat" name="Editing in Structured Text Editors" description="Editing in Structured Text Editors"/>
+          <children xmi:id="_JPfcz7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.css.core.csssource" name="Editing CSS Source" description="Editing CSS Source"/>
+          <children xmi:id="_JPfc0LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.dependencies" name="XML Source Dependencies" description="XML Source Dependencies"/>
+          <children xmi:id="_JPfc0bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.expand" name="XML Source Expand/Collapse" description="XML Source Expand/Collapse"/>
         </children>
-        <children xmi:id="_eXquG7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.java.editorScope" name="WindowBuilder Java scope"/>
-        <children xmi:id="_eXquHLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javaEditorScope" name="Editing JavaScript Source" description="Editing JavaScript Source Context">
-          <children xmi:id="_eXquHbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javascriptViewScope" name="JavaScript View" description="JavaScript View Context"/>
+        <children xmi:id="_JPfc0rfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.java.editorScope" name="WindowBuilder Java scope"/>
+        <children xmi:id="_JPfc07fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javaEditorScope" name="Editing JavaScript Source" description="Editing JavaScript Source Context">
+          <children xmi:id="_JPfc1LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.javascriptViewScope" name="JavaScript View" description="JavaScript View Context"/>
         </children>
-        <children xmi:id="_eXquHre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.javaEditorScope" name="Editing Java Source" description="Editing Java Source Context"/>
-        <children xmi:id="_eXquH7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.pdeEditorContext" name="PDE editor" description="The context used by PDE editors"/>
-        <children xmi:id="_eXquILe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.propertiesEditorScope" name="Editing Properties Files" description="Editing Properties Files Context"/>
+        <children xmi:id="_JPfc1bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.javaEditorScope" name="Editing Java Source" description="Editing Java Source Context"/>
+        <children xmi:id="_JPfc1rfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.pdeEditorContext" name="PDE editor" description="The context used by PDE editors"/>
+        <children xmi:id="_JPfc17fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.propertiesEditorScope" name="Editing Properties Files" description="Editing Properties Files Context"/>
       </children>
-      <children xmi:id="_eXquIbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memoryview" name="In Memory View" description="In memory view"/>
-      <children xmi:id="_eXquIre6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" name="In Console View" description="In Console View"/>
+      <children xmi:id="_JPfc2LfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.memoryview" name="In Memory View" description="In memory view"/>
+      <children xmi:id="_JPfc2bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" name="In Console View" description="In Console View"/>
     </children>
-    <children xmi:id="_eXquI7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.dialog" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs" description="A dialog is open"/>
+    <children xmi:id="_JPfc2rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.dialog" contributorURI="platform:/plugin/org.eclipse.platform" name="In Dialogs" description="A dialog is open"/>
   </rootContext>
-  <rootContext xmi:id="_eXquJLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.workbenchMenu" name="Workbench Menu" description="When no Workbench windows are active"/>
-  <rootContext xmi:id="_eXquJbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.actionSet" name="Action Set" description="Parent context for action sets"/>
-  <rootContext xmi:id="_eXquJre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" name="Editor Breadcrumb Navigation" description="Editor Breadcrumb Navigation Context"/>
-  <rootContext xmi:id="_eXquJ7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchAction" name="Auto::org.eclipse.wb.core.xml.editor.actions.SwitchAction"/>
-  <rootContext xmi:id="_eXquKLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchPairEditorAction" name="Auto::org.eclipse.wb.core.xml.editor.actions.SwitchPairEditorAction"/>
-  <rootContext xmi:id="_eXquKbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" name="Auto::org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction"/>
-  <rootContext xmi:id="_eXquKre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction" name="Auto::org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction"/>
-  <rootContext xmi:id="_eXquK7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" name="Auto::org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction"/>
-  <rootContext xmi:id="_eXquLLe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.actions.ManageBreakpointRulerAction" name="Auto::org.eclipse.ant.ui.actions.ManageBreakpointRulerAction"/>
-  <rootContext xmi:id="_eXquLbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.SnippetExecute" name="Auto::org.eclipse.jdt.debug.ui.SnippetExecute"/>
-  <rootContext xmi:id="_eXquLre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.SnippetDisplay" name="Auto::org.eclipse.jdt.debug.ui.SnippetDisplay"/>
-  <rootContext xmi:id="_eXquL7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.SnippetInspect" name="Auto::org.eclipse.jdt.debug.ui.SnippetInspect"/>
-  <rootContext xmi:id="_eXquMLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.propertiesfileeditor.BookmarkRulerAction" name="Auto::org.eclipse.jdt.internal.ui.propertiesfileeditor.BookmarkRulerAction"/>
-  <rootContext xmi:id="_eXquMbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.propertiesfileeditor.SelectRulerAction" name="Auto::org.eclipse.jdt.internal.ui.propertiesfileeditor.SelectRulerAction"/>
-  <rootContext xmi:id="_eXquMre6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.BookmarkRulerAction" name="Auto::org.eclipse.ui.texteditor.BookmarkRulerAction"/>
-  <rootContext xmi:id="_eXquM7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.SelectRulerAction" name="Auto::org.eclipse.ui.texteditor.SelectRulerAction"/>
-  <rootContext xmi:id="_eXquNLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.editor.actions.SwitchAction" name="Auto::org.eclipse.wb.core.editor.actions.SwitchAction"/>
-  <rootContext xmi:id="_eXquNbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.javaeditor.BookmarkRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.javaeditor.BookmarkRulerAction"/>
-  <rootContext xmi:id="_eXquNre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.javaeditor.JavaSelectRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.javaeditor.JavaSelectRulerAction"/>
-  <rootContext xmi:id="_eXquN7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.BookmarkRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.BookmarkRulerAction"/>
-  <rootContext xmi:id="_eXquOLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.SelectRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.SelectRulerAction"/>
-  <rootContext xmi:id="_eXquObe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.actionSet.presentation" name="Auto::org.eclipse.ant.ui.actionSet.presentation"/>
-  <rootContext xmi:id="_eXquOre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.breakpointActionSet" name="Auto::org.eclipse.debug.ui.breakpointActionSet"/>
-  <rootContext xmi:id="_eXquO7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.debugActionSet" name="Auto::org.eclipse.debug.ui.debugActionSet"/>
-  <rootContext xmi:id="_eXquPLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.launchActionSet" name="Auto::org.eclipse.debug.ui.launchActionSet"/>
-  <rootContext xmi:id="_eXquPbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.profileActionSet" name="Auto::org.eclipse.debug.ui.profileActionSet"/>
-  <rootContext xmi:id="_eXquPre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.gitaction" name="Auto::org.eclipse.egit.ui.gitaction"/>
-  <rootContext xmi:id="_eXquP7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.navigation" name="Auto::org.eclipse.egit.ui.navigation"/>
-  <rootContext xmi:id="_eXquQLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.JDTDebugActionSet" name="Auto::org.eclipse.jdt.debug.ui.JDTDebugActionSet"/>
-  <rootContext xmi:id="_eXquQbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.JUnitActionSet" name="Auto::org.eclipse.jdt.junit.JUnitActionSet"/>
-  <rootContext xmi:id="_eXquQre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.text.java.actionSet.presentation" name="Auto::org.eclipse.jdt.ui.text.java.actionSet.presentation"/>
-  <rootContext xmi:id="_eXquQ7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet" name="Auto::org.eclipse.jdt.ui.JavaElementCreationActionSet"/>
-  <rootContext xmi:id="_eXquRLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaActionSet" name="Auto::org.eclipse.jdt.ui.JavaActionSet"/>
-  <rootContext xmi:id="_eXquRbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.A_OpenActionSet" name="Auto::org.eclipse.jdt.ui.A_OpenActionSet"/>
-  <rootContext xmi:id="_eXquRre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.CodingActionSet" name="Auto::org.eclipse.jdt.ui.CodingActionSet"/>
-  <rootContext xmi:id="_eXquR7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SearchActionSet" name="Auto::org.eclipse.jdt.ui.SearchActionSet"/>
-  <rootContext xmi:id="_eXquSLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.SearchActionSet" name="Auto::org.eclipse.pde.ui.SearchActionSet"/>
-  <rootContext xmi:id="_eXquSbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.actionSet" name="Auto::org.eclipse.ui.cheatsheets.actionSet"/>
-  <rootContext xmi:id="_eXquSre6EeOxntPoYxjofg" elementId="org.eclipse.search.searchActionSet" name="Auto::org.eclipse.search.searchActionSet"/>
-  <rootContext xmi:id="_eXquS7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.CVSActionSet" name="Auto::org.eclipse.team.cvs.ui.CVSActionSet"/>
-  <rootContext xmi:id="_eXquTLe6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.actionSet" name="Auto::org.eclipse.team.ui.actionSet"/>
-  <rootContext xmi:id="_eXquTbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.annotationNavigation" name="Auto::org.eclipse.ui.edit.text.actionSet.annotationNavigation"/>
-  <rootContext xmi:id="_eXquTre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.navigation" name="Auto::org.eclipse.ui.edit.text.actionSet.navigation"/>
-  <rootContext xmi:id="_eXquT7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo" name="Auto::org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo"/>
-  <rootContext xmi:id="_eXquULe6EeOxntPoYxjofg" elementId="org.eclipse.ui.externaltools.ExternalToolsSet" name="Auto::org.eclipse.ui.externaltools.ExternalToolsSet"/>
-  <rootContext xmi:id="_eXquUbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.NavigateActionSet" name="Auto::org.eclipse.ui.NavigateActionSet"/>
-  <rootContext xmi:id="_eXquUre6EeOxntPoYxjofg" elementId="org.eclipse.ui.actionSet.keyBindings" name="Auto::org.eclipse.ui.actionSet.keyBindings"/>
-  <rootContext xmi:id="_eXquU7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.WorkingSetModificationActionSet" name="Auto::org.eclipse.ui.WorkingSetModificationActionSet"/>
-  <rootContext xmi:id="_eXquVLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.WorkingSetActionSet" name="Auto::org.eclipse.ui.WorkingSetActionSet"/>
-  <rootContext xmi:id="_eXquVbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.actionSet.openFiles" name="Auto::org.eclipse.ui.actionSet.openFiles"/>
-  <rootContext xmi:id="_eXquVre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.presentation" name="Auto::org.eclipse.ui.edit.text.actionSet.presentation"/>
-  <rootContext xmi:id="_eXquV7e6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.core.actionSet" name="Auto::com.google.gdt.eclipse.core.actionSet"/>
-  <rootContext xmi:id="_eXquWLe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.actionSet.jpaElementCreation" name="Auto::org.eclipse.jpt.jpa.ui.actionSet.jpaElementCreation"/>
-  <rootContext xmi:id="_eXquWbe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.ui.actionset" name="Auto::org.eclipse.wb.core.ui.actionset"/>
-  <rootContext xmi:id="_eXquWre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.text.java.actionSet.presentation" name="Auto::org.eclipse.wst.jsdt.ui.text.java.actionSet.presentation"/>
-  <rootContext xmi:id="_eXquW7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaElementCreationActionSet" name="Auto::org.eclipse.wst.jsdt.ui.JavaElementCreationActionSet"/>
-  <rootContext xmi:id="_eXquXLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaActionSet" name="Auto::org.eclipse.wst.jsdt.ui.JavaActionSet"/>
-  <rootContext xmi:id="_eXquXbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.A_OpenActionSet" name="Auto::org.eclipse.wst.jsdt.ui.A_OpenActionSet"/>
-  <rootContext xmi:id="_eXquXre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.CodingActionSet" name="Auto::org.eclipse.wst.jsdt.ui.CodingActionSet"/>
-  <rootContext xmi:id="_eXquX7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.SearchActionSet" name="Auto::org.eclipse.wst.jsdt.ui.SearchActionSet"/>
-  <rootContext xmi:id="_eXquYLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui.new.actionSet" name="Auto::org.eclipse.wst.server.ui.new.actionSet"/>
-  <rootContext xmi:id="_eXquYbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui.internal.webbrowser.actionSet" name="Auto::org.eclipse.wst.server.ui.internal.webbrowser.actionSet"/>
-  <rootContext xmi:id="_eXquYre6EeOxntPoYxjofg" elementId="org.eclipse.wst.web.ui.wizardsActionSet" name="Auto::org.eclipse.wst.web.ui.wizardsActionSet"/>
-  <descriptors xmi:id="_eXquY7e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" allowMultiple="true" category="org.eclipse.e4.primaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor">
+  <rootContext xmi:id="_JPfc27fJEeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.workbenchMenu" name="Workbench Menu" description="When no Workbench windows are active"/>
+  <rootContext xmi:id="_JPfc3LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.contexts.actionSet" name="Action Set" description="Parent context for action sets"/>
+  <rootContext xmi:id="_JPfc3bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.breadcrumbEditorScope" name="Editor Breadcrumb Navigation" description="Editor Breadcrumb Navigation Context"/>
+  <rootContext xmi:id="_JPfc3rfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchAction" name="Auto::org.eclipse.wb.core.xml.editor.actions.SwitchAction"/>
+  <rootContext xmi:id="_JPfc37fJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchPairEditorAction" name="Auto::org.eclipse.wb.core.xml.editor.actions.SwitchPairEditorAction"/>
+  <rootContext xmi:id="_JPfc4LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" name="Auto::org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction"/>
+  <rootContext xmi:id="_JPfc4bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction" name="Auto::org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_JPfc4rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" name="Auto::org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction"/>
+  <rootContext xmi:id="_JPfc47fJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.actions.ManageBreakpointRulerAction" name="Auto::org.eclipse.ant.ui.actions.ManageBreakpointRulerAction"/>
+  <rootContext xmi:id="_JPfc5LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.SnippetExecute" name="Auto::org.eclipse.jdt.debug.ui.SnippetExecute"/>
+  <rootContext xmi:id="_JPfc5bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.SnippetDisplay" name="Auto::org.eclipse.jdt.debug.ui.SnippetDisplay"/>
+  <rootContext xmi:id="_JPfc5rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.SnippetInspect" name="Auto::org.eclipse.jdt.debug.ui.SnippetInspect"/>
+  <rootContext xmi:id="_JPfc57fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.propertiesfileeditor.BookmarkRulerAction" name="Auto::org.eclipse.jdt.internal.ui.propertiesfileeditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_JPfc6LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.internal.ui.propertiesfileeditor.SelectRulerAction" name="Auto::org.eclipse.jdt.internal.ui.propertiesfileeditor.SelectRulerAction"/>
+  <rootContext xmi:id="_JPfc6bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.BookmarkRulerAction" name="Auto::org.eclipse.ui.texteditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_JPfc6rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.SelectRulerAction" name="Auto::org.eclipse.ui.texteditor.SelectRulerAction"/>
+  <rootContext xmi:id="_JPfc67fJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.editor.actions.SwitchAction" name="Auto::org.eclipse.wb.core.editor.actions.SwitchAction"/>
+  <rootContext xmi:id="_JPfc7LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.javaeditor.BookmarkRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.javaeditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_JPfc7bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.javaeditor.JavaSelectRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.javaeditor.JavaSelectRulerAction"/>
+  <rootContext xmi:id="_JPfc7rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.BookmarkRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.BookmarkRulerAction"/>
+  <rootContext xmi:id="_JPfc77fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.SelectRulerAction" name="Auto::org.eclipse.wst.jsdt.internal.ui.propertiesfileeditor.SelectRulerAction"/>
+  <rootContext xmi:id="_JPfc8LfJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.actionSet.presentation" name="Auto::org.eclipse.ant.ui.actionSet.presentation"/>
+  <rootContext xmi:id="_JPfc8bfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.breakpointActionSet" name="Auto::org.eclipse.debug.ui.breakpointActionSet"/>
+  <rootContext xmi:id="_JPfc8rfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.debugActionSet" name="Auto::org.eclipse.debug.ui.debugActionSet"/>
+  <rootContext xmi:id="_JPfc87fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.launchActionSet" name="Auto::org.eclipse.debug.ui.launchActionSet"/>
+  <rootContext xmi:id="_JPfc9LfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.profileActionSet" name="Auto::org.eclipse.debug.ui.profileActionSet"/>
+  <rootContext xmi:id="_JPgDsLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.gitaction" name="Auto::org.eclipse.egit.ui.gitaction"/>
+  <rootContext xmi:id="_JPgDsbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.navigation" name="Auto::org.eclipse.egit.ui.navigation"/>
+  <rootContext xmi:id="_JPgDsrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.JDTDebugActionSet" name="Auto::org.eclipse.jdt.debug.ui.JDTDebugActionSet"/>
+  <rootContext xmi:id="_JPgDs7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.JUnitActionSet" name="Auto::org.eclipse.jdt.junit.JUnitActionSet"/>
+  <rootContext xmi:id="_JPgDtLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.text.java.actionSet.presentation" name="Auto::org.eclipse.jdt.ui.text.java.actionSet.presentation"/>
+  <rootContext xmi:id="_JPgDtbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaElementCreationActionSet" name="Auto::org.eclipse.jdt.ui.JavaElementCreationActionSet"/>
+  <rootContext xmi:id="_JPgDtrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaActionSet" name="Auto::org.eclipse.jdt.ui.JavaActionSet"/>
+  <rootContext xmi:id="_JPgDt7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.A_OpenActionSet" name="Auto::org.eclipse.jdt.ui.A_OpenActionSet"/>
+  <rootContext xmi:id="_JPgDuLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.CodingActionSet" name="Auto::org.eclipse.jdt.ui.CodingActionSet"/>
+  <rootContext xmi:id="_JPgDubfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SearchActionSet" name="Auto::org.eclipse.jdt.ui.SearchActionSet"/>
+  <rootContext xmi:id="_JPgDurfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.SearchActionSet" name="Auto::org.eclipse.pde.ui.SearchActionSet"/>
+  <rootContext xmi:id="_JPgDu7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.actionSet" name="Auto::org.eclipse.ui.cheatsheets.actionSet"/>
+  <rootContext xmi:id="_JPgDvLfJEeOxntPoYxjofg" elementId="org.eclipse.search.searchActionSet" name="Auto::org.eclipse.search.searchActionSet"/>
+  <rootContext xmi:id="_JPgDvbfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.CVSActionSet" name="Auto::org.eclipse.team.cvs.ui.CVSActionSet"/>
+  <rootContext xmi:id="_JPgDvrfJEeOxntPoYxjofg" elementId="org.eclipse.team.ui.actionSet" name="Auto::org.eclipse.team.ui.actionSet"/>
+  <rootContext xmi:id="_JPgDv7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.annotationNavigation" name="Auto::org.eclipse.ui.edit.text.actionSet.annotationNavigation"/>
+  <rootContext xmi:id="_JPgDwLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.navigation" name="Auto::org.eclipse.ui.edit.text.actionSet.navigation"/>
+  <rootContext xmi:id="_JPgDwbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo" name="Auto::org.eclipse.ui.edit.text.actionSet.convertLineDelimitersTo"/>
+  <rootContext xmi:id="_JPgDwrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.externaltools.ExternalToolsSet" name="Auto::org.eclipse.ui.externaltools.ExternalToolsSet"/>
+  <rootContext xmi:id="_JPgDw7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.NavigateActionSet" name="Auto::org.eclipse.ui.NavigateActionSet"/>
+  <rootContext xmi:id="_JPgDxLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.actionSet.keyBindings" name="Auto::org.eclipse.ui.actionSet.keyBindings"/>
+  <rootContext xmi:id="_JPgDxbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.WorkingSetModificationActionSet" name="Auto::org.eclipse.ui.WorkingSetModificationActionSet"/>
+  <rootContext xmi:id="_JPgDxrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.WorkingSetActionSet" name="Auto::org.eclipse.ui.WorkingSetActionSet"/>
+  <rootContext xmi:id="_JPgDx7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.actionSet.openFiles" name="Auto::org.eclipse.ui.actionSet.openFiles"/>
+  <rootContext xmi:id="_JPgDyLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.actionSet.presentation" name="Auto::org.eclipse.ui.edit.text.actionSet.presentation"/>
+  <rootContext xmi:id="_JPgDybfJEeOxntPoYxjofg" elementId="com.google.gdt.eclipse.core.actionSet" name="Auto::com.google.gdt.eclipse.core.actionSet"/>
+  <rootContext xmi:id="_JPgDyrfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.actionSet.jpaElementCreation" name="Auto::org.eclipse.jpt.jpa.ui.actionSet.jpaElementCreation"/>
+  <rootContext xmi:id="_JPgDy7fJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.ui.actionset" name="Auto::org.eclipse.wb.core.ui.actionset"/>
+  <rootContext xmi:id="_JPgDzLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.text.java.actionSet.presentation" name="Auto::org.eclipse.wst.jsdt.ui.text.java.actionSet.presentation"/>
+  <rootContext xmi:id="_JPgDzbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaElementCreationActionSet" name="Auto::org.eclipse.wst.jsdt.ui.JavaElementCreationActionSet"/>
+  <rootContext xmi:id="_JPgDzrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaActionSet" name="Auto::org.eclipse.wst.jsdt.ui.JavaActionSet"/>
+  <rootContext xmi:id="_JPgDz7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.A_OpenActionSet" name="Auto::org.eclipse.wst.jsdt.ui.A_OpenActionSet"/>
+  <rootContext xmi:id="_JPgD0LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.CodingActionSet" name="Auto::org.eclipse.wst.jsdt.ui.CodingActionSet"/>
+  <rootContext xmi:id="_JPgD0bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.SearchActionSet" name="Auto::org.eclipse.wst.jsdt.ui.SearchActionSet"/>
+  <rootContext xmi:id="_JPgD0rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui.new.actionSet" name="Auto::org.eclipse.wst.server.ui.new.actionSet"/>
+  <rootContext xmi:id="_JPgD07fJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui.internal.webbrowser.actionSet" name="Auto::org.eclipse.wst.server.ui.internal.webbrowser.actionSet"/>
+  <rootContext xmi:id="_JPgD1LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.web.ui.wizardsActionSet" name="Auto::org.eclipse.wst.web.ui.wizardsActionSet"/>
+  <descriptors xmi:id="_JPgD1bfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.compatibility.editor" allowMultiple="true" category="org.eclipse.e4.primaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor">
     <tags>Editor</tags>
   </descriptors>
-  <descriptors xmi:id="_eXquZLe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.views.AntView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD1rfJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.views.AntView" label="Ant" iconURI="platform:/plugin/org.eclipse.ant.ui/icons/full/eview16/ant_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Ant</tags>
   </descriptors>
-  <descriptors xmi:id="_eXquZbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.DebugView" label="Debug" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/debug_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD17fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.DebugView" label="Debug" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/debug_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Debug</tags>
   </descriptors>
-  <descriptors xmi:id="_eXquZre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.BreakpointView" label="Breakpoints" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/breakpoint_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD2LfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.BreakpointView" label="Breakpoints" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/breakpoint_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Debug</tags>
   </descriptors>
-  <descriptors xmi:id="_eXquZ7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.VariableView" label="Variables" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/variable_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD2bfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.VariableView" label="Variables" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/variable_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Debug</tags>
   </descriptors>
-  <descriptors xmi:id="_eXquaLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.ExpressionView" label="Expressions" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/watchlist_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD2rfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.ExpressionView" label="Expressions" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/watchlist_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Debug</tags>
   </descriptors>
-  <descriptors xmi:id="_eXquabe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.RegisterView" label="Registers" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/register_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD27fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.RegisterView" label="Registers" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/register_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Debug</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVILe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.ModuleView" label="Modules" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/module_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD3LfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.ModuleView" label="Modules" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/module_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Debug</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVIbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.MemoryView" label="Memory" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/memory_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD3bfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.MemoryView" label="Memory" iconURI="platform:/plugin/org.eclipse.debug.ui/icons/full/eview16/memory_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Debug</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVIre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD3rfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesView" label="Git Repositories" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/repo_rep.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Git</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVI7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.StagingView" label="Git Staging" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/staging.png" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD37fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.StagingView" label="Git Staging" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/staging.png" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Git</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVJLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.CompareTreeView" label="Git Tree Compare" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/obj16/gitrepository.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD4LfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.CompareTreeView" label="Git Tree Compare" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/obj16/gitrepository.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Git</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVJbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ReflogView" label="Git Reflog" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/reflog.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD4bfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ReflogView" label="Git Reflog" iconURI="platform:/plugin/org.eclipse.egit.ui/icons/eview16/reflog.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Git</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVJre6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.HelpView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD4rfJEeOxntPoYxjofg" elementId="org.eclipse.help.ui.HelpView" label="Help" iconURI="platform:/plugin/org.eclipse.help.ui/icons/view16/help_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Help</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVJ7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.DisplayView" label="Display" iconURI="platform:/plugin/org.eclipse.jdt.debug.ui/icons/full/etool16/disp_sbook.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD47fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.DisplayView" label="Display" iconURI="platform:/plugin/org.eclipse.jdt.debug.ui/icons/full/etool16/disp_sbook.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Debug</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVKLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.ResultView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD5LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.ResultView" label="JUnit" iconURI="platform:/plugin/org.eclipse.jdt.junit/icons/full/eview16/junit.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVKbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD5bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackageExplorer" label="Package Explorer" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/package.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVKre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypeHierarchy" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD5rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypeHierarchy" label="Type Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/class_hi.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVK7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.ProjectsView" label="Projects" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/projects.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD57fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.ProjectsView" label="Projects" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/projects.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java Browsing</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVLLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackagesView" label="Packages" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/packages.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD6LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.PackagesView" label="Packages" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/packages.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java Browsing</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVLbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypesView" label="Types" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/types.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD6bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.TypesView" label="Types" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/types.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java Browsing</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVLre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.MembersView" label="Members" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/members.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD6rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.MembersView" label="Members" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/members.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java Browsing</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVL7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.callhierarchy.view" label="Call Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/call_hierarchy.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD67fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.callhierarchy.view" label="Call Hierarchy" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/call_hierarchy.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVMLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.TemplatesView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD7LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.texteditor.TemplatesView" label="Templates" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/templates.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVMbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SourceView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD7bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.SourceView" label="Declaration" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/source.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVMre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavadocView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD7rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavadocView" label="Javadoc" iconURI="platform:/plugin/org.eclipse.jdt.ui/icons/full/eview16/javadoc.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Java</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVM7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.api.tools.ui.views.apitooling.views.apitoolingview" label="API Tools" iconURI="platform:/plugin/org.eclipse.pde.api.tools.ui/icons/full/obj16/api_tools.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD77fJEeOxntPoYxjofg" elementId="org.eclipse.pde.api.tools.ui.views.apitooling.views.apitoolingview" label="API Tools" iconURI="platform:/plugin/org.eclipse.pde.api.tools.ui/icons/full/obj16/api_tools.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:API Tools</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVNLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.RegistryBrowser" label="Plug-in Registry" iconURI="platform:/plugin/org.eclipse.pde.runtime/icons/eview16/registry.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD8LfJEeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.RegistryBrowser" label="Plug-in Registry" iconURI="platform:/plugin/org.eclipse.pde.runtime/icons/eview16/registry.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Plug-in Development</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVNbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.PluginsView" label="Plug-ins" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/eview16/plugin_depend.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD8bfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.PluginsView" label="Plug-ins" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/eview16/plugin_depend.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Plug-in Development</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVNre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.DependenciesView" label="Plug-in Dependencies" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/obj16/req_plugins_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD8rfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.DependenciesView" label="Plug-in Dependencies" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/obj16/req_plugins_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Plug-in Development</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVN7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.TargetPlatformState" label="Target Platform State" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/obj16/target_profile_xml_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD87fJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.TargetPlatformState" label="Target Platform State" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/obj16/target_profile_xml_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Plug-in Development</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVOLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.ImageBrowserView" label="Plug-in Image Browser" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/obj16/psearch_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD9LfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.ImageBrowserView" label="Plug-in Image Browser" iconURI="platform:/plugin/org.eclipse.pde.ui/icons/obj16/psearch_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Plug-in Development</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVObe6EeOxntPoYxjofg" elementId="org.eclipse.search.SearchResultView" label="Classic Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD9bfJEeOxntPoYxjofg" elementId="org.eclipse.search.SearchResultView" label="Classic Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVOre6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.views.SearchView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD9rfJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.views.SearchView" label="Search" iconURI="platform:/plugin/org.eclipse.search/icons/full/eview16/searchres.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVO7e6EeOxntPoYxjofg" elementId="org.eclipse.team.ccvs.ui.RepositoriesView" label="CVS Repositories" iconURI="platform:/plugin/org.eclipse.team.cvs.ui/icons/full/eview16/repo_rep.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD97fJEeOxntPoYxjofg" elementId="org.eclipse.team.ccvs.ui.RepositoriesView" label="CVS Repositories" iconURI="platform:/plugin/org.eclipse.team.cvs.ui/icons/full/eview16/repo_rep.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:CVS</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVPLe6EeOxntPoYxjofg" elementId="org.eclipse.team.ccvs.ui.EditorsView" label="CVS Editors" iconURI="platform:/plugin/org.eclipse.team.cvs.ui/icons/full/eview16/rep_editors_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD-LfJEeOxntPoYxjofg" elementId="org.eclipse.team.ccvs.ui.EditorsView" label="CVS Editors" iconURI="platform:/plugin/org.eclipse.team.cvs.ui/icons/full/eview16/rep_editors_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:CVS</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVPbe6EeOxntPoYxjofg" elementId="org.eclipse.team.sync.views.SynchronizeView" label="Synchronize" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/synch_synch.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD-bfJEeOxntPoYxjofg" elementId="org.eclipse.team.sync.views.SynchronizeView" label="Synchronize" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/synch_synch.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Team</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVPre6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.GenericHistoryView" label="History" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/history_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD-rfJEeOxntPoYxjofg" elementId="org.eclipse.team.ui.GenericHistoryView" label="History" iconURI="platform:/plugin/org.eclipse.team.ui/icons/full/eview16/history_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Team</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVP7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD-7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.internal.introview" label="Welcome" iconURI="platform:/plugin/org.eclipse.ui/icons/full/eview16/defaultview_misc.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVQLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.browser.view" label="Internal Web Browser" iconURI="platform:/plugin/org.eclipse.ui.browser/icons/obj16/internal_browser.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD_LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.browser.view" label="Internal Web Browser" iconURI="platform:/plugin/org.eclipse.ui.browser/icons/obj16/internal_browser.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVQbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD_bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.views.CheatSheetView" label="Cheat Sheets" iconURI="platform:/plugin/org.eclipse.ui.cheatsheets/icons/view16/cheatsheet_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Help</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVQre6EeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD_rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.console.ConsoleView" label="Console" iconURI="platform:/plugin/org.eclipse.ui.console/icons/full/cview16/console_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVQ7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProgressView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgD_7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProgressView" label="Progress" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/pview.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVRLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ResourceNavigator" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.gif" category="org.eclipse.e4.primaryNavigationStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgEALfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ResourceNavigator" label="Navigator" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/filenav_nav.gif" category="org.eclipse.e4.primaryNavigationStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVRbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.BookmarkView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgEAbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.BookmarkView" label="Bookmarks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/bkmrk_nav.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVRre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.TaskList" label="Tasks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/tasks_tsk.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgEArfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.TaskList" label="Tasks" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/tasks_tsk.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVR7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgEA7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ProblemView" label="Problems" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVSLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.AllMarkersView" label="Markers" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqwLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.AllMarkersView" label="Markers" iconURI="platform:/plugin/org.eclipse.ui.ide/icons/full/eview16/problems_view.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVSbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigator.ProjectExplorer" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" category="org.eclipse.e4.primaryNavigationStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqwbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigator.ProjectExplorer" label="Project Explorer" iconURI="platform:/plugin/org.eclipse.ui.navigator.resources/icons/full/eview16/resource_persp.gif" category="org.eclipse.e4.primaryNavigationStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVSre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.PropertySheet" label="Properties" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/prop_ps.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqwrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.PropertySheet" label="Properties" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/prop_ps.gif" allowMultiple="true" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVS7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.gif" category="org.eclipse.e4.secondaryNavigationStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqw7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.ContentOutline" label="Outline" iconURI="platform:/plugin/org.eclipse.ui.views/icons/full/eview16/outline_co.gif" category="org.eclipse.e4.secondaryNavigationStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVTLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.LogView" label="Error Log" iconURI="platform:/plugin/org.eclipse.ui.views.log/icons/eview16/error_log.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqxLfJEeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.LogView" label="Error Log" iconURI="platform:/plugin/org.eclipse.ui.views.log/icons/eview16/error_log.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:General</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVTbe6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.DevModeView" label="Development Mode" iconURI="platform:/plugin/com.google.gwt.eclipse.oophm/icons/gwt_oophm_16x16.png" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqxbfJEeOxntPoYxjofg" elementId="com.google.gwt.eclipse.DevModeView" label="Development Mode" iconURI="platform:/plugin/com.google.gwt.eclipse.oophm/icons/gwt_oophm_16x16.png" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Google</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVTre6EeOxntPoYxjofg" elementId="org.eclipse.jpt.ui.jpaStructureView" label="JPA Structure" iconURI="platform:/plugin/org.eclipse.jpt.jpa.ui/images/views/jpa-structure.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqxrfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.ui.jpaStructureView" label="JPA Structure" iconURI="platform:/plugin/org.eclipse.jpt.jpa.ui/images/views/jpa-structure.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:JPA</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVT7e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.ui.jpaDetailsView" label="JPA Details" iconURI="platform:/plugin/org.eclipse.jpt.jpa.ui/images/views/jpa-details.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqx7fJEeOxntPoYxjofg" elementId="org.eclipse.jpt.ui.jpaDetailsView" label="JPA Details" iconURI="platform:/plugin/org.eclipse.jpt.jpa.ui/images/views/jpa-details.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:JPA</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVULe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.StructureView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqyLfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.StructureView" label="Structure" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/properties_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:WindowBuilder</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVUbe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.PaletteView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqybfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.PaletteView" label="Palette" iconURI="platform:/plugin/org.eclipse.wb.core/icons/structure/palette.png" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:WindowBuilder</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVUre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.PackageExplorer" label="Script Explorer" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/package.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqyrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.PackageExplorer" label="Script Explorer" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/package.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:JavaScript</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVU7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.TypeHierarchy" label="Hierarchy" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/class_hi.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqy7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.TypeHierarchy" label="Hierarchy" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/class_hi.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:JavaScript</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVVLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.callhierarchy.view" label="Call Hierarchy" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/call_hierarchy.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqzLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.callhierarchy.view" label="Call Hierarchy" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/call_hierarchy.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:JavaScript</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVVbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.SourceView" label="Declaration" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/source.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqzbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.SourceView" label="Declaration" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/source.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:JavaScript</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVVre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavadocView" label="Documentation" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/javadoc.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqzrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavadocView" label="Documentation" iconURI="platform:/plugin/org.eclipse.wst.jsdt.ui/icons/full/eview16/javadoc.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:JavaScript</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVV7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui.ServersView" label="Servers" iconURI="platform:/plugin/org.eclipse.wst.server.ui/icons/cview16/servers_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgqz7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui.ServersView" label="Servers" iconURI="platform:/plugin/org.eclipse.wst.server.ui/icons/cview16/servers_view.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:Server</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVWLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.views.annotations.XMLAnnotationsView" label="Documentation" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/obj16/comment_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgq0LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.views.annotations.XMLAnnotationsView" label="Documentation" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/obj16/comment_obj.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:XML</tags>
   </descriptors>
-  <descriptors xmi:id="_eXrVWbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.contentmodel.view" label="Content Model" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/view16/hierarchy.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
+  <descriptors xmi:id="_JPgq0bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.contentmodel.view" label="Content Model" iconURI="platform:/plugin/org.eclipse.wst.xml.ui/icons/full/view16/hierarchy.gif" category="org.eclipse.e4.secondaryDataStack" closeable="true" contributionURI="bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView">
     <tags>View</tags>
     <tags>categoryTag:XML</tags>
   </descriptors>
-  <commands xmi:id="_eXz4Jbe6EeOxntPoYxjofg" elementId="e4.exit" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.exit" description=""/>
-  <commands xmi:id="_eX0fELe6EeOxntPoYxjofg" elementId="e4.show.view" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.showView">
-    <parameters xmi:id="_eX0fEbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" contributorURI="platform:/plugin/org.eclipse.platform" name="View"/>
+  <commands xmi:id="_JPpNwbfJEeOxntPoYxjofg" elementId="e4.exit" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.exit" description=""/>
+  <commands xmi:id="_JPpNwrfJEeOxntPoYxjofg" elementId="e4.show.view" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.showView">
+    <parameters xmi:id="_JPp0sLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" contributorURI="platform:/plugin/org.eclipse.platform" name="View"/>
   </commands>
-  <commands xmi:id="_eX0fEre6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveCommands" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.save"/>
-  <commands xmi:id="_eX0fE7e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveAllCommands" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.saveAll"/>
-  <commands xmi:id="_eX0fFLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.command.nextpage" commandName="Next Page of Memory" description="Load next page of memory" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fFbe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.GenerateDiff" commandName="Create Patch" description="Compare your workspace contents with the server and generate a diff file that can be used as a patch file." category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fFre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.removeTrailingWhitespace" commandName="Remove Trailing Whitespace" description="Removes the trailing whitespace of each line" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fF7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fGLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleMarkOccurrences" commandName="Toggle Mark Occurrences" description="Toggles mark occurrences in Java editors" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fGbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.spy.commands.spyCommand" commandName="Plug-in Selection Spy" description="Show the Plug-in Spy" category="_eYGL6be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fGre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.use.supertype" commandName="Use Supertype Where Possible" description="Change occurrences of a type to use a supertype instead" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fG7e6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.import" commandName="Import Profiles Command" description="Command to import connection profiles" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fHLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.textStart" commandName="Select Text Start" description="Select to the beginning of the text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fHbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.open.type.in.hierarchy" commandName="Open Type in Hierarchy" description="Open a type in the type hierarchy view" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fHre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaBrowsingPerspective" commandName="Java Browsing" description="Show the Java Browsing perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fH7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.refactor.quickMenu" commandName="Show Refactor Quick Menu" description="Shows the refactor quick menu" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fILe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.project" commandName="Read Access in Project" description="Search for read references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fIbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineEnd" commandName="Select Line End" description="Select to the end of the line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fIre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithHead" commandName="Compare with HEAD Revision" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fI7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.surround.with.quickMenu" commandName="Surround With Quick Menu" description="Shows the Surround With quick menu" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fJLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.smartEnterInverse" commandName="Insert Line Above Current Line" description="Adds a new line above the current line" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fJbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.externalTools.commands.OpenExternalToolsConfigurations" commandName="External Tools..." description="Open external tools launch configuration dialog" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fJre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaPerspective" commandName="JavaScript" description="Show the JavaScript perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fJ7e6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.TeamSynchronizingPerspective" commandName="Team Synchronizing" description="Open the Team Synchronizing Perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fKLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.StepOver" commandName="Step Over" description="Step over" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fKbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewOpenInEditor" commandName="Open in Editor" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fKre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.quickMenu" commandName="Surround With Quick Menu" description="Shows the Surround With quick menu" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fK7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.addMemoryMonitor" commandName="Add Memory Block" description="Add memory block" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fLLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRebase" commandName="Rebase" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fLbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.revertToSaved" commandName="Revert to Saved" description="Revert to the last saved state" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fLre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implement.occurrences" commandName="Search Implement Occurrences in File" description="Search for implement occurrences of a selected type" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fL7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggle.comment" commandName="Toggle Comment" description="Toggle comment the selected lines" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fMLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.format.active.elements" commandName="Format Active Elements" description="Format active elements" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fMbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.catch" commandName="Surround with try/catch Block" description="Surround the selected text with a try/catch block" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fMre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.convert.anonymous.to.nested" commandName="Convert Anonymous Class to Nested" description="Convert an anonymous class to a nested class" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fM7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.PushHeadToGerrit" commandName="Push Current Head to Gerrit" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fNLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineDown" commandName="Select Line Down" description="Extend the selection to the next line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fNbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.remove.occurrence.annotations" commandName="Remove Occurrence Annotations" description="Removes the occurrence annotations from the current editor" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX0fNre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.showContextMenu" commandName="Show Context Menu" description="Show the context menu" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GILe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.stash.drop" commandName="Delete Stashed Commit..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GIbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.markCompleted" commandName="Mark Completed" description="Mark the selected tasks as completed" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GIre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.rename.element" commandName="Rename - Refactoring " description="Rename the selected element" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GI7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.textEnd" commandName="Text End" description="Go to the end of the text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GJLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.copy.qualified.name" commandName="Copy Qualified Name" description="Copy a fully qualified name to the system clipboard" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GJbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.delete" commandName="Delete" description="Delete the selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GJre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewChangeCredentials" commandName="Change Credentials" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GJ7e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentAttributeMapAs" commandName="Map As" category="_eYGL8Le6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX1GKLe6EeOxntPoYxjofg" elementId="specifiedPersistentAttributeMappingKey" name="specified mapping key" optional="false"/>
-    <parameters xmi:id="_eX1GKbe6EeOxntPoYxjofg" elementId="defaultPersistentAttributeMappingKey" name="default mapping key" optional="false"/>
+  <commands xmi:id="_JPp0sbfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveCommands" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.save"/>
+  <commands xmi:id="_JPp0srfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.saveAllCommands" contributorURI="platform:/plugin/org.eclipse.platform" commandName="%command.name.saveAll"/>
+  <commands xmi:id="_JPp0s7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.command.nextpage" commandName="Next Page of Memory" description="Load next page of memory" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0tLfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.GenerateDiff" commandName="Create Patch" description="Compare your workspace contents with the server and generate a diff file that can be used as a patch file." category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0tbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.removeTrailingWhitespace" commandName="Remove Trailing Whitespace" description="Removes the trailing whitespace of each line" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0trfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0t7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleMarkOccurrences" commandName="Toggle Mark Occurrences" description="Toggles mark occurrences in Java editors" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0uLfJEeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.spy.commands.spyCommand" commandName="Plug-in Selection Spy" description="Show the Plug-in Spy" category="_JP7hiLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0ubfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.use.supertype" commandName="Use Supertype Where Possible" description="Change occurrences of a type to use a supertype instead" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0urfJEeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.import" commandName="Import Profiles Command" description="Command to import connection profiles" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0u7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.textStart" commandName="Select Text Start" description="Select to the beginning of the text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0vLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.open.type.in.hierarchy" commandName="Open Type in Hierarchy" description="Open a type in the type hierarchy view" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0vbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaBrowsingPerspective" commandName="Java Browsing" description="Show the Java Browsing perspective" category="_JP7hhLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0vrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.refactor.quickMenu" commandName="Show Refactor Quick Menu" description="Shows the refactor quick menu" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0v7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.project" commandName="Read Access in Project" description="Search for read references to the selected element in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0wLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineEnd" commandName="Select Line End" description="Select to the end of the line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0wbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithHead" commandName="Compare with HEAD Revision" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0wrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.surround.with.quickMenu" commandName="Surround With Quick Menu" description="Shows the Surround With quick menu" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0w7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.smartEnterInverse" commandName="Insert Line Above Current Line" description="Adds a new line above the current line" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0xLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.externalTools.commands.OpenExternalToolsConfigurations" commandName="External Tools..." description="Open external tools launch configuration dialog" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0xbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaPerspective" commandName="JavaScript" description="Show the JavaScript perspective" category="_JP7hhLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0xrfJEeOxntPoYxjofg" elementId="org.eclipse.team.ui.TeamSynchronizingPerspective" commandName="Team Synchronizing" description="Open the Team Synchronizing Perspective" category="_JP7hhLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0x7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.StepOver" commandName="Step Over" description="Step over" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0yLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewOpenInEditor" commandName="Open in Editor" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0ybfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.quickMenu" commandName="Surround With Quick Menu" description="Shows the Surround With quick menu" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0yrfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.addMemoryMonitor" commandName="Add Memory Block" description="Add memory block" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0y7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRebase" commandName="Rebase" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0zLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.revertToSaved" commandName="Revert to Saved" description="Revert to the last saved state" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0zbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implement.occurrences" commandName="Search Implement Occurrences in File" description="Search for implement occurrences of a selected type" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0zrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggle.comment" commandName="Toggle Comment" description="Toggle comment the selected lines" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp0z7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.format.active.elements" commandName="Format Active Elements" description="Format active elements" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp00LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.catch" commandName="Surround with try/catch Block" description="Surround the selected text with a try/catch block" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp00bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.convert.anonymous.to.nested" commandName="Convert Anonymous Class to Nested" description="Convert an anonymous class to a nested class" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp00rfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.PushHeadToGerrit" commandName="Push Current Head to Gerrit" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp007fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineDown" commandName="Select Line Down" description="Extend the selection to the next line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPp01LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.remove.occurrence.annotations" commandName="Remove Occurrence Annotations" description="Removes the occurrence annotations from the current editor" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbwLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.showContextMenu" commandName="Show Context Menu" description="Show the context menu" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbwbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.stash.drop" commandName="Delete Stashed Commit..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbwrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.ide.markCompleted" commandName="Mark Completed" description="Mark the selected tasks as completed" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbw7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.rename.element" commandName="Rename - Refactoring " description="Rename the selected element" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbxLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.textEnd" commandName="Text End" description="Go to the end of the text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbxbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.copy.qualified.name" commandName="Copy Qualified Name" description="Copy a fully qualified name to the system clipboard" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbxrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.delete" commandName="Delete" description="Delete the selection" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbx7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewChangeCredentials" commandName="Change Credentials" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbyLfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentAttributeMapAs" commandName="Map As" category="_JP7hj7fJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPqbybfJEeOxntPoYxjofg" elementId="specifiedPersistentAttributeMappingKey" name="specified mapping key" optional="false"/>
+    <parameters xmi:id="_JPqbyrfJEeOxntPoYxjofg" elementId="defaultPersistentAttributeMappingKey" name="default mapping key" optional="false"/>
   </commands>
-  <commands xmi:id="_eX1GKre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.multicatch" commandName="Surround with try/multi-catch Block" description="Surround the selected text with a try/multi-catch block" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GK7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CreateTag" commandName="Create Tag" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GLLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ProfileLast" commandName="Profile" description="Launch in profile mode" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GLbe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentAttributeAddToXml" commandName="Add Attribute to XML" category="_eYGL8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GLre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace" commandName="References in Workspace" description="Search for references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GL7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewPaste" commandName="Paste Repository Path or URI" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GMLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.previous" commandName="Previous" description="Navigate to the previous item" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GMbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleBreadcrumb" commandName="Toggle Java Editor Breadcrumb" description="Toggle the Java editor breadcrumb" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GMre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.call.hierarchy" commandName="Open Call Hierarchy" description="Open a call hierarchy on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GM7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateTag" commandName="Create Tag..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GNLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.extractConstant.assist" commandName="Quick Assist - Extract constant" description="Invokes quick assist and selects 'Extract constant'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GNbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.newQuickMenu" commandName="New menu" description="Open the New menu" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GNre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deleteNext" commandName="Delete Next" description="Delete the next character" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GN7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deleteNextWord" commandName="Delete Next Word" description="Delete the next word" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GOLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.undo" commandName="Undo" description="Undo the last operation" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GObe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.DebugLast" commandName="Debug" description="Launch in debug mode" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GOre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.external.javadoc" commandName="Open External JSDoc" description="Open the JSDoc of the selected element in an external browser" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GO7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleLineBreakpoint" commandName="Toggle Line Breakpoint" description="Creates or removes a line breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GPLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.lineNumberToggle" commandName="Show Line Numbers" description="Toggle display of line numbers" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GPbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.workspace" commandName="Read Access in Workspace" description="Search for read references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GPre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.renameInFile.assist" commandName="Quick Assist - Rename in file" description="Invokes quick assist and selects 'Rename in file'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GP7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.newEditor" commandName="New Editor" description="Open another editor on the active editor's input" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GQLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.wordPrevious" commandName="Previous Word" description="Go to the previous word" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GQbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.installationDialog" commandName="Installation Information" description="Open the installation dialog" category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GQre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithIndex" commandName="Compare with Git Index" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GQ7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.shiftRight" commandName="Shift Right" description="Shift a block of text to the right" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GRLe6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.managedapis.updateCommand" commandName="Update Google API" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1GRbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.nextSibling" commandName="Next Sibling" description="Go to Next Sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tMLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.specific_content_assist.command" commandName="Content Assist" description="A parameterizable command that invokes content assist with a single completion proposal category" category="_eYGy8Le6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX1tMbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.specific_content_assist.category_id" name="type" optional="false"/>
+  <commands xmi:id="_JPqby7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.surround.with.try.multicatch" commandName="Surround with try/multi-catch Block" description="Surround the selected text with a try/multi-catch block" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbzLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CreateTag" commandName="Create Tag" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbzbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ProfileLast" commandName="Profile" description="Launch in profile mode" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbzrfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentAttributeAddToXml" commandName="Add Attribute to XML" category="_JP7hj7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqbz7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace" commandName="References in Workspace" description="Search for references to the selected element in the workspace" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb0LfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewPaste" commandName="Paste Repository Path or URI" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb0bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.previous" commandName="Previous" description="Navigate to the previous item" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb0rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.toggleBreadcrumb" commandName="Toggle Java Editor Breadcrumb" description="Toggle the Java editor breadcrumb" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb07fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.call.hierarchy" commandName="Open Call Hierarchy" description="Open a call hierarchy on the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb1LfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateTag" commandName="Create Tag..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb1bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.extractConstant.assist" commandName="Quick Assist - Extract constant" description="Invokes quick assist and selects 'Extract constant'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb1rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.newQuickMenu" commandName="New menu" description="Open the New menu" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb17fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deleteNext" commandName="Delete Next" description="Delete the next character" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb2LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deleteNextWord" commandName="Delete Next Word" description="Delete the next word" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb2bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.undo" commandName="Undo" description="Undo the last operation" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb2rfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.DebugLast" commandName="Debug" description="Launch in debug mode" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb27fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.external.javadoc" commandName="Open External JSDoc" description="Open the JSDoc of the selected element in an external browser" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb3LfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleLineBreakpoint" commandName="Toggle Line Breakpoint" description="Creates or removes a line breakpoint" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb3bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.editors.lineNumberToggle" commandName="Show Line Numbers" description="Toggle display of line numbers" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb3rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.workspace" commandName="Read Access in Workspace" description="Search for read references to the selected element in the workspace" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb37fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.renameInFile.assist" commandName="Quick Assist - Rename in file" description="Invokes quick assist and selects 'Rename in file'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb4LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.newEditor" commandName="New Editor" description="Open another editor on the active editor's input" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb4bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.wordPrevious" commandName="Previous Word" description="Go to the previous word" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb4rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.help.installationDialog" commandName="Installation Information" description="Open the installation dialog" category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb47fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithIndex" commandName="Compare with Git Index" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPqb5LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.shiftRight" commandName="Shift Right" description="Shift a block of text to the right" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC0LfJEeOxntPoYxjofg" elementId="com.google.gdt.eclipse.managedapis.updateCommand" commandName="Update Google API" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC0bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.nextSibling" commandName="Next Sibling" description="Go to Next Sibling" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC0rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.specific_content_assist.command" commandName="Content Assist" description="A parameterizable command that invokes content assist with a single completion proposal category" category="_JP8Ik7fJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPrC07fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.specific_content_assist.category_id" name="type" optional="false"/>
   </commands>
-  <commands xmi:id="_eX1tMre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.Merge" commandName="Merge" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tM7e6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchWorkingSet" commandName="Find Text in Working Set" description="Searches the files in the working set for specific text." category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tNLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.working.set" commandName="References in Working Set" description="Search for references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tNbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delete.line.to.end" commandName="Delete to End of Line" description="Delete to the end of a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tNre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.nextEditor" commandName="Next Editor" description="Switch to the next editor" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tN7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.factory" commandName="Introduce Factory" description="Introduce a factory method to encapsulate invocation of the selected constructor" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tOLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ShowBlame" commandName="Show Annotations" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tObe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.forward" commandName="Forward" description="Navigate forward" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tOre6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.cmnd.contentmodel.sych" commandName="Synch" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tO7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.updateSwitch" commandName="Switch to Another Branch or Version" description="Switch to Another Branch or Version" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tPLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.replace.invocations" commandName="Replace Invocations" description="Replace invocations of the selected method" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tPbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.closeAllSaved" commandName="Close All Saved" description="Close all saved editors" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tPre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deletePreviousWord" commandName="Delete Previous Word" description="Delete the previous word" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tP7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.indent" commandName="Indent Line" description="Indents the current line" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tQLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.toggle.comment" commandName="Toggle Comment" description="Toggle Comment" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tQbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deletePrevious" commandName="Delete Previous" description="Delete the previous character" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tQre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.set.mark" commandName="Set Mark" description="Set the mark" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tQ7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.OpenCommit" commandName="Open Git Commit" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tRLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.RenameBranch" commandName="Rename Branch" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tRbe6EeOxntPoYxjofg" elementId="org.eclipse.epp.mpc.ui.command.showMarketplaceWizard" commandName="Eclipse Marketplace" description="Show the Eclipse Marketplace wizard" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tRre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.exit" commandName="Exit" description="Exit the application" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tR7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ConfigurePush" commandName="Configure Upstream Push" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tSLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.deleteCompleted" commandName="Delete Completed Tasks" description="Delete the tasks marked as completed" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tSbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.DebugPerspective" commandName="Debug" description="Open the debug perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tSre6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactoring.commands.deleteResources" commandName="Delete Resources" description="Delete the selected resources and notify LTK participants." category="_eYGy9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tS7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.generate.javadoc" commandName="Generate JSDoc" description="Generates JSDoc for a selectable set of JavaScript resources" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tTLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.next" commandName="Next" description="Navigate to the next item" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tTbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.show.outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tTre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.local.variable" commandName="Extract Local Variable" description="Extracts an expression into a new local variable and uses the new local variable" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tT7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.project" commandName="References in Project" description="Search for references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tULe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildAutomatically" commandName="Build Automatically" description="Toggle the workspace build automatically function" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tUbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tUre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.workspace" commandName="Declaration in Workspace" description="Search for declarations of the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tU7e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.xmlFileUpgradeToLatestVersion" commandName="Upgrade JPA Document Version" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX1tVLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.hierarchy" commandName="References in Hierarchy" description="Search for references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UQLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.openDependencies" commandName="Open Plug-in Dependencies" description="Opens the plug-in dependencies view for the current plug-in" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UQbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.ProjectsView" commandName="JavaScript Projects" description="Show the Projects view" category="_eYGL6re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UQre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.organize.imports" commandName="Organize Imports" description="Evaluate all required imports and replace the current imports" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UQ7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.rerunFailedFirst" commandName="Rerun JUnit Test - Failures First" description="Rerun JUnit Test - Failures First" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2URLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.browser.openBundleResource" commandName="Open Resource in Browser" description="Opens a bundle resource in the default web browser." category="_eYGL57e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX2URbe6EeOxntPoYxjofg" elementId="plugin" name="Plugin"/>
-    <parameters xmi:id="_eX2URre6EeOxntPoYxjofg" elementId="path" name="Path"/>
+  <commands xmi:id="_JPrC1LfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.Merge" commandName="Merge" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC1bfJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchWorkingSet" commandName="Find Text in Working Set" description="Searches the files in the working set for specific text." category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC1rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.working.set" commandName="References in Working Set" description="Search for references to the selected element in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC17fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delete.line.to.end" commandName="Delete to End of Line" description="Delete to the end of a line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC2LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.nextEditor" commandName="Next Editor" description="Switch to the next editor" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC2bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.factory" commandName="Introduce Factory" description="Introduce a factory method to encapsulate invocation of the selected constructor" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC2rfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ShowBlame" commandName="Show Annotations" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC27fJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.forward" commandName="Forward" description="Navigate forward" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC3LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.cmnd.contentmodel.sych" commandName="Synch" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC3bfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.updateSwitch" commandName="Switch to Another Branch or Version" description="Switch to Another Branch or Version" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC3rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.replace.invocations" commandName="Replace Invocations" description="Replace invocations of the selected method" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC37fJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.closeAllSaved" commandName="Close All Saved" description="Close all saved editors" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC4LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deletePreviousWord" commandName="Delete Previous Word" description="Delete the previous word" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC4bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.indent" commandName="Indent Line" description="Indents the current line" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC4rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.toggle.comment" commandName="Toggle Comment" description="Toggle Comment" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC47fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.deletePrevious" commandName="Delete Previous" description="Delete the previous character" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC5LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.set.mark" commandName="Set Mark" description="Set the mark" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC5bfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.OpenCommit" commandName="Open Git Commit" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC5rfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.RenameBranch" commandName="Rename Branch" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC57fJEeOxntPoYxjofg" elementId="org.eclipse.epp.mpc.ui.command.showMarketplaceWizard" commandName="Eclipse Marketplace" description="Show the Eclipse Marketplace wizard" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC6LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.exit" commandName="Exit" description="Exit the application" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC6bfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ConfigurePush" commandName="Configure Upstream Push" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC6rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.ide.deleteCompleted" commandName="Delete Completed Tasks" description="Delete the tasks marked as completed" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC67fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.DebugPerspective" commandName="Debug" description="Open the debug perspective" category="_JP7hhLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC7LfJEeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactoring.commands.deleteResources" commandName="Delete Resources" description="Delete the selected resources and notify LTK participants." category="_JP8ImLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC7bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.generate.javadoc" commandName="Generate JSDoc" description="Generates JSDoc for a selectable set of JavaScript resources" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC7rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.next" commandName="Next" description="Navigate to the next item" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC77fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.show.outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC8LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.local.variable" commandName="Extract Local Variable" description="Extracts an expression into a new local variable and uses the new local variable" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC8bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.project" commandName="References in Project" description="Search for references to the selected element in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrC8rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildAutomatically" commandName="Build Automatically" description="Toggle the workspace build automatically function" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp4LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp4bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.workspace" commandName="Declaration in Workspace" description="Search for declarations of the selected element in the workspace" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp4rfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.xmlFileUpgradeToLatestVersion" commandName="Upgrade JPA Document Version" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp47fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.hierarchy" commandName="References in Hierarchy" description="Search for references of the selected element in its hierarchy" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp5LfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.openDependencies" commandName="Open Plug-in Dependencies" description="Opens the plug-in dependencies view for the current plug-in" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp5bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.ProjectsView" commandName="JavaScript Projects" description="Show the Projects view" category="_JP7hibfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp5rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.organize.imports" commandName="Organize Imports" description="Evaluate all required imports and replace the current imports" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp57fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.rerunFailedFirst" commandName="Rerun JUnit Test - Failures First" description="Rerun JUnit Test - Failures First" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp6LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.browser.openBundleResource" commandName="Open Resource in Browser" description="Opens a bundle resource in the default web browser." category="_JP7hhrfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPrp6bfJEeOxntPoYxjofg" elementId="plugin" name="Plugin"/>
+    <parameters xmi:id="_JPrp6rfJEeOxntPoYxjofg" elementId="path" name="Path"/>
   </commands>
-  <commands xmi:id="_eX2UR7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.interface" commandName="Extract Interface" description="Extract a set of members into a new interface and try to use the new interface" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2USLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ContinueRebase" commandName="Continue Rebase" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2USbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.javadoc.comment" commandName="Add JSDoc Comment" description="Add a JSDoc comment stub to the member element" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2USre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.preferences" commandName="Preferences" description="Open the preferences dialog" category="_eYGL57e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX2US7e6EeOxntPoYxjofg" elementId="preferencePageId" name="Preference Page"/>
+  <commands xmi:id="_JPrp67fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.interface" commandName="Extract Interface" description="Extract a set of members into a new interface and try to use the new interface" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp7LfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ContinueRebase" commandName="Continue Rebase" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp7bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.javadoc.comment" commandName="Add JSDoc Comment" description="Add a JSDoc comment stub to the member element" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp7rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.preferences" commandName="Preferences" description="Open the preferences dialog" category="_JP7hhrfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPrp77fJEeOxntPoYxjofg" elementId="preferencePageId" name="Preference Page"/>
   </commands>
-  <commands xmi:id="_eX2UTLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowWhitespaceCharacters" commandName="Show Whitespace Characters" description="Shows whitespace characters in current text editor" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UTbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.internal.reflog.CopyCommand" commandName="Copy" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UTre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.close" commandName="Close" description="Close the active editor" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UT7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.newWizard" commandName="New" description="Open the New item wizard" category="_eYGL67e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX2UULe6EeOxntPoYxjofg" elementId="newWizardId" name="New Wizard"/>
+  <commands xmi:id="_JPrp8LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowWhitespaceCharacters" commandName="Show Whitespace Characters" description="Shows whitespace characters in current text editor" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp8bfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.internal.reflog.CopyCommand" commandName="Copy" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp8rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.close" commandName="Close" description="Close the active editor" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp87fJEeOxntPoYxjofg" elementId="org.eclipse.ui.newWizard" commandName="New" description="Open the New item wizard" category="_JP7hirfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPrp9LfJEeOxntPoYxjofg" elementId="newWizardId" name="New Wizard"/>
   </commands>
-  <commands xmi:id="_eX2UUbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.inline" commandName="Inline" description="Inline a constant, local variable or method" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UUre6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.showHistory" commandName="Show History" description="Show History" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UU7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.tipsAndTricksAction" commandName="Tips and Tricks" description="Open the tips and tricks help page" category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UVLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.hierarchy" commandName="Write Access in Hierarchy" description="Search for write references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UVbe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.newMappingFile" commandName="JPA ORM Mapping File" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UVre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.extractConstant.assist" commandName="Quick Assist - Extract constant" description="Invokes quick assist and selects 'Extract constant'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UV7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.RunToLine" commandName="Run to Line" description="Resume and break when execution reaches the current line" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UWLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.quick.format" commandName="Format Element" description="Format enclosing text element" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UWbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.gotoMatchingTag" commandName="Matching Tag" description="Go to Matching Tag" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UWre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.infer.type.arguments" commandName="Infer Generic Type Arguments" description="Infer type arguments for references to generic classes and remove unnecessary casts" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UW7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Restart" commandName="Restart" description="Restart a process or debug target without terminating and re-launching" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UXLe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.newEntity" commandName="JPA Entity" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UXbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.openResource" commandName="Open Resource" description="Open an editor on a particular resource" category="_eYGy9re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX2UXre6EeOxntPoYxjofg" elementId="filePath" name="File Path" typeId="org.eclipse.ui.ide.resourcePath"/>
+  <commands xmi:id="_JPrp9bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.inline" commandName="Inline" description="Inline a constant, local variable or method" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp9rfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.showHistory" commandName="Show History" description="Show History" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp97fJEeOxntPoYxjofg" elementId="org.eclipse.ui.help.tipsAndTricksAction" commandName="Tips and Tricks" description="Open the tips and tricks help page" category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp-LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.hierarchy" commandName="Write Access in Hierarchy" description="Search for write references of the selected element in its hierarchy" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp-bfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.newMappingFile" commandName="JPA ORM Mapping File" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp-rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.extractConstant.assist" commandName="Quick Assist - Extract constant" description="Invokes quick assist and selects 'Extract constant'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp-7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.RunToLine" commandName="Run to Line" description="Resume and break when execution reaches the current line" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp_LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.quick.format" commandName="Format Element" description="Format enclosing text element" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp_bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.gotoMatchingTag" commandName="Matching Tag" description="Go to Matching Tag" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp_rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.infer.type.arguments" commandName="Infer Generic Type Arguments" description="Infer type arguments for references to generic classes and remove unnecessary casts" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrp_7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Restart" commandName="Restart" description="Restart a process or debug target without terminating and re-launching" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrqALfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.newEntity" commandName="JPA Entity" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPrqAbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.openResource" commandName="Open Resource" description="Open an editor on a particular resource" category="_JP8ImbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPrqArfJEeOxntPoYxjofg" elementId="filePath" name="File Path" typeId="org.eclipse.ui.ide.resourcePath"/>
   </commands>
-  <commands xmi:id="_eX2UX7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.InstanceCount" commandName="Instance Count" description="View the instance count of the selected type loaded in the target VM" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UYLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.helpContents" commandName="Help Contents" description="Open the help contents" category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UYbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.qualifyField" commandName="Quick Fix - Qualify field access" description="Invokes quick assist and selects 'Qualify field access'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX2UYre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.saveAll" commandName="Save All" description="Save all current contents" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27ULe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.remove.block.comment" commandName="Remove Block Comment" description="Remove the block comment enclosing the selection" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Ube6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.assignToLocal.assist" commandName="Quick Assist - Assign to local variable" description="Invokes quick assist and selects 'Assign to local variable'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Ure6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.runtimeWorkbenchShortcut.debug" commandName="Debug Eclipse Application" description="Debug Eclipse Application" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27U7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.format.document" commandName="Format" description="Format selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27VLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.textEnd" commandName="Select Text End" description="Select to the end of the text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Vbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delete.line" commandName="Delete Line" description="Delete a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Vre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.goto.previous.member" commandName="Go to Previous Member" description="Move the caret to the previous member of the JavaScript file" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27V7e6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchProject" commandName="Find Text in Project" description="Searches the files in the project for specific text." category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27WLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.commands.openElementInEditor" commandName="Open Java Element" description="Open a Java element in its editor" category="_eYGy9re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX27Wbe6EeOxntPoYxjofg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
+  <commands xmi:id="_JPrqA7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.InstanceCount" commandName="Instance Count" description="View the instance count of the selected type loaded in the target VM" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ8LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.help.helpContents" commandName="Help Contents" description="Open the help contents" category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ8bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.qualifyField" commandName="Quick Fix - Qualify field access" description="Invokes quick assist and selects 'Qualify field access'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ8rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.saveAll" commandName="Save All" description="Save all current contents" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ87fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.remove.block.comment" commandName="Remove Block Comment" description="Remove the block comment enclosing the selection" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ9LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.assignToLocal.assist" commandName="Quick Assist - Assign to local variable" description="Invokes quick assist and selects 'Assign to local variable'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ9bfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.runtimeWorkbenchShortcut.debug" commandName="Debug Eclipse Application" description="Debug Eclipse Application" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ9rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.format.document" commandName="Format" description="Format selection" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ97fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.textEnd" commandName="Select Text End" description="Select to the end of the text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ-LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delete.line" commandName="Delete Line" description="Delete a line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ-bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.goto.previous.member" commandName="Go to Previous Member" description="Move the caret to the previous member of the JavaScript file" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ-rfJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchProject" commandName="Find Text in Project" description="Searches the files in the project for specific text." category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ-7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.commands.openElementInEditor" commandName="Open Java Element" description="Open a Java element in its editor" category="_JP8ImbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPsQ_LfJEeOxntPoYxjofg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
   </commands>
-  <commands xmi:id="_eX27Wre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.maximizePart" commandName="Maximize Active View or Editor" description="Toggles maximize/restore state of active view or editor" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27W7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.configureColumns" commandName="Configure Columns..." description="Configure the columns in the markers view" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27XLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AddClassPrepareBreakpoint" commandName="Add Class Load Breakpoint" description="Add a class load breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Xbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.EquinoxLaunchShortcut.run" commandName="Run OSGi Framework" description="Run OSGi Framework" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Xre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.CherryPick" commandName="Cherry Pick" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27X7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.revisions.id.toggle" commandName="Toggle Revision Id Display" description="Toggles the display of the revision id" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27YLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket" commandName="Go to Matching Bracket" description="Moves the cursor to the matching bracket" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Ybe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.eof" commandName="EOF" description="Send end of file" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Yre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.method.exits" commandName="Search Method Exit Occurrences in File" description="Search for method exit occurrences of a selected return type" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Y7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.quickdiff.revert" commandName="Revert Lines" description="Revert the current selection, block or deleted lines" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27ZLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.pageDown" commandName="Page Down" description="Go down one page" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Zbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.goInto" commandName="Go Into" description="Navigate into the selected item" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Zre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.windowStart" commandName="Window Start" description="Go to the start of the window" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27Z7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.super.implementation" commandName="Open Super Implementation" description="Open the Implementation in the Super Type" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27aLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addBlock.assist" commandName="Quick Assist - Replace statement with block" description="Invokes quick assist and selects 'Replace statement with block'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27abe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.createAntBuildFile" commandName="Create Ant Build File" description="Creates an Ant build file for the current project" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27are6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Terminate" commandName="Terminate" description="Terminate" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27a7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.spy.commands.menuSpyCommand" commandName="Plug-in Menu Spy" description="Show the Plug-in Spy" category="_eYGL6be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27bLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.command.gotoaddress" commandName="Go to Address" description="Go to Address" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27bbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.use.supertype" commandName="Use Supertype Where Possible" description="Change occurrences of a type to use a supertype instead" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27bre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.switchToEditor" commandName="Switch to Editor" description="Switch to an editor" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27b7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.previousView" commandName="Previous View" description="Switch to the previous view" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX27cLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.hierarchy" commandName="Write Access in Hierarchy" description="Search for write references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iYLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.closeRendering" commandName="Close Rendering" description="Close the selected rendering." category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iYbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.linkWithEditor" commandName="Toggle Link with Editor " description="Toggles linking of a view's selection with the active editor's selection" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iYre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.convert.anonymous.to.nested" commandName="Convert Anonymous Class to Nested" description="Convert an anonymous class to a nested class" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iY7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.open.type" commandName="Open Type" description="Open a type in a Java editor" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iZLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.open.file.from.source" commandName="Open Selection" description="Open an editor on the selected link" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iZbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.previousPerspective" commandName="Previous Perspective" description="Switch to the previous perspective" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iZre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.expand" commandName="Expand" description="Expands the folded region at the current selection" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iZ7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRemove" commandName="Remove Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iaLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.working.set" commandName="Read Access in Working Set" description="Search for read references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iabe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.gotoTest" commandName="Referring Tests" description="Referring Tests" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iare6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareWithWorkingTree" commandName="Compare with Working Directory" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ia7e6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.open.declaration.command" commandName="Open Declaration" description="Opens the Ant editor on the referenced element" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ibLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implementors.in.project" commandName="Implementors in Project" description="Search for implementors of the selected interface in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ibbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.closePart" commandName="Close Part" description="Close the active workbench part" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ibre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ib7e6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactor.apply.refactoring.script" commandName="Apply Script" description="Perform refactorings from a refactoring script on the local workspace" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3icLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.infer.type.arguments" commandName="Infer Generic Type Arguments" description="Infer type arguments for references to generic classes and remove unnecessary casts" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3icbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.correction.assist.proposals" commandName="Quick Fix" description="Suggest possible fixes for a problem" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3icre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Watch" commandName="Watch" description="Create new watch expression" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ic7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Untrack" commandName="Untrack" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3idLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.previous.member" commandName="Go to Previous Member" description="Move the caret to the previous member of the compilation unit" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3idbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildProject" commandName="Build Project" description="Build the selected project" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3idre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.add.block.comment" commandName="Add Block Comment" description="Add Block Comment" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3id7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.showSystemMenu" commandName="Show System Menu" description="Show the system menu" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ieLe6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.core.gwtCompileProject" commandName="GWT Compile Project" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iebe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.self.encapsulate.field" commandName="Encapsulate Field" description="Create getting and setting methods for the field and use only those to access the field" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3iere6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.newRendering" commandName="New Rendering" description="Add a new rendering." category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ie7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.pageDown" commandName="Select Page Down" description="Select to the bottom of the page" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ifLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.SimplePush" commandName="Push to Upstream" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ifbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.open.type.in.hierarchy" commandName="Open Type in Hierarchy" description="Open a type in the type hierarchy view" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3ifre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.OpenInTextEditorCommand" commandName="Open in Text Editor" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3if7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.open.hyperlink" commandName="Open Hyperlink" description="Opens the hyperlink at the caret location or opens a chooser if more than one hyperlink is available" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3igLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.TypeHierarchy" commandName="JavaScript Type Hierarchy" description="Show the Type Hierarchy view" category="_eYGL6re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3igbe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchPairEditorAction" commandName="Switch Source/Design Editors" description="Switch between the Source and Design editors." category="_eYGL77e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX3igre6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.convertJavaGenerators" commandName="Move Java Generators to XML..." category="_eYGL87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4JcLe6EeOxntPoYxjofg" elementId="org.eclipse.compare.selectPreviousChange" commandName="Select Previous Change" description="Select Previous Change" category="_eYGy9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jcbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.rename.element" commandName="Rename - Refactoring " description="Rename the selected element" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jcre6EeOxntPoYxjofg" elementId="org.eclipse.ui.ToggleCoolbarAction" commandName="Toggle Toolbar Visibility" description="Toggles the visibility of the window toolbar" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jc7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.wordPrevious" commandName="Select Previous Word" description="Select the previous word" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4JdLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findReplace" commandName="Find and Replace" description="Find and replace text" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jdbe6EeOxntPoYxjofg" elementId="org.eclipse.compare.copyLeftToRight" commandName="Copy from Left to Right" description="Copy Current Change from Left to Right" category="_eYGy9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jdre6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.applyPatch" commandName="Apply Patch..." description="Apply a patch to one or more workspace projects." category="_eYGy8re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jd7e6EeOxntPoYxjofg" elementId="org.eclipse.quickdiff.toggle" commandName="Quick Diff Toggle" description="Toggles quick diff information display on the line number ruler" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4JeLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRenameBranch" commandName="Rename Branch..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jebe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleInsertMode" commandName="Toggle Insert Mode" description="Toggle insert mode" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jere6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.editor" commandName="Open Declaration" description="Open an editor on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Je7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewAddToIndex" commandName="Add to Index" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4JfLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.nextSubTab" commandName="Next Sub-Tab" description="Switch to the next sub-tab" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jfbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.openPluginArtifact" commandName="Open Plug-in Artifact" description="Open a plug-in artifact in the manifest editor" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jfre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.quick.format" commandName="Format Element" description="Format enclosing text element" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jf7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.addBookmark" commandName="Add Bookmark" description="Add a bookmark" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4JgLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.move.element" commandName="Move - Refactoring " description="Move the selected element to a new location" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jgbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewAddRepository" commandName="Add a Git Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jgre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.MembersView" commandName="JavaScript Members" description="Show the Members view" category="_eYGL6re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jg7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.rebuildAll" commandName="Rebuild All" description="Rebuild all projects" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4JhLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.move.inner.to.top.level" commandName="Convert Member Type to Top Level" description="Convert member type to top level" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jhbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.assignToField.assist" commandName="Quick Assist - Assign to var" description="Invokes quick assist and selects 'Assign to var'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jhre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.activateEditor" commandName="Activate Editor" description="Activate the editor" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jh7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.organize.imports" commandName="Organize Imports" description="Evaluate all required imports and replace the current imports" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4JiLe6EeOxntPoYxjofg" elementId="org.eclipse.compare.copyAllRightToLeft" commandName="Copy All from Right to Left" description="Copy All Changes from Right to Left" category="_eYGy9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jibe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.java.open.structure" commandName="Open Structure" description="Show the structure of the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jire6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.PushCommit" commandName="Push Commit..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Ji7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.closeUnrelatedProjects" commandName="Close Unrelated Projects" description="Close unrelated projects" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4JjLe6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.managedapis.actions.apiImportProject" commandName="Add Google APIs..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jjbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureGerritRemote" commandName="Gerrit Configuration..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jjre6EeOxntPoYxjofg" elementId="org.eclipse.compare.ignoreWhiteSpace" commandName="Ignore White Space" description="Ignore white space where applicable" category="_eYGy9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4Jj7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleBreakpoint" commandName="Toggle Breakpoint" description="Creates or removes a breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4JkLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineDown" commandName="Line Down" description="Go down one line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wgLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.previousTab" commandName="Previous Tab" description="Switch to the previous tab" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wgbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.SkipRebase" commandName="Skip commit and continue" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wgre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoLastEditPosition" commandName="Last Edit Location" description="Last edit location" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wg7e6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.toggleMemoryMonitorsPane" commandName="Toggle Memory Monitors Pane" description="Toggle visibility of the Memory Monitors Pane" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4whLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.assignToLocal.assist" commandName="Quick Assist - Assign to local variable" description="Invokes quick assist and selects 'Assign to local variable'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4whbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.copyBuildIdCommand" commandName="Copy Build Id To Clipboard" description="Copies the build id to the clipboard." category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4whre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.hierarchy" commandName="Declaration in Hierarchy" description="Search for declarations of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wh7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.inlineLocal.assist" commandName="Quick Assist - Inline local variable" description="Invokes quick assist and selects 'Inline local variable'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wiLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.collapseAll" commandName="Collapse All" description="Collapse the current tree" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wibe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.submodule.update" commandName="Update Submodule" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wire6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.toggle" commandName="Toggle Folding" description="Toggles folding in the current editor" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wi7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.referencedFileErrors" commandName="Show Details..." description="Show Details..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wjLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.commands.showElementInTypeHierarchyView" commandName="Show JavaScript Element Type Hierarchy" description="Show a JavaScript element in the Type Hierarchy view" category="_eYGy9re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX4wjbe6EeOxntPoYxjofg" elementId="elementRef" name="JavaScript element reference" typeId="org.eclipse.wst.jsdt.ui.commands.javaElementReference" optional="false"/>
+  <commands xmi:id="_JPsQ_bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.maximizePart" commandName="Maximize Active View or Editor" description="Toggles maximize/restore state of active view or editor" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ_rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.ide.configureColumns" commandName="Configure Columns..." description="Configure the columns in the markers view" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsQ_7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AddClassPrepareBreakpoint" commandName="Add Class Load Breakpoint" description="Add a class load breakpoint" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRALfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.EquinoxLaunchShortcut.run" commandName="Run OSGi Framework" description="Run OSGi Framework" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRAbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.CherryPick" commandName="Cherry Pick" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRArfJEeOxntPoYxjofg" elementId="org.eclipse.ui.editors.revisions.id.toggle" commandName="Toggle Revision Id Display" description="Toggles the display of the revision id" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRA7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket" commandName="Go to Matching Bracket" description="Moves the cursor to the matching bracket" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRBLfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.eof" commandName="EOF" description="Send end of file" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRBbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.method.exits" commandName="Search Method Exit Occurrences in File" description="Search for method exit occurrences of a selected return type" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRBrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.editors.quickdiff.revert" commandName="Revert Lines" description="Revert the current selection, block or deleted lines" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRB7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.pageDown" commandName="Page Down" description="Go down one page" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRCLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.goInto" commandName="Go Into" description="Navigate into the selected item" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRCbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.windowStart" commandName="Window Start" description="Go to the start of the window" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRCrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.super.implementation" commandName="Open Super Implementation" description="Open the Implementation in the Super Type" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRC7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addBlock.assist" commandName="Quick Assist - Replace statement with block" description="Invokes quick assist and selects 'Replace statement with block'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRDLfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.createAntBuildFile" commandName="Create Ant Build File" description="Creates an Ant build file for the current project" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRDbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Terminate" commandName="Terminate" description="Terminate" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRDrfJEeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.spy.commands.menuSpyCommand" commandName="Plug-in Menu Spy" description="Show the Plug-in Spy" category="_JP7hiLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRD7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.command.gotoaddress" commandName="Go to Address" description="Go to Address" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRELfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.use.supertype" commandName="Use Supertype Where Possible" description="Change occurrences of a type to use a supertype instead" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsREbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.switchToEditor" commandName="Switch to Editor" description="Switch to an editor" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPsRErfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.previousView" commandName="Previous View" description="Switch to the previous view" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4ALfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.hierarchy" commandName="Write Access in Hierarchy" description="Search for write references of the selected element in its hierarchy" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4AbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.closeRendering" commandName="Close Rendering" description="Close the selected rendering." category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4ArfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.linkWithEditor" commandName="Toggle Link with Editor " description="Toggles linking of a view's selection with the active editor's selection" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4A7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.convert.anonymous.to.nested" commandName="Convert Anonymous Class to Nested" description="Convert an anonymous class to a nested class" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4BLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.open.type" commandName="Open Type" description="Open a type in a Java editor" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4BbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.open.file.from.source" commandName="Open Selection" description="Open an editor on the selected link" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4BrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.previousPerspective" commandName="Previous Perspective" description="Switch to the previous perspective" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4B7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.expand" commandName="Expand" description="Expands the folded region at the current selection" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4CLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRemove" commandName="Remove Repository" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4CbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.working.set" commandName="Read Access in Working Set" description="Search for read references to the selected element in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4CrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.gotoTest" commandName="Referring Tests" description="Referring Tests" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4C7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareWithWorkingTree" commandName="Compare with Working Directory" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4DLfJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.open.declaration.command" commandName="Open Declaration" description="Opens the Ant editor on the referenced element" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4DbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implementors.in.project" commandName="Implementors in Project" description="Search for implementors of the selected interface in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4DrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.closePart" commandName="Close Part" description="Close the active workbench part" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4D7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4ELfJEeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactor.apply.refactoring.script" commandName="Apply Script" description="Perform refactorings from a refactoring script on the local workspace" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4EbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.infer.type.arguments" commandName="Infer Generic Type Arguments" description="Infer type arguments for references to generic classes and remove unnecessary casts" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4ErfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.correction.assist.proposals" commandName="Quick Fix" description="Suggest possible fixes for a problem" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4E7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Watch" commandName="Watch" description="Create new watch expression" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4FLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Untrack" commandName="Untrack" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4FbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.previous.member" commandName="Go to Previous Member" description="Move the caret to the previous member of the compilation unit" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4FrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildProject" commandName="Build Project" description="Build the selected project" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4F7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.add.block.comment" commandName="Add Block Comment" description="Add Block Comment" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4GLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.showSystemMenu" commandName="Show System Menu" description="Show the system menu" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4GbfJEeOxntPoYxjofg" elementId="com.google.gwt.eclipse.core.gwtCompileProject" commandName="GWT Compile Project" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4GrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.self.encapsulate.field" commandName="Encapsulate Field" description="Create getting and setting methods for the field and use only those to access the field" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4G7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.newRendering" commandName="New Rendering" description="Add a new rendering." category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4HLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.pageDown" commandName="Select Page Down" description="Select to the bottom of the page" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4HbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.SimplePush" commandName="Push to Upstream" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4HrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.open.type.in.hierarchy" commandName="Open Type in Hierarchy" description="Open a type in the type hierarchy view" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4H7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.OpenInTextEditorCommand" commandName="Open in Text Editor" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4ILfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.open.hyperlink" commandName="Open Hyperlink" description="Opens the hyperlink at the caret location or opens a chooser if more than one hyperlink is available" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPs4IbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.TypeHierarchy" commandName="JavaScript Type Hierarchy" description="Show the Type Hierarchy view" category="_JP7hibfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfELfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchPairEditorAction" commandName="Switch Source/Design Editors" description="Switch between the Source and Design editors." category="_JP7hjrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfEbfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.convertJavaGenerators" commandName="Move Java Generators to XML..." category="_JP7hkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfErfJEeOxntPoYxjofg" elementId="org.eclipse.compare.selectPreviousChange" commandName="Select Previous Change" description="Select Previous Change" category="_JP8Il7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfE7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.rename.element" commandName="Rename - Refactoring " description="Rename the selected element" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfFLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.ToggleCoolbarAction" commandName="Toggle Toolbar Visibility" description="Toggles the visibility of the window toolbar" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfFbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.wordPrevious" commandName="Select Previous Word" description="Select the previous word" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfFrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findReplace" commandName="Find and Replace" description="Find and replace text" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfF7fJEeOxntPoYxjofg" elementId="org.eclipse.compare.copyLeftToRight" commandName="Copy from Left to Right" description="Copy Current Change from Left to Right" category="_JP8Il7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfGLfJEeOxntPoYxjofg" elementId="org.eclipse.team.ui.applyPatch" commandName="Apply Patch..." description="Apply a patch to one or more workspace projects." category="_JP8IlbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfGbfJEeOxntPoYxjofg" elementId="org.eclipse.quickdiff.toggle" commandName="Quick Diff Toggle" description="Toggles quick diff information display on the line number ruler" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfGrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRenameBranch" commandName="Rename Branch..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfG7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleInsertMode" commandName="Toggle Insert Mode" description="Toggle insert mode" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfHLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.editor" commandName="Open Declaration" description="Open an editor on the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfHbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewAddToIndex" commandName="Add to Index" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfHrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.nextSubTab" commandName="Next Sub-Tab" description="Switch to the next sub-tab" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfH7fJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.openPluginArtifact" commandName="Open Plug-in Artifact" description="Open a plug-in artifact in the manifest editor" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfILfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.quick.format" commandName="Format Element" description="Format enclosing text element" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfIbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.addBookmark" commandName="Add Bookmark" description="Add a bookmark" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfIrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.move.element" commandName="Move - Refactoring " description="Move the selected element to a new location" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfI7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewAddRepository" commandName="Add a Git Repository" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfJLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.MembersView" commandName="JavaScript Members" description="Show the Members view" category="_JP7hibfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfJbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.rebuildAll" commandName="Rebuild All" description="Rebuild all projects" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfJrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.move.inner.to.top.level" commandName="Convert Member Type to Top Level" description="Convert member type to top level" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfJ7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.assignToField.assist" commandName="Quick Assist - Assign to var" description="Invokes quick assist and selects 'Assign to var'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfKLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.activateEditor" commandName="Activate Editor" description="Activate the editor" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfKbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.organize.imports" commandName="Organize Imports" description="Evaluate all required imports and replace the current imports" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfKrfJEeOxntPoYxjofg" elementId="org.eclipse.compare.copyAllRightToLeft" commandName="Copy All from Right to Left" description="Copy All Changes from Right to Left" category="_JP8Il7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfK7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.java.open.structure" commandName="Open Structure" description="Show the structure of the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfLLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.PushCommit" commandName="Push Commit..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfLbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.closeUnrelatedProjects" commandName="Close Unrelated Projects" description="Close unrelated projects" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfLrfJEeOxntPoYxjofg" elementId="com.google.gdt.eclipse.managedapis.actions.apiImportProject" commandName="Add Google APIs..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfL7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureGerritRemote" commandName="Gerrit Configuration..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPtfMLfJEeOxntPoYxjofg" elementId="org.eclipse.compare.ignoreWhiteSpace" commandName="Ignore White Space" description="Ignore white space where applicable" category="_JP8Il7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGILfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleBreakpoint" commandName="Toggle Breakpoint" description="Creates or removes a breakpoint" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGIbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineDown" commandName="Line Down" description="Go down one line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGIrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.previousTab" commandName="Previous Tab" description="Switch to the previous tab" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGI7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.SkipRebase" commandName="Skip commit and continue" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGJLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.gotoLastEditPosition" commandName="Last Edit Location" description="Last edit location" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGJbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.toggleMemoryMonitorsPane" commandName="Toggle Memory Monitors Pane" description="Toggle visibility of the Memory Monitors Pane" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGJrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.assignToLocal.assist" commandName="Quick Assist - Assign to local variable" description="Invokes quick assist and selects 'Assign to local variable'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGJ7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.ide.copyBuildIdCommand" commandName="Copy Build Id To Clipboard" description="Copies the build id to the clipboard." category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGKLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.hierarchy" commandName="Declaration in Hierarchy" description="Search for declarations of the selected element in its hierarchy" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGKbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.inlineLocal.assist" commandName="Quick Assist - Inline local variable" description="Invokes quick assist and selects 'Inline local variable'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGKrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.collapseAll" commandName="Collapse All" description="Collapse the current tree" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGK7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.submodule.update" commandName="Update Submodule" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGLLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.toggle" commandName="Toggle Folding" description="Toggles folding in the current editor" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGLbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.referencedFileErrors" commandName="Show Details..." description="Show Details..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGLrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.commands.showElementInTypeHierarchyView" commandName="Show JavaScript Element Type Hierarchy" description="Show a JavaScript element in the Type Hierarchy view" category="_JP8ImbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPuGL7fJEeOxntPoYxjofg" elementId="elementRef" name="JavaScript element reference" typeId="org.eclipse.wst.jsdt.ui.commands.javaElementReference" optional="false"/>
   </commands>
-  <commands xmi:id="_eX4wjre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.comment" commandName="Comment" description="Turn the selected lines into Java comments" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wj7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implementors.in.workspace" commandName="Implementors in Workspace" description="Search for implementors of the selected interface" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wkLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addNonNLS" commandName="Quick Fix - Add non-NLS tag" description="Invokes quick assist and selects 'Add non-NLS tag'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wkbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.format" commandName="Format" description="Format the selected text" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wkre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Display" commandName="Display" description="Display result of evaluating selected text" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wk7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseMembers" commandName="Collapse Members" description="Collapse all members" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wlLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.revert" commandName="Revert" description="Revert to the last saved state" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wlbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.clean.up" commandName="Clean Up" description="Solve problems and improve code style on selected resources" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wlre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.redo" commandName="Redo" description="Redo the last operation" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wl7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.join.lines" commandName="Join Lines" description="Join lines of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wmLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.externalize.strings" commandName="Externalize Strings" description="Finds all strings that are not externalized and moves them into a separate property file" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wmbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.pull.up" commandName="Pull Up" description="Move members to a superclass" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wmre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.forwardHistory" commandName="Forward History" description="Move forward in the editor navigation history" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wm7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.internationalize" commandName="Internationalize Plug-ins" description="Sets up internationalization for a plug-in" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wnLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.commit" commandName="Commit" description="Commit resources to the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wnbe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentAttributeAddToXmlAndMap" commandName="Add Attribute to XML and Map..." category="_eYGL8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wnre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.RunLast" commandName="Run" description="Launch in run mode" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wn7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.copyLineUp" commandName="Duplicate Lines" description="Duplicates the selected lines and leaves the selection unchanged" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4woLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addCast" commandName="Quick Fix - Add cast" description="Invokes quick assist and selects 'Add cast'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX4wobe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.refactor.quickMenu" commandName="Show Refactor Quick Menu" description="Shows the refactor quick menu" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5XkLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.CreateBranch" commandName="Create Branch..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xkbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.removeFromWorkingSet" commandName="Remove From Working Set" description="Removes the selected object from a working set." category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xkre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.debug" commandName="Debug Java Applet" description="Debug Java Applet" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xk7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ReplaceWithCommit" commandName="Replace with commit" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5XlLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.DeleteBranch" commandName="Delete Branch" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xlbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ApplyPatch" commandName="Apply Patch" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xlre6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.GenerateSwarmApiCommand" commandName="Generate Cloud Endpoint Client Library" description="Generate Cloud Endpoint Client Library" category="_eYGL8re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xl7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.collapse" commandName="Collapse" description="Collapses the folded region at the current selection" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5XmLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.gotopackage" commandName="Go to Package" description="Go to Package" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xmbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.project" commandName="Write Access in Project" description="Search for write references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xmre6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.sdk.install" commandName="Install New Software..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xm7e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.core.synchronizeClasses" commandName="Synchronize Class List" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5XnLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.nextView" commandName="Next View" description="Switch to the next view" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xnbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.run" commandName="Run JUnit Test" description="Run JUnit Test" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xnre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.properties" commandName="Properties" description="Display the properties of the selected item" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xn7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.exception.occurrences" commandName="Search Exception Occurrences in File" description="Search for exception occurrences of a selected exception type" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5XoLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.actions.WatchCommand" commandName="Watch" description="Create a watch expression from the current selection and add it to the Expressions view" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xobe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.moveLineUp" commandName="Move Lines Up" description="Moves the selected lines up" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xore6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.suite.newWebAppProject" commandName="New Web Application Project" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xo7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.TypesView" commandName="JavaScript Types" description="Show the Types view" category="_eYGL6re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5XpLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.assignToField.assist" commandName="Quick Assist - Assign to field" description="Invokes quick assist and selects 'Assign to field'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xpbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.modify.method.parameters" commandName="Change Method Signature" description="Change method signature includes parameter names and parameter order" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xpre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.copyLineDown" commandName="Copy Lines" description="Duplicates the selected lines and moves the selection to the copy" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xp7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.DeployProjectCommand" commandName="Deploy Project to Remote Server" description="Deploy WTP Project to Google App Engine" category="_eYGL8re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5XqLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.toggleMarkOccurrences" commandName="Toggle Mark Occurrences" description="Toggles mark occurrences in JavaScript editors" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xqbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.remove.occurrence.annotations" commandName="Remove Occurrence Annotations" description="Removes the occurrence annotations from the current editor" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xqre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addBlock.assist" commandName="Quick Assist - Replace statement with block" description="Invokes quick assist and selects 'Replace statement with block'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xq7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CherryPick" commandName="Cherry Pick" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5XrLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.method" commandName="Extract Function" description="Extract a set of statements or an expression into a new function and use the new function" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xrbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ConfigureUpstreamFetch" commandName="Configure Upstream Fetch" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xrre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Merge" commandName="Merge" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xr7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter" commandName="Introduce Parameter" description="Introduce a new method parameter based on the selected expression" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5XsLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.introduce.parameter" commandName="Introduce Parameter" description="Introduce a new function parameter based on the selected expression" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5Xsbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.refactor.migrate.jar" commandName="Migrate JAR File" description="Migrate a JAR File to a new version" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-oLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaseline" commandName="Reset quickdiff baseline" category="_eYGy8be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX5-obe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaselineTarget" name="Reset target (HEAD, HEAD^1)" optional="false"/>
+  <commands xmi:id="_JPuGMLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.comment" commandName="Comment" description="Turn the selected lines into Java comments" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGMbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implementors.in.workspace" commandName="Implementors in Workspace" description="Search for implementors of the selected interface" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGMrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addNonNLS" commandName="Quick Fix - Add non-NLS tag" description="Invokes quick assist and selects 'Add non-NLS tag'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGM7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.format" commandName="Format" description="Format the selected text" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGNLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Display" commandName="Display" description="Display result of evaluating selected text" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGNbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseMembers" commandName="Collapse Members" description="Collapse all members" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGNrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.revert" commandName="Revert" description="Revert to the last saved state" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGN7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.clean.up" commandName="Clean Up" description="Solve problems and improve code style on selected resources" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGOLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.redo" commandName="Redo" description="Redo the last operation" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGObfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.join.lines" commandName="Join Lines" description="Join lines of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGOrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.externalize.strings" commandName="Externalize Strings" description="Finds all strings that are not externalized and moves them into a separate property file" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGO7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.pull.up" commandName="Pull Up" description="Move members to a superclass" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGPLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.forwardHistory" commandName="Forward History" description="Move forward in the editor navigation history" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGPbfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.internationalize" commandName="Internationalize Plug-ins" description="Sets up internationalization for a plug-in" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPuGPrfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.commit" commandName="Commit" description="Commit resources to the repository" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutMLfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentAttributeAddToXmlAndMap" commandName="Add Attribute to XML and Map..." category="_JP7hj7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutMbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.RunLast" commandName="Run" description="Launch in run mode" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutMrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.copyLineUp" commandName="Duplicate Lines" description="Duplicates the selected lines and leaves the selection unchanged" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutM7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addCast" commandName="Quick Fix - Add cast" description="Invokes quick assist and selects 'Add cast'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutNLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.refactor.quickMenu" commandName="Show Refactor Quick Menu" description="Shows the refactor quick menu" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutNbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.CreateBranch" commandName="Create Branch..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutNrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.removeFromWorkingSet" commandName="Remove From Working Set" description="Removes the selected object from a working set." category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutN7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.debug" commandName="Debug Java Applet" description="Debug Java Applet" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutOLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ReplaceWithCommit" commandName="Replace with commit" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutObfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.DeleteBranch" commandName="Delete Branch" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutOrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ApplyPatch" commandName="Apply Patch" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutO7fJEeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.GenerateSwarmApiCommand" commandName="Generate Cloud Endpoint Client Library" description="Generate Cloud Endpoint Client Library" category="_JP7hkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutPLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.collapse" commandName="Collapse" description="Collapses the folded region at the current selection" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutPbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.gotopackage" commandName="Go to Package" description="Go to Package" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutPrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.project" commandName="Write Access in Project" description="Search for write references to the selected element in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutP7fJEeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.sdk.install" commandName="Install New Software..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutQLfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.core.synchronizeClasses" commandName="Synchronize Class List" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutQbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.nextView" commandName="Next View" description="Switch to the next view" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutQrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.run" commandName="Run JUnit Test" description="Run JUnit Test" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutQ7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.properties" commandName="Properties" description="Display the properties of the selected item" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutRLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.exception.occurrences" commandName="Search Exception Occurrences in File" description="Search for exception occurrences of a selected exception type" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutRbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.actions.WatchCommand" commandName="Watch" description="Create a watch expression from the current selection and add it to the Expressions view" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutRrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.moveLineUp" commandName="Move Lines Up" description="Moves the selected lines up" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutR7fJEeOxntPoYxjofg" elementId="com.google.gdt.eclipse.suite.newWebAppProject" commandName="New Web Application Project" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutSLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.TypesView" commandName="JavaScript Types" description="Show the Types view" category="_JP7hibfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutSbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.assignToField.assist" commandName="Quick Assist - Assign to field" description="Invokes quick assist and selects 'Assign to field'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutSrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.modify.method.parameters" commandName="Change Method Signature" description="Change method signature includes parameter names and parameter order" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutS7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.copyLineDown" commandName="Copy Lines" description="Duplicates the selected lines and moves the selection to the copy" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutTLfJEeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.DeployProjectCommand" commandName="Deploy Project to Remote Server" description="Deploy WTP Project to Google App Engine" category="_JP7hkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutTbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.toggleMarkOccurrences" commandName="Toggle Mark Occurrences" description="Toggles mark occurrences in JavaScript editors" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutTrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.remove.occurrence.annotations" commandName="Remove Occurrence Annotations" description="Removes the occurrence annotations from the current editor" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutT7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addBlock.assist" commandName="Quick Assist - Replace statement with block" description="Invokes quick assist and selects 'Replace statement with block'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPutULfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CherryPick" commandName="Cherry Pick" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUQLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.method" commandName="Extract Function" description="Extract a set of statements or an expression into a new function and use the new function" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUQbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ConfigureUpstreamFetch" commandName="Configure Upstream Fetch" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUQrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Merge" commandName="Merge" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUQ7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter" commandName="Introduce Parameter" description="Introduce a new method parameter based on the selected expression" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvURLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.introduce.parameter" commandName="Introduce Parameter" description="Introduce a new function parameter based on the selected expression" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvURbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.refactor.migrate.jar" commandName="Migrate JAR File" description="Migrate a JAR File to a new version" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvURrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaseline" commandName="Reset quickdiff baseline" category="_JP8IlLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPvUR7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ResetQuickdiffBaselineTarget" name="Reset target (HEAD, HEAD^1)" optional="false"/>
   </commands>
-  <commands xmi:id="_eX5-ore6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.submodule.add" commandName="Add Submodule" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-o7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.find.broken.nls.keys" commandName="Find Broken Externalized Strings" description="Finds undefined, duplicate and unused externalized string keys in property files" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-pLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.rebuildProject" commandName="Rebuild Project" description="Rebuild the selected projects" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-pbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.clear.mark" commandName="Clear Mark" description="Clear the mark" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-pre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.goto.matching.bracket" commandName="Go to Matching Bracket" description="Moves the cursor to the matching bracket" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-p7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.updateClasspath" commandName="Update Classpath" description="Updates the plug-in classpath from latest settings" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-qLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ReplaceWithHead" commandName="Replace with HEAD revision" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-qbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.openCheatSheet" commandName="Open Cheat Sheet" description="Open a Cheat Sheet." category="_eYGy87e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX5-qre6EeOxntPoYxjofg" elementId="cheatSheetId" name="Identifier"/>
+  <commands xmi:id="_JPvUSLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.submodule.add" commandName="Add Submodule" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUSbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.find.broken.nls.keys" commandName="Find Broken Externalized Strings" description="Finds undefined, duplicate and unused externalized string keys in property files" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUSrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.rebuildProject" commandName="Rebuild Project" description="Rebuild the selected projects" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUS7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.clear.mark" commandName="Clear Mark" description="Clear the mark" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUTLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.goto.matching.bracket" commandName="Go to Matching Bracket" description="Moves the cursor to the matching bracket" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUTbfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.updateClasspath" commandName="Update Classpath" description="Updates the plug-in classpath from latest settings" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUTrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ReplaceWithHead" commandName="Replace with HEAD revision" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUT7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.openCheatSheet" commandName="Open Cheat Sheet" description="Open a Cheat Sheet." category="_JP8IlrfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPvUULfJEeOxntPoYxjofg" elementId="cheatSheetId" name="Identifier"/>
   </commands>
-  <commands xmi:id="_eX5-q7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.source.quickMenu" commandName="Show Source Quick Menu" description="Shows the source quick menu" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-rLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewOpen" commandName="Open" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-rbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchCommit" commandName="Toggle Latest Branch Commit" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-rre6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.makePersistent" commandName="Make Persistent..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-r7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareVersions" commandName="Compare with each other" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-sLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.contentAssist.contextInformation" commandName="Context Information" description="Show Context Information" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-sbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.indirection" commandName="Introduce Indirection" description="Introduce an indirection to encapsulate invocations of a selected method" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-sre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.goto.matching.bracket" commandName="Matching Character" description="Go to Matching Character" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-s7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.upperCase" commandName="To Upper Case" description="Changes the selection to upper case" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-tLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.hierarchy" commandName="Declaration in Hierarchy" description="Search for declarations of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-tbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.DropToFrame" commandName="Drop to Frame" description="Drop to Frame" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-tre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewNewRemote" commandName="Create Remote..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-t7e6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.openFileSearchPage" commandName="File Search" description="Open the Search dialog's file search page" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-uLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CreatePatch" commandName="Create Patch" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-ube6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.generate.xml" commandName="&amp;XML File..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-ure6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.clean" commandName="Clean..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-u7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.occurrences.in.file.quickMenu" commandName="Show Occurrences in File Quick Menu" description="Shows the Occurrences in File quick menu" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-vLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.class" commandName="Extract Class..." description="Extracts fields into a new class" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-vbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.selectWorkingSets" commandName="Select Working Sets" description="Select the working sets that are applicable for this window." category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-vre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.superclass" commandName="Extract Superclass" description="Extract a set of members into a new superclass and try to use the new superclass" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX5-v7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.hierarchy" commandName="Read Access in Hierarchy" description="Search for read references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lsLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.command.configureTrace" commandName="Configure Git Debug Trace" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lsbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.folding.collapseMembers" commandName="Collapse Members" description="Collapse all members" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lsre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.working.set" commandName="Write Access in Working Set" description="Search for write references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6ls7e6EeOxntPoYxjofg" elementId="org.eclipse.compare.selectNextChange" commandName="Select Next Change" description="Select Next Change" category="_eYGy9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6ltLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.RemoveAllBreakpoints" commandName="Remove All Breakpoints" description="Removes all breakpoints" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6ltbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.newWindow" commandName="New Window" description="Open another window" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6ltre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showResourceByPath" commandName="Show Resource in Navigator" description="Show a resource in the Navigator given its path" category="_eYGy9re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX6lt7e6EeOxntPoYxjofg" elementId="resourcePath" name="Resource Path" typeId="org.eclipse.ui.ide.resourcePath" optional="false"/>
+  <commands xmi:id="_JPvUUbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.source.quickMenu" commandName="Show Source Quick Menu" description="Shows the source quick menu" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUUrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewOpen" commandName="Open" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUU7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchCommit" commandName="Toggle Latest Branch Commit" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUVLfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.makePersistent" commandName="Make Persistent..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUVbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareVersions" commandName="Compare with each other" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUVrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.contentAssist.contextInformation" commandName="Context Information" description="Show Context Information" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUV7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.indirection" commandName="Introduce Indirection" description="Introduce an indirection to encapsulate invocations of a selected method" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUWLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.goto.matching.bracket" commandName="Matching Character" description="Go to Matching Character" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUWbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.upperCase" commandName="To Upper Case" description="Changes the selection to upper case" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUWrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.hierarchy" commandName="Declaration in Hierarchy" description="Search for declarations of the selected element in its hierarchy" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUW7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.DropToFrame" commandName="Drop to Frame" description="Drop to Frame" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUXLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewNewRemote" commandName="Create Remote..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUXbfJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.openFileSearchPage" commandName="File Search" description="Open the Search dialog's file search page" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUXrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CreatePatch" commandName="Create Patch" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUX7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.generate.xml" commandName="&amp;XML File..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPvUYLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.clean" commandName="Clean..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7ULfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.occurrences.in.file.quickMenu" commandName="Show Occurrences in File Quick Menu" description="Shows the Occurrences in File quick menu" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7UbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.class" commandName="Extract Class..." description="Extracts fields into a new class" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7UrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.selectWorkingSets" commandName="Select Working Sets" description="Select the working sets that are applicable for this window." category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7U7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.superclass" commandName="Extract Superclass" description="Extract a set of members into a new superclass and try to use the new superclass" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7VLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.hierarchy" commandName="Read Access in Hierarchy" description="Search for read references of the selected element in its hierarchy" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7VbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.command.configureTrace" commandName="Configure Git Debug Trace" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7VrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.folding.collapseMembers" commandName="Collapse Members" description="Collapse all members" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7V7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.working.set" commandName="Write Access in Working Set" description="Search for write references to the selected element in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7WLfJEeOxntPoYxjofg" elementId="org.eclipse.compare.selectNextChange" commandName="Select Next Change" description="Select Next Change" category="_JP8Il7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7WbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.RemoveAllBreakpoints" commandName="Remove All Breakpoints" description="Removes all breakpoints" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7WrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.newWindow" commandName="New Window" description="Open another window" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7W7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showResourceByPath" commandName="Show Resource in Navigator" description="Show a resource in the Navigator given its path" category="_JP8ImbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPv7XLfJEeOxntPoYxjofg" elementId="resourcePath" name="Resource Path" typeId="org.eclipse.ui.ide.resourcePath" optional="false"/>
   </commands>
-  <commands xmi:id="_eX6luLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addImport" commandName="Quick Fix - Add import" description="Invokes quick assist and selects 'Add import'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lube6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.extractLocal.assist" commandName="Quick Assist - Extract local variable (replace all occurrences)" description="Invokes quick assist and selects 'Extract local variable (replace all occurrences)'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lure6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter.object" commandName="Introduce Parameter Object" description="Introduce a parameter object to a selected method" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lu7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.shiftLeft" commandName="Shift Left" description="Shift a block of text to the left" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lvLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implementors.in.working.set" commandName="Implementors in Working Set" description="Search for implementors of the selected interface in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lvbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.debug" commandName="Debug" description="Debug server" category="_eYGL9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lvre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.create.delegate.methods" commandName="Generate Delegate Methods" description="Add delegate methods for a type's fields" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lv7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.GenerateBackendProjectCommand" commandName="Generate App Engine Backend..." description="Generate App Engine Backend" category="_eYGL8re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lwLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.search.find.occurrences" commandName="Occurrences in File" description="Find occurrences of the selection in the file" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lwbe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.showAnnotation" commandName="Show Annotation" description="Show Annotation" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lwre6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.cleanAction" commandName="Build Clean" description="Discard old built state" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lw7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replace" commandName="Replace With Latest from Repository" description="Replace with last committed content from CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lxLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implement.occurrences" commandName="Search Implement Occurrences in File" description="Search for implement occurrences of a selected type" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lxbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.imagebrowser.saveToWorkspace" commandName="Save Image" description="Save the selected image into a project in the workspace" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lxre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addThrowsDecl" commandName="Quick Fix - Add throws declaration" description="Invokes quick assist and selects 'Add throws declaration'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lx7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lyLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.create.getter.setter" commandName="Generate Getters and Setters" description="Generate Getter and Setter methods for type's fields" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lybe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.windowStart" commandName="Select Window Start" description="Select to the start of the window" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lyre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.refactor.migrate.jar" commandName="Migrate JAR File" description="Migrate a JAR File to a new version" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6ly7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.outline.customFilter" commandName="&amp;Filters" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lzLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.super.implementation" commandName="Open Super Implementation" description="Open the Implementation in the Super Type" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lzbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.open.type" commandName="Open Type" description="Open a type in a JavaScript editor" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lzre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.closeAllPerspectives" commandName="Close All Perspectives" description="Close all open perspectives" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6lz7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.constant" commandName="Extract Constant" description="Extracts a constant into a new static var and uses the new static var" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX6l0Le6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.convertJavaProjectToJpa" commandName="Convert to JPA Project..." category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7MwLe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.entityMappingsAddPersistentClass" commandName="Add Class..." category="_eYGL8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7Mwbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findPrevious" commandName="Find Previous" description="Find previous item" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7Mwre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.changeToStatic" commandName="Quick Fix - Change to static access" description="Invokes quick assist and selects 'Change to static access'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7Mw7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView" commandName="Show View" description="Shows a particular view" category="_eYGL6re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX7MxLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="View"/>
-    <parameters xmi:id="_eX7Mxbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.secondaryId" name="Secondary Id"/>
-    <parameters xmi:id="_eX7Mxre6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.makeFast" name="As FastView"/>
+  <commands xmi:id="_JPv7XbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addImport" commandName="Quick Fix - Add import" description="Invokes quick assist and selects 'Add import'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7XrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.extractLocal.assist" commandName="Quick Assist - Extract local variable (replace all occurrences)" description="Invokes quick assist and selects 'Extract local variable (replace all occurrences)'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7X7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.introduce.parameter.object" commandName="Introduce Parameter Object" description="Introduce a parameter object to a selected method" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7YLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.shiftLeft" commandName="Shift Left" description="Shift a block of text to the left" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7YbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implementors.in.working.set" commandName="Implementors in Working Set" description="Search for implementors of the selected interface in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7YrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.debug" commandName="Debug" description="Debug server" category="_JP7hlbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7Y7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.create.delegate.methods" commandName="Generate Delegate Methods" description="Add delegate methods for a type's fields" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7ZLfJEeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.GenerateBackendProjectCommand" commandName="Generate App Engine Backend..." description="Generate App Engine Backend" category="_JP7hkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7ZbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.search.find.occurrences" commandName="Occurrences in File" description="Find occurrences of the selection in the file" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7ZrfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.showAnnotation" commandName="Show Annotation" description="Show Annotation" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7Z7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.cleanAction" commandName="Build Clean" description="Discard old built state" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7aLfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replace" commandName="Replace With Latest from Repository" description="Replace with last committed content from CVS Server" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7abfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.implement.occurrences" commandName="Search Implement Occurrences in File" description="Search for implement occurrences of a selected type" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7arfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.imagebrowser.saveToWorkspace" commandName="Save Image" description="Save the selected image into a project in the workspace" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7a7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addThrowsDecl" commandName="Quick Fix - Add throws declaration" description="Invokes quick assist and selects 'Add throws declaration'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7bLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7bbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.create.getter.setter" commandName="Generate Getters and Setters" description="Generate Getter and Setter methods for type's fields" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7brfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.windowStart" commandName="Select Window Start" description="Select to the start of the window" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPv7b7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.refactor.migrate.jar" commandName="Migrate JAR File" description="Migrate a JAR File to a new version" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiYLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.outline.customFilter" commandName="&amp;Filters" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiYbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.super.implementation" commandName="Open Super Implementation" description="Open the Implementation in the Super Type" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiYrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.open.type" commandName="Open Type" description="Open a type in a JavaScript editor" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiY7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.closeAllPerspectives" commandName="Close All Perspectives" description="Close all open perspectives" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiZLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.extract.constant" commandName="Extract Constant" description="Extracts a constant into a new static var and uses the new static var" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiZbfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.convertJavaProjectToJpa" commandName="Convert to JPA Project..." category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiZrfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.entityMappingsAddPersistentClass" commandName="Add Class..." category="_JP7hj7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiZ7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findPrevious" commandName="Find Previous" description="Find previous item" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiaLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.changeToStatic" commandName="Quick Fix - Change to static access" description="Invokes quick assist and selects 'Change to static access'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiabfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView" commandName="Show View" description="Shows a particular view" category="_JP7hibfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPwiarfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.viewId" name="View"/>
+    <parameters xmi:id="_JPwia7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.secondaryId" name="Secondary Id"/>
+    <parameters xmi:id="_JPwibLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.showView.makeFast" name="As FastView"/>
   </commands>
-  <commands xmi:id="_eX7Mx7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.superclass" commandName="Extract Superclass" description="Extract a set of members into a new superclass and try to use the new superclass" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7MyLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchAction" commandName="Switch Source/Design Views" description="Switch between the Source and Design views." category="_eYGL77e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7Mybe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.cut.line.to.beginning" commandName="Cut to Beginning of Line" description="Cut to the beginning of a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7Myre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.editor" commandName="Open Declaration" description="Open an editor on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7My7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.goToResource" commandName="Go to" description="Go to a particular resource in the active view" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7MzLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareIndexWithHead" commandName="Compare File in Git Index with HEAD Revision" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7Mzbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.StepReturn" commandName="Step Return" description="Step return" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7Mzre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7Mz7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineEnd" commandName="Line End" description="Go to the end of the line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7M0Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.workspace" commandName="Write Access in Workspace" description="Search for write references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7M0be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delimiter.unix" commandName="Convert Line Delimiters to Unix (LF, \n, 0A, &#xb6;)" description="Converts the line delimiters to Unix (LF, \n, 0A, &#xb6;)" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7M0re6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.inlineLocal.assist" commandName="Quick Assist - Inline local variable" description="Invokes quick assist and selects 'Inline local variable'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7M07e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.convertLocalToField.assist" commandName="Quick Assist - Convert local variable to field" description="Invokes quick assist and selects 'Convert local variable to field'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7M1Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.dialogs.openMessageDialog" commandName="Open Message Dialog" description="Open a Message Dialog" category="_eYGL97e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX7M1be6EeOxntPoYxjofg" elementId="title" name="Title"/>
-    <parameters xmi:id="_eX7M1re6EeOxntPoYxjofg" elementId="message" name="Message"/>
-    <parameters xmi:id="_eX7M17e6EeOxntPoYxjofg" elementId="imageType" name="Image Type Constant" typeId="org.eclipse.ui.dialogs.Integer"/>
-    <parameters xmi:id="_eX7M2Le6EeOxntPoYxjofg" elementId="defaultIndex" name="Default Button Index" typeId="org.eclipse.ui.dialogs.Integer"/>
-    <parameters xmi:id="_eX7M2be6EeOxntPoYxjofg" elementId="buttonLabel0" name="First Button Label"/>
-    <parameters xmi:id="_eX7M2re6EeOxntPoYxjofg" elementId="buttonLabel1" name="Second Button Label"/>
-    <parameters xmi:id="_eX7M27e6EeOxntPoYxjofg" elementId="buttonLabel2" name="Third Button Label"/>
-    <parameters xmi:id="_eX7M3Le6EeOxntPoYxjofg" elementId="buttonLabel3" name="Fourth Button Label"/>
-    <parameters xmi:id="_eX7M3be6EeOxntPoYxjofg" elementId="cancelReturns" name="Return Value on Cancel"/>
+  <commands xmi:id="_JPwibbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.superclass" commandName="Extract Superclass" description="Extract a set of members into a new superclass and try to use the new superclass" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwibrfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.editor.actions.SwitchAction" commandName="Switch Source/Design Views" description="Switch between the Source and Design views." category="_JP7hjrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwib7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.cut.line.to.beginning" commandName="Cut to Beginning of Line" description="Cut to the beginning of a line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwicLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.editor" commandName="Open Declaration" description="Open an editor on the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwicbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.goToResource" commandName="Go to" description="Go to a particular resource in the active view" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwicrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareIndexWithHead" commandName="Compare File in Git Index with HEAD Revision" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwic7fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.StepReturn" commandName="Step Return" description="Step return" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwidLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwidbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineEnd" commandName="Line End" description="Go to the end of the line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwidrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.workspace" commandName="Write Access in Workspace" description="Search for write references to the selected element in the workspace" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwid7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delimiter.unix" commandName="Convert Line Delimiters to Unix (LF, \n, 0A, &#xb6;)" description="Converts the line delimiters to Unix (LF, \n, 0A, &#xb6;)" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwieLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.inlineLocal.assist" commandName="Quick Assist - Inline local variable" description="Invokes quick assist and selects 'Inline local variable'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwiebfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.convertLocalToField.assist" commandName="Quick Assist - Convert local variable to field" description="Invokes quick assist and selects 'Convert local variable to field'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPwierfJEeOxntPoYxjofg" elementId="org.eclipse.ui.dialogs.openMessageDialog" commandName="Open Message Dialog" description="Open a Message Dialog" category="_JP8IkLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPwie7fJEeOxntPoYxjofg" elementId="title" name="Title"/>
+    <parameters xmi:id="_JPwifLfJEeOxntPoYxjofg" elementId="message" name="Message"/>
+    <parameters xmi:id="_JPwifbfJEeOxntPoYxjofg" elementId="imageType" name="Image Type Constant" typeId="org.eclipse.ui.dialogs.Integer"/>
+    <parameters xmi:id="_JPwifrfJEeOxntPoYxjofg" elementId="defaultIndex" name="Default Button Index" typeId="org.eclipse.ui.dialogs.Integer"/>
+    <parameters xmi:id="_JPwif7fJEeOxntPoYxjofg" elementId="buttonLabel0" name="First Button Label"/>
+    <parameters xmi:id="_JPxJcLfJEeOxntPoYxjofg" elementId="buttonLabel1" name="Second Button Label"/>
+    <parameters xmi:id="_JPxJcbfJEeOxntPoYxjofg" elementId="buttonLabel2" name="Third Button Label"/>
+    <parameters xmi:id="_JPxJcrfJEeOxntPoYxjofg" elementId="buttonLabel3" name="Fourth Button Label"/>
+    <parameters xmi:id="_JPxJc7fJEeOxntPoYxjofg" elementId="cancelReturns" name="Return Value on Cancel"/>
   </commands>
-  <commands xmi:id="_eX7M3re6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.OpenDebugConfigurations" commandName="Debug..." description="Open debug launch configuration dialog" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7M37e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewClearCredentials" commandName="Clear Credentials" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z0Le6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.add" commandName="Add to Version Control" description="Add the Selected Resources to Version Control" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z0be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.convertAnonymousToLocal.assist" commandName="Quick Assist - Convert anonymous to local class" description="Invokes quick assist and selects 'Convert anonymous to local class'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z0re6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.convertLocalToField.assist" commandName="Quick Assist - Convert local variable to var" description="Invokes quick assist and selects 'Convert local variable to var'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z07e6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.closeOthers" commandName="Close Others" description="Close all editors except the one that is active" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z1Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.revisions.author.toggle" commandName="Toggle Revision Author Display" description="Toggles the display of the revision author" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z1be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.change.type" commandName="Generalize Declared Type" description="Change the declaration of a selected variable to a more general type consistent with usage" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z1re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.sort.members" commandName="Sort Members" description="Sort all members using the member order preference" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z17e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replaceWithBase" commandName="Revert to Base" description="Revert to Base revisions" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z2Le6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.suite.GDTPulldown" commandName="GDT Pulldown" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z2be6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.project" commandName="Implementors in Project" description="Search for implementors of the selected interface in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z2re6EeOxntPoYxjofg" elementId="sed.tabletree.expandAll" commandName="Expand All" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z27e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.create.delegate.methods" commandName="Generate Delegate Functions" description="Add delegate functions for a type's vars" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z3Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AllInstances" commandName="All Instances" description="View all instances of the selected type loaded in the target VM" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z3be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showChangeRulerInformation" commandName="Show Quick Diff Ruler Tooltip" description="Displays quick diff or revision information for the caret line in a focused hover" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z3re6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z37e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewClone" commandName="Clone a Git Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z4Le6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.disable.grammar.constraints" commandName="Turn off Grammar Constraints" description="Turn off grammar Constraints" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z4be6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.export" commandName="Export Profiles Command" description="Command to export connection profiles" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z4re6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRefresh" commandName="Refresh" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z47e6EeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.openCheatSheetURL" commandName="Open Cheat Sheet from URL" description="Open a Cheat Sheet from file at a specified URL." category="_eYGy87e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX7z5Le6EeOxntPoYxjofg" elementId="cheatSheetId" name="Identifier" optional="false"/>
-    <parameters xmi:id="_eX7z5be6EeOxntPoYxjofg" elementId="name" name="Name" optional="false"/>
-    <parameters xmi:id="_eX7z5re6EeOxntPoYxjofg" elementId="url" name="URL" optional="false"/>
+  <commands xmi:id="_JPxJdLfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.OpenDebugConfigurations" commandName="Debug..." description="Open debug launch configuration dialog" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJdbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewClearCredentials" commandName="Clear Credentials" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJdrfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.add" commandName="Add to Version Control" description="Add the Selected Resources to Version Control" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJd7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.convertAnonymousToLocal.assist" commandName="Quick Assist - Convert anonymous to local class" description="Invokes quick assist and selects 'Convert anonymous to local class'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJeLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.convertLocalToField.assist" commandName="Quick Assist - Convert local variable to var" description="Invokes quick assist and selects 'Convert local variable to var'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJebfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.closeOthers" commandName="Close Others" description="Close all editors except the one that is active" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJerfJEeOxntPoYxjofg" elementId="org.eclipse.ui.editors.revisions.author.toggle" commandName="Toggle Revision Author Display" description="Toggles the display of the revision author" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJe7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.change.type" commandName="Generalize Declared Type" description="Change the declaration of a selected variable to a more general type consistent with usage" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJfLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.sort.members" commandName="Sort Members" description="Sort all members using the member order preference" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJfbfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replaceWithBase" commandName="Revert to Base" description="Revert to Base revisions" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJfrfJEeOxntPoYxjofg" elementId="com.google.gdt.eclipse.suite.GDTPulldown" commandName="GDT Pulldown" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJf7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.project" commandName="Implementors in Project" description="Search for implementors of the selected interface in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJgLfJEeOxntPoYxjofg" elementId="sed.tabletree.expandAll" commandName="Expand All" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJgbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.create.delegate.methods" commandName="Generate Delegate Functions" description="Add delegate functions for a type's vars" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJgrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AllInstances" commandName="All Instances" description="View all instances of the selected type loaded in the target VM" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJg7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showChangeRulerInformation" commandName="Show Quick Diff Ruler Tooltip" description="Displays quick diff or revision information for the caret line in a focused hover" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJhLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJhbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewClone" commandName="Clone a Git Repository" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJhrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.disable.grammar.constraints" commandName="Turn off Grammar Constraints" description="Turn off grammar Constraints" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJh7fJEeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.export" commandName="Export Profiles Command" description="Command to export connection profiles" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJiLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRefresh" commandName="Refresh" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxJibfJEeOxntPoYxjofg" elementId="org.eclipse.ui.cheatsheets.openCheatSheetURL" commandName="Open Cheat Sheet from URL" description="Open a Cheat Sheet from file at a specified URL." category="_JP8IlrfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPxJirfJEeOxntPoYxjofg" elementId="cheatSheetId" name="Identifier" optional="false"/>
+    <parameters xmi:id="_JPxJi7fJEeOxntPoYxjofg" elementId="name" name="Name" optional="false"/>
+    <parameters xmi:id="_JPxJjLfJEeOxntPoYxjofg" elementId="url" name="URL" optional="false"/>
   </commands>
-  <commands xmi:id="_eX7z57e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.lockToolBar" commandName="Lock the Toolbars" description="Lock the Toolbars" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z6Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildAll" commandName="Build All" description="Build all projects" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z6be6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.expandAll" commandName="Expand All" description="Expand the current tree" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z6re6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.import" commandName="Import" description="Import" category="_eYGL67e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX7z67e6EeOxntPoYxjofg" elementId="importWizardId" name="Import Wizard"/>
+  <commands xmi:id="_JPxwgLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.lockToolBar" commandName="Lock the Toolbars" description="Lock the Toolbars" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwgbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildAll" commandName="Build All" description="Build all projects" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwgrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.expandAll" commandName="Expand All" description="Expand the current tree" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwg7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.import" commandName="Import" description="Import" category="_JP7hirfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPxwhLfJEeOxntPoYxjofg" elementId="importWizardId" name="Import Wizard"/>
   </commands>
-  <commands xmi:id="_eX7z7Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.helpSearch" commandName="Help Search" description="Open the help search" category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX7z7be6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer" commandName="Dump Log Sniffer Buffer" category="_eYGy8be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX7z7re6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer.param1" name="Command" optional="false"/>
+  <commands xmi:id="_JPxwhbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.help.helpSearch" commandName="Help Search" description="Open the help search" category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwhrfJEeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer" commandName="Dump Log Sniffer Buffer" category="_JP8IlLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPxwh7fJEeOxntPoYxjofg" elementId="com.google.gwt.eclipse.oophm.logSniffer.param1" name="Command" optional="false"/>
   </commands>
-  <commands xmi:id="_eX7z77e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.importFromRepository" commandName="Import Plug-in from a Repository" description="Imports a plug-in from a source repository" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a4Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.windowEnd" commandName="Window End" description="Go to the end of the window" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a4be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.occurrences.in.file" commandName="Search All Occurrences in File" description="Search for all occurrences of the selected element in its declaring file" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a4re6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.update" commandName="Update" description="Update resources with new content from the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a47e6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.indexcommand" commandName="Index" description="Show Keyword Index" category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a5Le6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.renameInFile" commandName="Rename In File" description="Renames all references within the same buildfile" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a5be6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.appsmarketplace.actions.listOnAppsMarketplace" commandName="List on Google Apps Marketplace..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a5re6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.RenameBranch" commandName="Rename Branch..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a57e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.create.getter.setter" commandName="Generate Getters and Setters" description="Generate Getter and Setter functions for type's vars" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a6Le6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Rebase" commandName="Rebase" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a6be6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.pinEditor" commandName="Pin Editor" description="Pin the current editor" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a6re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.encapsulateField.assist" commandName="Quick Assist - Create getter/setter for field" description="Invokes quick assist and selects 'Create getter/setter for field'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a67e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.sort.members" commandName="Sort Members" description="Sort all members using the member order preference" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a7Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Inspect" commandName="Inspect" description="Inspect result of evaluating selected text" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a7be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.workspace" commandName="Declaration in Workspace" description="Search for declarations of the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a7re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.block.comment" commandName="Add Block Comment" description="Enclose the selection with a block comment" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a77e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.import" commandName="Add Import" description="Create import statement on selection" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a8Le6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.gototype" commandName="Go to Type" description="Go to Type" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a8be6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Tag" commandName="Tag" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a8re6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ShowRepositoriesView" commandName="Show Git Repositories View" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a87e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.restore" commandName="Reset Structure" description="Resets the folding structure" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a9Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.restartWorkbench" commandName="Restart" description="Restart the workbench" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a9be6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file.quickMenu" commandName="Show Occurrences in File Quick Menu" description="Shows the Occurrences in File quick menu" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a9re6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigurePush" commandName="Configure Push..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a97e6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.export" commandName="Export" description="Export" category="_eYGL67e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX8a-Le6EeOxntPoYxjofg" elementId="exportWizardId" name="Export Wizard"/>
+  <commands xmi:id="_JPxwiLfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.importFromRepository" commandName="Import Plug-in from a Repository" description="Imports a plug-in from a source repository" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwibfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.windowEnd" commandName="Window End" description="Go to the end of the window" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwirfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.occurrences.in.file" commandName="Search All Occurrences in File" description="Search for all occurrences of the selected element in its declaring file" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwi7fJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.update" commandName="Update" description="Update resources with new content from the repository" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwjLfJEeOxntPoYxjofg" elementId="org.eclipse.help.ui.indexcommand" commandName="Index" description="Show Keyword Index" category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwjbfJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.renameInFile" commandName="Rename In File" description="Renames all references within the same buildfile" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwjrfJEeOxntPoYxjofg" elementId="com.google.gdt.eclipse.appsmarketplace.actions.listOnAppsMarketplace" commandName="List on Google Apps Marketplace..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwj7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.RenameBranch" commandName="Rename Branch..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwkLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.create.getter.setter" commandName="Generate Getters and Setters" description="Generate Getter and Setter functions for type's vars" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwkbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Rebase" commandName="Rebase" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwkrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.pinEditor" commandName="Pin Editor" description="Pin the current editor" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwk7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.encapsulateField.assist" commandName="Quick Assist - Create getter/setter for field" description="Invokes quick assist and selects 'Create getter/setter for field'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwlLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.sort.members" commandName="Sort Members" description="Sort all members using the member order preference" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwlbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Inspect" commandName="Inspect" description="Inspect result of evaluating selected text" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwlrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.workspace" commandName="Declaration in Workspace" description="Search for declarations of the selected element in the workspace" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwl7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.block.comment" commandName="Add Block Comment" description="Enclose the selection with a block comment" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwmLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.import" commandName="Add Import" description="Create import statement on selection" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwmbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.gototype" commandName="Go to Type" description="Go to Type" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwmrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Tag" commandName="Tag" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwm7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ShowRepositoriesView" commandName="Show Git Repositories View" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwnLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.restore" commandName="Reset Structure" description="Resets the folding structure" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPxwnbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.restartWorkbench" commandName="Restart" description="Restart the workbench" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXkLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file.quickMenu" commandName="Show Occurrences in File Quick Menu" description="Shows the Occurrences in File quick menu" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXkbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigurePush" commandName="Configure Push..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXkrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.export" commandName="Export" description="Export" category="_JP7hirfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPyXk7fJEeOxntPoYxjofg" elementId="exportWizardId" name="Export Wizard"/>
   </commands>
-  <commands xmi:id="_eX8a-be6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactoring.commands.renameResource" commandName="Rename Resource" description="Rename the selected resource and notify LTK participants." category="_eYGy9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a-re6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.resetPerspective" commandName="Reset Perspective" description="Reset the current perspective to its default state" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a-7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.core.deployToGoogle" commandName="Deploy to Google" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX8a_Le6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.searchTargetRepositories" commandName="Add Artifact to Target Platform" description="Add an artifact to your target platform" category="_eYGy8be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX8a_be6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.searchTargetRepositories.term" name="The initial search pattern for the artifact search dialog"/>
+  <commands xmi:id="_JPyXlLfJEeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactoring.commands.renameResource" commandName="Rename Resource" description="Rename the selected resource and notify LTK participants." category="_JP8ImLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXlbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.resetPerspective" commandName="Reset Perspective" description="Reset the current perspective to its default state" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXlrfJEeOxntPoYxjofg" elementId="com.google.appengine.eclipse.core.deployToGoogle" commandName="Deploy to Google" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXl7fJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.searchTargetRepositories" commandName="Add Artifact to Target Platform" description="Add an artifact to your target platform" category="_JP8IlLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPyXmLfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.searchTargetRepositories.term" name="The initial search pattern for the artifact search dialog"/>
   </commands>
-  <commands xmi:id="_eX9B8Le6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ConfigureUpstreamPush" commandName="Configure Upstream Push" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B8be6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.savePerspective" commandName="Save Perspective As" description="Save the current perspective" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B8re6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showInformation" commandName="Show Tooltip Description" description="Displays information for the current caret location in a focused hover" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B87e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ConfigureFetch" commandName="Configure Upstream Fetch" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B9Le6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.nextMemoryBlock" commandName="Next Memory Monitor" description="Show renderings from next memory monitor." category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B9be6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleOverwrite" commandName="Toggle Overwrite" description="Toggle overwrite mode" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B9re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.project" commandName="Write Access in Project" description="Search for write references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B97e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.specific_content_assist.command" commandName="Content Assist" description="A parameterizable command that invokes content assist with a single completion proposal category" category="_eYGy8Le6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX9B-Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.specific_content_assist.category_id" name="type" optional="false"/>
+  <commands xmi:id="_JPyXmbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.ConfigureUpstreamPush" commandName="Configure Upstream Push" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXmrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.savePerspective" commandName="Save Perspective As" description="Save the current perspective" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXm7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showInformation" commandName="Show Tooltip Description" description="Displays information for the current caret location in a focused hover" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXnLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ConfigureFetch" commandName="Configure Upstream Fetch" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXnbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.nextMemoryBlock" commandName="Next Memory Monitor" description="Show renderings from next memory monitor." category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXnrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleOverwrite" commandName="Toggle Overwrite" description="Toggle overwrite mode" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXn7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.project" commandName="Write Access in Project" description="Search for write references to the selected element in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXoLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.specific_content_assist.command" commandName="Content Assist" description="A parameterizable command that invokes content assist with a single completion proposal category" category="_JP8Ik7fJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPyXobfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.specific_content_assist.category_id" name="type" optional="false"/>
   </commands>
-  <commands xmi:id="_eX9B-be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addCast" commandName="Quick Fix - Add cast" description="Invokes quick assist and selects 'Add cast'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B-re6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.suite.ext.importGaeDemo" commandName="Import App Engine Sample Apps" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B-7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.showKeyAssist" commandName="Show Key Assist" description="Show the key assist dialog" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B_Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.saveAs" commandName="Save As" description="Save the current contents to another location" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B_be6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchWorkspace" commandName="Find Text in Workspace" description="Searches the files in the workspace for specific text." category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B_re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.working.set" commandName="Implementors in Working Set" description="Search for implementors of the selected interface in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9B_7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaPerspective" commandName="Java" description="Show the Java perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CALe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.openEditorDropDown" commandName="Quick Switch Editor" description="Open the editor drop down list" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CAbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.changeToStatic" commandName="Quick Fix - Change to static access" description="Invokes quick assist and selects 'Change to static access'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CAre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.override.methods" commandName="Override/Implement Methods" description="Override or implement methods from super types" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CA7e6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchFile" commandName="Find Text in File" description="Searches the files in the file for specific text." category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CBLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.paste" commandName="Paste" description="Paste from the clipboard" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CBbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.convertAnonymousToLocal.assist" commandName="Quick Assist - Convert anonymous to local class" description="Invokes quick assist and selects 'Convert anonymous to local class'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CBre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.EquinoxLaunchShortcut.debug" commandName="Debug OSGi Framework" description="Debug OSGi Framework" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CB7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.source.quickMenu" commandName="Show Source Quick Menu" description="Shows the source quick menu" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CCLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCopyPath" commandName="Copy Path to Clipboard" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CCbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Ignore" commandName="Ignore" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CCre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.RemoveFromIndex" commandName="Remove from Git Index" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CC7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineUp" commandName="Line Up" description="Go up one line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CDLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.externalize.strings" commandName="Externalize Strings" description="Finds all strings that are not externalized and moves them into a separate property file" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9CDbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.working.set" commandName="Write Access in Working Set" description="Search for write references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pALe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.back" commandName="Back" description="Navigate back" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pAbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.workspace" commandName="References in Workspace" description="Search for references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pAre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleStepFilters" commandName="Use Step Filters" description="Toggles enablement of debug step filters" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pA7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.introduce.indirection" commandName="Introduce Indirection" description="Introduce an indirection to encapsulate invocations of a selected function" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pBLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesLinkWithSelection" commandName="Link with Selection" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pBbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.org.eclipse.egit.ui.AbortRebase" commandName="Abort Rebase" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pBre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Fetch" commandName="Fetch" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pB7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.SetQuickdiffBaseline" commandName="Set quickdiff baseline" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pCLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewDelete" commandName="Delete Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pCbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ShowBlame" commandName="Show Annotations" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pCre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Pull" commandName="Pull" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pC7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.recenter" commandName="Recenter" description="Recenter the window based on the cursor" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pDLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.tag" commandName="Tag as Version" description="Tag the resources with a CVS version tag" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pDbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.refresh" commandName="Refresh" description="Refresh the selected items" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pDre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.unimplemented.constructors" commandName="Generate Constructors from Superclass" description="Evaluate and add constructors from superclass" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pD7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CreateBranch" commandName="Create Branch" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pELe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.move.element" commandName="Move - Refactoring " description="Move the selected element to a new location" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pEbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.pageUp" commandName="Page Up" description="Go up one page" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pEre6EeOxntPoYxjofg" elementId="sed.tabletree.collapseAll" commandName="Collapse All" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pE7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.openManifest" commandName="Open Manifest" description="Open the plug-in manifest" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pFLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.OpenRunConfigurations" commandName="Run..." description="Open run launch configuration dialog" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pFbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.AssumeUnchanged" commandName="Assume Unchanged" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pFre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.commands.showElementInTypeHierarchyView" commandName="Show Java Element Type Hierarchy" description="Show a Java element in the Type Hierarchy view" category="_eYGy9re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX9pF7e6EeOxntPoYxjofg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
+  <commands xmi:id="_JPyXorfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addCast" commandName="Quick Fix - Add cast" description="Invokes quick assist and selects 'Add cast'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXo7fJEeOxntPoYxjofg" elementId="com.google.gdt.eclipse.suite.ext.importGaeDemo" commandName="Import App Engine Sample Apps" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXpLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.showKeyAssist" commandName="Show Key Assist" description="Show the key assist dialog" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXpbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.saveAs" commandName="Save As" description="Save the current contents to another location" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXprfJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchWorkspace" commandName="Find Text in Workspace" description="Searches the files in the workspace for specific text." category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXp7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.working.set" commandName="Implementors in Working Set" description="Search for implementors of the selected interface in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXqLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaPerspective" commandName="Java" description="Show the Java perspective" category="_JP7hhLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXqbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.openEditorDropDown" commandName="Quick Switch Editor" description="Open the editor drop down list" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXqrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.changeToStatic" commandName="Quick Fix - Change to static access" description="Invokes quick assist and selects 'Change to static access'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXq7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.override.methods" commandName="Override/Implement Methods" description="Override or implement methods from super types" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXrLfJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.performTextSearchFile" commandName="Find Text in File" description="Searches the files in the file for specific text." category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXrbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.paste" commandName="Paste" description="Paste from the clipboard" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPyXrrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.convertAnonymousToLocal.assist" commandName="Quick Assist - Convert anonymous to local class" description="Invokes quick assist and selects 'Convert anonymous to local class'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-oLfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.EquinoxLaunchShortcut.debug" commandName="Debug OSGi Framework" description="Debug OSGi Framework" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-obfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.source.quickMenu" commandName="Show Source Quick Menu" description="Shows the source quick menu" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-orfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCopyPath" commandName="Copy Path to Clipboard" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-o7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Ignore" commandName="Ignore" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-pLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.RemoveFromIndex" commandName="Remove from Git Index" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-pbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineUp" commandName="Line Up" description="Go up one line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-prfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.externalize.strings" commandName="Externalize Strings" description="Finds all strings that are not externalized and moves them into a separate property file" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-p7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.write.access.in.working.set" commandName="Write Access in Working Set" description="Search for write references to the selected element in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-qLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.back" commandName="Back" description="Navigate back" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-qbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.workspace" commandName="References in Workspace" description="Search for references to the selected element in the workspace" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-qrfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleStepFilters" commandName="Use Step Filters" description="Toggles enablement of debug step filters" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-q7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.introduce.indirection" commandName="Introduce Indirection" description="Introduce an indirection to encapsulate invocations of a selected function" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-rLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesLinkWithSelection" commandName="Link with Selection" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-rbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.org.eclipse.egit.ui.AbortRebase" commandName="Abort Rebase" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-rrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Fetch" commandName="Fetch" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-r7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.SetQuickdiffBaseline" commandName="Set quickdiff baseline" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-sLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewDelete" commandName="Delete Repository" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-sbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ShowBlame" commandName="Show Annotations" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-srfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Pull" commandName="Pull" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-s7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.recenter" commandName="Recenter" description="Recenter the window based on the cursor" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-tLfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.tag" commandName="Tag as Version" description="Tag the resources with a CVS version tag" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-tbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.refresh" commandName="Refresh" description="Refresh the selected items" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-trfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.unimplemented.constructors" commandName="Generate Constructors from Superclass" description="Evaluate and add constructors from superclass" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-t7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CreateBranch" commandName="Create Branch" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-uLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.move.element" commandName="Move - Refactoring " description="Move the selected element to a new location" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-ubfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.pageUp" commandName="Page Up" description="Go up one page" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-urfJEeOxntPoYxjofg" elementId="sed.tabletree.collapseAll" commandName="Collapse All" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-u7fJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.openManifest" commandName="Open Manifest" description="Open the plug-in manifest" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-vLfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.OpenRunConfigurations" commandName="Run..." description="Open run launch configuration dialog" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPy-vbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.AssumeUnchanged" commandName="Assume Unchanged" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlsLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.commands.showElementInTypeHierarchyView" commandName="Show Java Element Type Hierarchy" description="Show a Java element in the Type Hierarchy view" category="_JP8ImbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JPzlsbfJEeOxntPoYxjofg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
   </commands>
-  <commands xmi:id="_eX9pGLe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.SkipAllBreakpoints" commandName="Skip All Breakpoints" description="Sets whether or not any breakpoint should suspend execution" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pGbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.extractLocalNotReplaceOccurrences.assist" commandName="Quick Assist - Extract local variable" description="Invokes quick assist and selects 'Extract local variable'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pGre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pG7e6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactor.show.refactoring.history" commandName="Open Refactoring History " description="Opens the refactoring history" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pHLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.AddToIndex" commandName="Add to Git Index" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX9pHbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.workspace" commandName="Read Access in Workspace" description="Search for read references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QELe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.customizePerspective" commandName="Customize Perspective" description="Customize the current perspective" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QEbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showInQuickMenu" commandName="Show In..." description="Open the Show In menu" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QEre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.hierarchy" commandName="Read Access in Hierarchy" description="Search for read references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QE7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.change.type" commandName="Generalize Declared Type" description="Change the declaration of a selected variable to a more general type consistent with usage" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QFLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.CheckoutCommand" commandName="Checkout" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QFbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.rename" commandName="Rename" description="Rename the selected item" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QFre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.block.comment" commandName="Add Block Comment" description="Enclose the selection with a block comment" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QF7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file" commandName="Search All Occurrences in File" description="Search for all occurrences of the selected element in its declaring file" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QGLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.implementation" commandName="Open Implementation" description="Opens the Implementations of a method in its hierarchy" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QGbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.internal.reflog.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QGre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaBrowsingPerspective" commandName="JavaScript Browsing" description="Show the JavaScript Browsing perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QG7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineUp" commandName="Select Line Up" description="Extend the selection to the previous line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QHLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.project" commandName="Read Access in Project" description="Search for read references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QHbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ShowHistory" commandName="Show in History" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QHre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.show.in.package.view" commandName="Show in Script Explorer" description="Show the selected element in the Script Explorer" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QH7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replaceWithTag" commandName="Replace With Another Branch or Version" description="Replace with Branch or Version on the CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QILe6EeOxntPoYxjofg" elementId="org.eclipse.compare.compareWithOther" commandName="Compare With Other Resource" description="Compare resources, clipboard contents or editors" category="_eYGy9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QIbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QIre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Push" commandName="Push" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QI7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.stash.apply" commandName="Apply Stashed Changes" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QJLe6EeOxntPoYxjofg" elementId="org.eclipse.compare.copyAllLeftToRight" commandName="Copy All from Left to Right" description="Copy All Changes from Left to Right" category="_eYGy9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QJbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.selectAll" commandName="Select All" description="Select all" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QJre6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.ignoreMissingPlaceholders" commandName="Do not warn of missing documentation" description="Sets the help preferences to no longer report a warning about the current set of missing documents." category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QJ7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.replace.invocations" commandName="Replace Invocations" description="Replace invocations of the selected function" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QKLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.commands.empty" commandName="Empty command" description="Command which does nothing" category="_eYGL77e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QKbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.copy" commandName="Copy" description="Copy the selection to the clipboard" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QKre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.Revert" commandName="Revert Commit" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QK7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.project" commandName="Declaration in Project" description="Search for declarations of the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QLLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateBranch" commandName="Create Branch..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-QLbe6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.addprofile" commandName="New Connection Profile Command" description="Command to create a new connection profile" category="_eYGy8be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX-3ILe6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.ui.ignoreCategory" name="ignoreCategory"/>
-    <parameters xmi:id="_eX-3Ibe6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.ui.useSelection" name="useSelection"/>
+  <commands xmi:id="_JPzlsrfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.SkipAllBreakpoints" commandName="Skip All Breakpoints" description="Sets whether or not any breakpoint should suspend execution" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzls7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.extractLocalNotReplaceOccurrences.assist" commandName="Quick Assist - Extract local variable" description="Invokes quick assist and selects 'Extract local variable'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzltLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzltbfJEeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactor.show.refactoring.history" commandName="Open Refactoring History " description="Opens the refactoring history" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzltrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.AddToIndex" commandName="Add to Git Index" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlt7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.read.access.in.workspace" commandName="Read Access in Workspace" description="Search for read references to the selected element in the workspace" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzluLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.customizePerspective" commandName="Customize Perspective" description="Customize the current perspective" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlubfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showInQuickMenu" commandName="Show In..." description="Open the Show In menu" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlurfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.hierarchy" commandName="Read Access in Hierarchy" description="Search for read references of the selected element in its hierarchy" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlu7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.change.type" commandName="Generalize Declared Type" description="Change the declaration of a selected variable to a more general type consistent with usage" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlvLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.CheckoutCommand" commandName="Checkout" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlvbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.rename" commandName="Rename" description="Rename the selected item" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlvrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.block.comment" commandName="Add Block Comment" description="Enclose the selection with a block comment" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlv7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.occurrences.in.file" commandName="Search All Occurrences in File" description="Search for all occurrences of the selected element in its declaring file" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlwLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.implementation" commandName="Open Implementation" description="Opens the Implementations of a method in its hierarchy" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlwbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.internal.reflog.OpenInCommitViewerCommand" commandName="Open in Commit Viewer" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlwrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavaBrowsingPerspective" commandName="JavaScript Browsing" description="Show the JavaScript Browsing perspective" category="_JP7hhLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlw7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineUp" commandName="Select Line Up" description="Extend the selection to the previous line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlxLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.project" commandName="Read Access in Project" description="Search for read references to the selected element in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlxbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ShowHistory" commandName="Show in History" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlxrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.show.in.package.view" commandName="Show in Script Explorer" description="Show the selected element in the Script Explorer" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlx7fJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replaceWithTag" commandName="Replace With Another Branch or Version" description="Replace with Branch or Version on the CVS Server" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlyLfJEeOxntPoYxjofg" elementId="org.eclipse.compare.compareWithOther" commandName="Compare With Other Resource" description="Compare resources, clipboard contents or editors" category="_JP8Il7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlybfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlyrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Push" commandName="Push" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzly7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.stash.apply" commandName="Apply Stashed Changes" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JPzlzLfJEeOxntPoYxjofg" elementId="org.eclipse.compare.copyAllLeftToRight" commandName="Copy All from Left to Right" description="Copy All Changes from Left to Right" category="_JP8Il7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MwLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.selectAll" commandName="Select All" description="Select all" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MwbfJEeOxntPoYxjofg" elementId="org.eclipse.help.ui.ignoreMissingPlaceholders" commandName="Do not warn of missing documentation" description="Sets the help preferences to no longer report a warning about the current set of missing documents." category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MwrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.replace.invocations" commandName="Replace Invocations" description="Replace invocations of the selected function" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0Mw7fJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.xml.commands.empty" commandName="Empty command" description="Command which does nothing" category="_JP7hjrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MxLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.copy" commandName="Copy" description="Copy the selection to the clipboard" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MxbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.Revert" commandName="Revert Commit" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MxrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.project" commandName="Declaration in Project" description="Search for declarations of the selected element in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0Mx7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateBranch" commandName="Create Branch..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MyLfJEeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.addprofile" commandName="New Connection Profile Command" description="Command to create a new connection profile" category="_JP8IlLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP0MybfJEeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.ui.ignoreCategory" name="ignoreCategory"/>
+    <parameters xmi:id="_JP0MyrfJEeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.ui.useSelection" name="useSelection"/>
   </commands>
-  <commands xmi:id="_eX-3Ire6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.openExternalDoc" commandName="Open External Documentation" description="Open the External documentation for the current task in the Ant editor" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3I7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaHierarchyPerspective" commandName="Java Type Hierarchy" description="Show the Java Type Hierarchy perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3JLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.inline" commandName="Inline" description="Inline a constant, local variable or function" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Jbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.indent" commandName="Correct Indentation" description="Corrects the indentation of the selected lines" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Jre6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.copyConfigCommand" commandName="Copy Configuration Data To Clipboard" description="Copies the configuration data (system properties, installed bundles, etc) to the clipboard." category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3J7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.exception.occurrences" commandName="Search Exception Occurrences in File" description="Search for exception occurrences of a selected exception type" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3KLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.part.previousPage" commandName="Previous Page" description="Switch to the previous page" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Kbe6EeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.addrepository" commandName="New Repository Profile Command" description="Command to create a new repository profile" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Kre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Synchronize" commandName="Synchronize" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3K7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.hierarchy" commandName="Quick Hierarchy" description="Show the quick hierarchy of the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3LLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.format" commandName="Format" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Lbe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.generateEntities" commandName="Generate Entities from Tables..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Lre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.externalizeStrings" commandName="Externalize Strings in Plug-ins" description="Extract translatable strings from plug-in files" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3L7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.GarbageCollect" commandName="Collect Garbage" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3MLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.hierarchy" commandName="References in Hierarchy" description="Search for references of the selected element in its hierarchy" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Mbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.comment" commandName="Comment" description="Turn the selected lines into JavaScript comments" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Mre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.showViewMenu" commandName="Show View Menu" description="Show the view menu" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3M7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.refactor.create.refactoring.script" commandName="Create Script" description="Create a refactoring script from refactorings on the local workspace" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3NLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseComments" commandName="Collapse Comments" description="Collapse all comments" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Nbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findIncremental" commandName="Incremental Find" description="Incremental find" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Nre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.edit.text.format" commandName="Format Source" description="Format a PDE Source Page" category="_eYGL7re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3N7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.DeleteBranch" commandName="Delete Branch..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3OLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.previousEditor" commandName="Previous Editor" description="Switch to the previous editor" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Obe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.self.encapsulate.field" commandName="Encapsulate Var" description="Create getting and setting functions for the var and use only those to access the var" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX-3Ore6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.collapse_all" commandName="Collapse All" description="Collapses all folded regions" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eMLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.perspectives.showPerspective" commandName="Show Perspective" description="Show a particular perspective" category="_eYGL5be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX_eMbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.perspectives.showPerspective.perspectiveId" name="Parameter"/>
-    <parameters xmi:id="_eX_eMre6EeOxntPoYxjofg" elementId="org.eclipse.ui.perspectives.showPerspective.newWindow" name="In New Window"/>
+  <commands xmi:id="_JP0My7fJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.openExternalDoc" commandName="Open External Documentation" description="Open the External documentation for the current task in the Ant editor" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MzLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.JavaHierarchyPerspective" commandName="Java Type Hierarchy" description="Show the Java Type Hierarchy perspective" category="_JP7hhLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MzbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.inline" commandName="Inline" description="Inline a constant, local variable or function" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0MzrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.indent" commandName="Correct Indentation" description="Corrects the indentation of the selected lines" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0Mz7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.ide.copyConfigCommand" commandName="Copy Configuration Data To Clipboard" description="Copies the configuration data (system properties, installed bundles, etc) to the clipboard." category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M0LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.exception.occurrences" commandName="Search Exception Occurrences in File" description="Search for exception occurrences of a selected exception type" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M0bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.part.previousPage" commandName="Previous Page" description="Switch to the previous page" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M0rfJEeOxntPoYxjofg" elementId="org.eclipse.datatools.connectivity.commands.addrepository" commandName="New Repository Profile Command" description="Command to create a new repository profile" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M07fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Synchronize" commandName="Synchronize" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M1LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.hierarchy" commandName="Quick Hierarchy" description="Show the quick hierarchy of the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M1bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.format" commandName="Format" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M1rfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.generateEntities" commandName="Generate Entities from Tables..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M17fJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.externalizeStrings" commandName="Externalize Strings in Plug-ins" description="Extract translatable strings from plug-in files" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M2LfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.GarbageCollect" commandName="Collect Garbage" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M2bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.references.in.hierarchy" commandName="References in Hierarchy" description="Search for references of the selected element in its hierarchy" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M2rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.comment" commandName="Comment" description="Turn the selected lines into JavaScript comments" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M27fJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.showViewMenu" commandName="Show View Menu" description="Show the view menu" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0M3LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.refactor.create.refactoring.script" commandName="Create Script" description="Create a refactoring script from refactorings on the local workspace" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z0LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.folding.collapseComments" commandName="Collapse Comments" description="Collapse all comments" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z0bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findIncremental" commandName="Incremental Find" description="Incremental find" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z0rfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.edit.text.format" commandName="Format Source" description="Format a PDE Source Page" category="_JP7hjbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z07fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.DeleteBranch" commandName="Delete Branch..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z1LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.previousEditor" commandName="Previous Editor" description="Switch to the previous editor" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z1bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.self.encapsulate.field" commandName="Encapsulate Var" description="Create getting and setting functions for the var and use only those to access the var" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z1rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.collapse_all" commandName="Collapse All" description="Collapses all folded regions" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z17fJEeOxntPoYxjofg" elementId="org.eclipse.ui.perspectives.showPerspective" commandName="Show Perspective" description="Show a particular perspective" category="_JP7hhLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP0z2LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.perspectives.showPerspective.perspectiveId" name="Parameter"/>
+    <parameters xmi:id="_JP0z2bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.perspectives.showPerspective.newWindow" name="In New Window"/>
   </commands>
-  <commands xmi:id="_eX_eM7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.reload.dependencies" commandName="Reload Dependencies" description="Reload Dependencies" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eNLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.previousSubTab" commandName="Previous Sub-Tab" description="Switch to the previous sub-tab" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eNbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.smartEnter" commandName="Insert Line Below Current Line" description="Adds a new line below the current line" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eNre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.refactor.apply.refactoring.script" commandName="Apply Script" description="Perform refactorings from a refactoring script on the local workspace" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eN7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Reset" commandName="Reset" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eOLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.contentAssist.proposals" commandName="Content Assist" description="Content Assist" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eObe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.expand_all" commandName="Expand All" description="Expands all folded regions" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eOre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.nextTab" commandName="Next Tab" description="Switch to the next tab" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eO7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.stop" commandName="Stop" description="Stop the server" category="_eYGL9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_ePLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Discard" commandName="Replace with File in Git Index" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_ePbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.OpenMarkersView" commandName="Open Another" description="Open another view" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_ePre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.NoAssumeUnchanged" commandName="No Assume Unchanged" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eP7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.windowEnd" commandName="Select Window End" description="Select to the end of the window" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eQLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.command.shareProject" commandName="Share with Git" description="Share the project using Git" category="_eYGy8be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX_eQbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.command.projectNameParameter" name="Project" optional="false"/>
+  <commands xmi:id="_JP0z2rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.reload.dependencies" commandName="Reload Dependencies" description="Reload Dependencies" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z27fJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.previousSubTab" commandName="Previous Sub-Tab" description="Switch to the previous sub-tab" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z3LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.smartEnter" commandName="Insert Line Below Current Line" description="Adds a new line below the current line" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z3bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.refactor.apply.refactoring.script" commandName="Apply Script" description="Perform refactorings from a refactoring script on the local workspace" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z3rfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Reset" commandName="Reset" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z37fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.contentAssist.proposals" commandName="Content Assist" description="Content Assist" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z4LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.folding.expand_all" commandName="Expand All" description="Expands all folded regions" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z4bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.nextTab" commandName="Next Tab" description="Switch to the next tab" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z4rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.stop" commandName="Stop" description="Stop the server" category="_JP7hlbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z47fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Discard" commandName="Replace with File in Git Index" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z5LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.ide.OpenMarkersView" commandName="Open Another" description="Open another view" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z5bfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.NoAssumeUnchanged" commandName="No Assume Unchanged" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z5rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.windowEnd" commandName="Select Window End" description="Select to the end of the window" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z57fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.command.shareProject" commandName="Share with Git" description="Share the project using Git" category="_JP8IlLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP0z6LfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.command.projectNameParameter" name="Project" optional="false"/>
   </commands>
-  <commands xmi:id="_eX_eQre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Suspend" commandName="Suspend" description="Suspend" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eQ7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eRLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.commands.showElementInPackageView" commandName="Show Java Element in Package Explorer" description="Select Java element in the Package Explorer view" category="_eYGy9re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX_eRbe6EeOxntPoYxjofg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
+  <commands xmi:id="_JP0z6bfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Suspend" commandName="Suspend" description="Suspend" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z6rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP0z67fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.commands.showElementInPackageView" commandName="Show Java Element in Package Explorer" description="Select Java element in the Package Explorer view" category="_JP8ImbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP1a4LfJEeOxntPoYxjofg" elementId="elementRef" name="Java element reference" typeId="org.eclipse.jdt.ui.commands.javaElementReference" optional="false"/>
   </commands>
-  <commands xmi:id="_eX_eRre6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.synchronizeAll" commandName="Synchronize..." description="Synchronize resources in the workspace with another location" category="_eYGy8re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eR7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.PackageExplorer" commandName="JavaScript Script Explorer" description="Show the Script Explorer" category="_eYGL6re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eSLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.displayHelp" commandName="Display Help" description="Display a Help topic" category="_eYGy87e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eX_eSbe6EeOxntPoYxjofg" elementId="href" name="Help topic href"/>
+  <commands xmi:id="_JP1a4bfJEeOxntPoYxjofg" elementId="org.eclipse.team.ui.synchronizeAll" commandName="Synchronize..." description="Synchronize resources in the workspace with another location" category="_JP8IlbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a4rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.PackageExplorer" commandName="JavaScript Script Explorer" description="Show the Script Explorer" category="_JP7hibfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a47fJEeOxntPoYxjofg" elementId="org.eclipse.ui.help.displayHelp" commandName="Display Help" description="Display a Help topic" category="_JP8IlrfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP1a5LfJEeOxntPoYxjofg" elementId="href" name="Help topic href"/>
   </commands>
-  <commands xmi:id="_eX_eSre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Branch" commandName="Branch" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eX_eS7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.debug" commandName="Debug JUnit Test" description="Debug JUnit Test" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFQLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.closeProject" commandName="Close Project" description="Close the selected project" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFQbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.assignParamToField.assist" commandName="Quick Assist - Assign parameter to field" description="Invokes quick assist and selects 'Assign parameter to field'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFQre6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.commitAll" commandName="Commit All Outgoing Changes" description="Commit all outgoing changes to the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFQ7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.cvsPerspective" commandName="CVS Repository Exploring" description="Open the CVS Repository Exploring Perspective" category="_eYGL5be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFRLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addImport" commandName="Quick Fix - Add import" description="Invokes quick assist and selects 'Add import'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFRbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.FetchGerritChange" commandName="Fetch From Gerrit" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFRre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.rerunLast" commandName="Rerun JUnit Test" description="Rerun JUnit Test" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFR7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.callhierarchy.view" commandName="JavaScript Call Hierarchy" description="Show the Call Hierarchy view" category="_eYGL6re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFSLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.java.open.structure" commandName="Open Structure" description="Show the structure of the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFSbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavadocView" commandName="Documentation" description="Show the JavaScript Documentation view" category="_eYGL6re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFSre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineStart" commandName="Line Start" description="Go to the start of the line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFS7e6EeOxntPoYxjofg" elementId="org.eclipse.help.ui.closeTray" commandName="Close User Assistance Tray" description="Close the user assistance tray containing context help information and cheat sheets." category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFTLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.working.set" commandName="Declaration in Working Set" description="Search for declarations of the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFTbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.properties" commandName="Properties" description="Display the properties of the selected item's project " category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFTre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.save" commandName="Save" description="Save the current contents" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFT7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleBlockSelectionMode" commandName="Toggle Block Selection" description="Toggle block / column selection in the current text editor" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFULe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.checkout" commandName="Checkout from CVS" description="Checkout from CVS" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFUbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleWatchpoint" commandName="Toggle Watchpoint" description="Creates or removes a watchpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFUre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureBranch" commandName="Configure Branch" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFU7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.compareWithRemote" commandName="Compare With Latest from Repository" description="Compare with Content on CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFVLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.type.hierarchy" commandName="Open Type Hierarchy" description="Open a type hierarchy on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFVbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.revisions.rendering.cycle" commandName="Cycle Revision Coloring Mode" description="Cycles through the available coloring modes for revisions" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFVre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showRulerContextMenu" commandName="Show Ruler Context Menu" description="Show the context menu for the ruler" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFV7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.PackagesView" commandName="JavaScript Folders" description="Show the Folders view" category="_eYGL6re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFWLe6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.commands.empty" commandName="Empty command" description="Command which does nothing" category="_eYGL77e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFWbe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleMethodBreakpoint" commandName="Toggle Method Breakpoint" description="Creates or removes a method breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFWre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.minimizePart" commandName="Minimize Active View or Editor" description="Minimizes the active view or editor" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFW7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.workspace" commandName="Write Access in Workspace" description="Search for write references to the selected element in the workspace" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAFXLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.part.nextPage" commandName="Next Page" description="Switch to the next page" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsULe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ReplaceWithRef" commandName="Replace with branch, tag, or reference" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsUbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delete.line.to.beginning" commandName="Delete to Beginning of Line" description="Delete to the beginning of a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsUre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.backwardHistory" commandName="Backward History" description="Move backward in the editor navigation history" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsU7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.swap.mark" commandName="Swap Mark" description="Swap the mark with the cursor position" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsVLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replaceWithRevision" commandName="Replace With Revision" description="Replace with Revision on CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsVbe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.compareWithRevision" commandName="Compare With Revision" description="Compare with Revision on CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsVre6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.antShortcut.run" commandName="Run Ant Build" description="Run Ant Build" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsV7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.surround.with.try.catch" commandName="Surround with try/catch Block" description="Surround the selected text with a try/catch block" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsWLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsWbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.lowerCase" commandName="To Lower Case" description="Changes the selection to lower case" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsWre6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowBundleCatalog" commandName="Show Bundle Catalog" category="_eYGy8be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYAsW7e6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.DirectoryParameter" name="Directory URL"/>
-    <parameters xmi:id="_eYAsXLe6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.TagsParameter" name="Tags"/>
+  <commands xmi:id="_JP1a5bfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Branch" commandName="Branch" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a5rfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.debug" commandName="Debug JUnit Test" description="Debug JUnit Test" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a57fJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.closeProject" commandName="Close Project" description="Close the selected project" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a6LfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.assignParamToField.assist" commandName="Quick Assist - Assign parameter to field" description="Invokes quick assist and selects 'Assign parameter to field'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a6bfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.commitAll" commandName="Commit All Outgoing Changes" description="Commit all outgoing changes to the repository" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a6rfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.cvsPerspective" commandName="CVS Repository Exploring" description="Open the CVS Repository Exploring Perspective" category="_JP7hhLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a67fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addImport" commandName="Quick Fix - Add import" description="Invokes quick assist and selects 'Add import'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a7LfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.FetchGerritChange" commandName="Fetch From Gerrit" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a7bfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.junit.junitShortcut.rerunLast" commandName="Rerun JUnit Test" description="Rerun JUnit Test" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a7rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.callhierarchy.view" commandName="JavaScript Call Hierarchy" description="Show the Call Hierarchy view" category="_JP7hibfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a77fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.java.open.structure" commandName="Open Structure" description="Show the structure of the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a8LfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.JavadocView" commandName="Documentation" description="Show the JavaScript Documentation view" category="_JP7hibfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a8bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.lineStart" commandName="Line Start" description="Go to the start of the line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a8rfJEeOxntPoYxjofg" elementId="org.eclipse.help.ui.closeTray" commandName="Close User Assistance Tray" description="Close the user assistance tray containing context help information and cheat sheets." category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a87fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.working.set" commandName="Declaration in Working Set" description="Search for declarations of the selected element in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a9LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.properties" commandName="Properties" description="Display the properties of the selected item's project " category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a9bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.save" commandName="Save" description="Save the current contents" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a9rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleBlockSelectionMode" commandName="Toggle Block Selection" description="Toggle block / column selection in the current text editor" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a97fJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.checkout" commandName="Checkout from CVS" description="Checkout from CVS" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a-LfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleWatchpoint" commandName="Toggle Watchpoint" description="Creates or removes a watchpoint" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a-bfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureBranch" commandName="Configure Branch" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a-rfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.compareWithRemote" commandName="Compare With Latest from Repository" description="Compare with Content on CVS Server" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a-7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.type.hierarchy" commandName="Open Type Hierarchy" description="Open a type hierarchy on the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP1a_LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.editors.revisions.rendering.cycle" commandName="Cycle Revision Coloring Mode" description="Cycles through the available coloring modes for revisions" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B8LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showRulerContextMenu" commandName="Show Ruler Context Menu" description="Show the context menu for the ruler" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B8bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.PackagesView" commandName="JavaScript Folders" description="Show the Folders view" category="_JP7hibfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B8rfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.commands.empty" commandName="Empty command" description="Command which does nothing" category="_JP7hjrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B87fJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.ToggleMethodBreakpoint" commandName="Toggle Method Breakpoint" description="Creates or removes a method breakpoint" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B9LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.minimizePart" commandName="Minimize Active View or Editor" description="Minimizes the active view or editor" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B9bfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.write.access.in.workspace" commandName="Write Access in Workspace" description="Search for write references to the selected element in the workspace" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B9rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.part.nextPage" commandName="Next Page" description="Switch to the next page" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B97fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.ReplaceWithRef" commandName="Replace with branch, tag, or reference" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B-LfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delete.line.to.beginning" commandName="Delete to Beginning of Line" description="Delete to the beginning of a line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B-bfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.backwardHistory" commandName="Backward History" description="Move backward in the editor navigation history" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B-rfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.swap.mark" commandName="Swap Mark" description="Swap the mark with the cursor position" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B-7fJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.replaceWithRevision" commandName="Replace With Revision" description="Replace with Revision on CVS Server" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B_LfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.compareWithRevision" commandName="Compare With Revision" description="Compare with Revision on CVS Server" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B_bfJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.antShortcut.run" commandName="Run Ant Build" description="Run Ant Build" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B_rfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.surround.with.try.catch" commandName="Surround with try/catch Block" description="Surround the selected text with a try/catch block" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2B_7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.enclosing" commandName="Select Enclosing Element" description="Expand selection to include enclosing element" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2CALfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.lowerCase" commandName="To Lower Case" description="Changes the selection to lower case" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2CAbfJEeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowBundleCatalog" commandName="Show Bundle Catalog" category="_JP8IlLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP2CArfJEeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.DirectoryParameter" name="Directory URL"/>
+    <parameters xmi:id="_JP2CA7fJEeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.TagsParameter" name="Tags"/>
   </commands>
-  <commands xmi:id="_eYAsXbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.MergeTool" commandName="Merge Tool" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsXre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.openLocalFile" commandName="Open File..." description="Open a file" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsX7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowSelectedElementOnly" commandName="Show Selected Element Only" description="Show Selected Element Only" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsYLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.Reset" commandName="Reset" category="_eYGy8be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYAsYbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ResetMode" name="Reset mode" optional="false"/>
+  <commands xmi:id="_JP2CBLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.MergeTool" commandName="Merge Tool" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2CBbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.openLocalFile" commandName="Open File..." description="Open a file" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2CBrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.toggleShowSelectedElementOnly" commandName="Show Selected Element Only" description="Show Selected Element Only" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2CB7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.Reset" commandName="Reset" category="_JP8IlLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP2CCLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ResetMode" name="Reset mode" optional="false"/>
   </commands>
-  <commands xmi:id="_eYAsYre6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.addAllPluginsToJavaSearch" commandName="Add All Plug-ins to Java Search" description="Adds all plug-ins in the target platform to java search" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsY7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.unimplemented.constructors" commandName="Generate Constructors from Superclass" description="Evaluate and add constructors from superclass" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsZLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.branch" commandName="Branch" description="Branch" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsZbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AddExceptionBreakpoint" commandName="Add Java Exception Breakpoint" description="Add a Java exception breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsZre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareVersionsInTree" commandName="Compare in Tree" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsZ7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.openProject" commandName="Open Project" description="Open a project" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYAsaLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.cut" commandName="Cut" description="Cut the selection to the clipboard" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTYLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.moveLineDown" commandName="Move Lines Down" description="Moves the selected lines down" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTYbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.StepIntoSelection" commandName="Step Into Selection" description="Step into the current selected statement" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTYre6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactoring.commands.moveResources" commandName="Move Resources" description="Move the selected resources and notify LTK participants." category="_eYGy9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTY7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.constructor.using.fields" commandName="Generate Constructor using Fields" description="Choose fields to initialize and constructor from superclass to call " category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTZLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.commands.showElementInPackageView" commandName="Show JavaScript Element in Script Explorer" description="Select JavaScript element in the Script Explorer view" category="_eYGy9re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYBTZbe6EeOxntPoYxjofg" elementId="elementRef" name="JavaScript element reference" typeId="org.eclipse.wst.jsdt.ui.commands.javaElementReference" optional="false"/>
+  <commands xmi:id="_JP2CCbfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.addAllPluginsToJavaSearch" commandName="Add All Plug-ins to Java Search" description="Adds all plug-ins in the target platform to java search" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2CCrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.add.unimplemented.constructors" commandName="Generate Constructors from Superclass" description="Evaluate and add constructors from superclass" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2CC7fJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.branch" commandName="Branch" description="Branch" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2CDLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AddExceptionBreakpoint" commandName="Add Java Exception Breakpoint" description="Add a Java exception breakpoint" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pALfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareVersionsInTree" commandName="Compare in Tree" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pAbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.openProject" commandName="Open Project" description="Open a project" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pArfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.cut" commandName="Cut" description="Cut the selection to the clipboard" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pA7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.moveLineDown" commandName="Move Lines Down" description="Moves the selected lines down" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pBLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.StepIntoSelection" commandName="Step Into Selection" description="Step into the current selected statement" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pBbfJEeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactoring.commands.moveResources" commandName="Move Resources" description="Move the selected resources and notify LTK participants." category="_JP8ImLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pBrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.constructor.using.fields" commandName="Generate Constructor using Fields" description="Choose fields to initialize and constructor from superclass to call " category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pB7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.commands.showElementInPackageView" commandName="Show JavaScript Element in Script Explorer" description="Select JavaScript element in the Script Explorer view" category="_JP8ImbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP2pCLfJEeOxntPoYxjofg" elementId="elementRef" name="JavaScript element reference" typeId="org.eclipse.wst.jsdt.ui.commands.javaElementReference" optional="false"/>
   </commands>
-  <commands xmi:id="_eYBTZre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.line" commandName="Go to Line" description="Go to a specified line of text" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTZ7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRemoveRemote" commandName="Delete Remote" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTaLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.stash.create" commandName="Stash Changes" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTabe6EeOxntPoYxjofg" elementId="org.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar" commandName="Run Last Launched External Tool" description="Runs the last launched external Tool" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTare6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.columnPrevious" commandName="Previous Column" description="Go to the previous column" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTa7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.common.project.facet.ui.ConvertProjectToFacetedForm" commandName="Convert to Faceted Form..." category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTbLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Commit" commandName="Commit..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTbbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.remove.block.comment" commandName="Remove Block Comment" description="Remove Block Comment" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTbre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CheckoutCommand" commandName="Checkout" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTb7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineStart" commandName="Select Line Start" description="Select to the beginning of the line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTcLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.cut.line.to.end" commandName="Cut to End of Line" description="Cut to the end of a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTcbe6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.sdk.update" commandName="Check for Updates" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTcre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findIncrementalReverse" commandName="Incremental Find Reverse" description="Incremental find reverse" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTc7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.commands.openElementInEditor" commandName="Open JavaScript Element" description="Open a JavaScript element in its editor" category="_eYGy9re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYBTdLe6EeOxntPoYxjofg" elementId="elementRef" name="JavaScript element reference" typeId="org.eclipse.wst.jsdt.ui.commands.javaElementReference" optional="false"/>
+  <commands xmi:id="_JP2pCbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.line" commandName="Go to Line" description="Go to a specified line of text" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pCrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewRemoveRemote" commandName="Delete Remote" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pC7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.stash.create" commandName="Stash Changes" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pDLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.externaltools.ExternalToolMenuDelegateToolbar" commandName="Run Last Launched External Tool" description="Runs the last launched external Tool" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pDbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.columnPrevious" commandName="Previous Column" description="Go to the previous column" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pDrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.common.project.facet.ui.ConvertProjectToFacetedForm" commandName="Convert to Faceted Form..." category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pD7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.Commit" commandName="Commit..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pELfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.remove.block.comment" commandName="Remove Block Comment" description="Remove Block Comment" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pEbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CheckoutCommand" commandName="Checkout" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pErfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.lineStart" commandName="Select Line Start" description="Select to the beginning of the line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pE7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.cut.line.to.end" commandName="Cut to End of Line" description="Cut to the end of a line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pFLfJEeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.sdk.update" commandName="Check for Updates" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pFbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findIncrementalReverse" commandName="Incremental Find Reverse" description="Incremental find reverse" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pFrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.commands.openElementInEditor" commandName="Open JavaScript Element" description="Open a JavaScript element in its editor" category="_JP8ImbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP2pF7fJEeOxntPoYxjofg" elementId="elementRef" name="JavaScript element reference" typeId="org.eclipse.wst.jsdt.ui.commands.javaElementReference" optional="false"/>
   </commands>
-  <commands xmi:id="_eYBTdbe6EeOxntPoYxjofg" elementId="com.google.appengine.wtp.actions.pulldownMenu" commandName="Google App Engine WTP" description="Google App Engine WTP" category="_eYGL8re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTdre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.generate.hashcode.equals" commandName="Generate hashCode() and equals()" description="Generates hashCode() and equals() functions for the type" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTd7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.generate.javadoc" commandName="Generate Javadoc" description="Generates Javadoc for a selectable set of Java resources" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTeLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.working.set" commandName="Declaration in Working Set" description="Search for declarations of the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTebe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.launchShortcut.run" commandName="Run on Server" description="Run the current selection on a server" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTere6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RebaseCurrent" commandName="Rebase" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYBTe7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.OpenLocalAdminConsoleCommand" commandName="Open Local Development Console" description="Open Local Development Console" category="_eYGL8re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6cLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.ignore" commandName="Add to .cvsignore" description="Ignore the Selected Resources when Synchronizing" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6cbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.dialogs.openInputDialog" commandName="Open Input Dialog" description="Open an Input Dialog" category="_eYGL97e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYB6cre6EeOxntPoYxjofg" elementId="title" name="Title"/>
-    <parameters xmi:id="_eYB6c7e6EeOxntPoYxjofg" elementId="message" name="Message"/>
-    <parameters xmi:id="_eYB6dLe6EeOxntPoYxjofg" elementId="initialValue" name="Initial Value"/>
-    <parameters xmi:id="_eYB6dbe6EeOxntPoYxjofg" elementId="cancelReturns" name="Return Value on Cancel"/>
+  <commands xmi:id="_JP2pGLfJEeOxntPoYxjofg" elementId="com.google.appengine.wtp.actions.pulldownMenu" commandName="Google App Engine WTP" description="Google App Engine WTP" category="_JP7hkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pGbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.generate.hashcode.equals" commandName="Generate hashCode() and equals()" description="Generates hashCode() and equals() functions for the type" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pGrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.generate.javadoc" commandName="Generate Javadoc" description="Generates Javadoc for a selectable set of Java resources" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP2pG7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.declarations.in.working.set" commandName="Declaration in Working Set" description="Search for declarations of the selected element in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QELfJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.launchShortcut.run" commandName="Run on Server" description="Run the current selection on a server" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QEbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RebaseCurrent" commandName="Rebase" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QErfJEeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.OpenLocalAdminConsoleCommand" commandName="Open Local Development Console" description="Open Local Development Console" category="_JP7hkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QE7fJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.ignore" commandName="Add to .cvsignore" description="Ignore the Selected Resources when Synchronizing" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QFLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.dialogs.openInputDialog" commandName="Open Input Dialog" description="Open an Input Dialog" category="_JP8IkLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP3QFbfJEeOxntPoYxjofg" elementId="title" name="Title"/>
+    <parameters xmi:id="_JP3QFrfJEeOxntPoYxjofg" elementId="message" name="Message"/>
+    <parameters xmi:id="_JP3QF7fJEeOxntPoYxjofg" elementId="initialValue" name="Initial Value"/>
+    <parameters xmi:id="_JP3QGLfJEeOxntPoYxjofg" elementId="cancelReturns" name="Return Value on Cancel"/>
   </commands>
-  <commands xmi:id="_eYB6dre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ShowVersions" commandName="Open" category="_eYGy8be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYB6d7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareMode" name="Compare mode"/>
+  <commands xmi:id="_JP3QGbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.ShowVersions" commandName="Open" category="_JP8IlLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP3QGrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.history.CompareMode" name="Compare mode"/>
   </commands>
-  <commands xmi:id="_eYB6eLe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.antShortcut.debug" commandName="Debug Ant Build" description="Debug Ant Build" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6ebe6EeOxntPoYxjofg" elementId="org.eclipse.ui.views.properties.NewPropertySheetCommand" commandName="Properties" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6ere6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.return.continue.targets" commandName="Search break/continue Target Occurrences in File" description="Search for break/continue target occurrences of a selected target name" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6e7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.workspace" commandName="Implementors in Workspace" description="Search for implementors of the selected interface" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6fLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.gotopackage" commandName="Go to Folder" description="Go to Folder" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6fbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.move.inner.to.top.level" commandName="Move Type to New File" description="Move Type to New File" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6fre6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.quick_outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6f7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.Revert" commandName="Revert Commit" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6gLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.publish" commandName="Publish" description="Publish to server" category="_eYGL9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6gbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateRepository" commandName="Create a Repository" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6gre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.gotoBreadcrumb" commandName="Show In Breadcrumb" description="Shows the Java editor breadcrumb and sets the keyboard focus into it" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6g7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.introduce.factory" commandName="Introduce Factory" description="Introduce a factory function to encapsulate invocation of the selected constructor" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6hLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.scroll.lineDown" commandName="Scroll Line Down" description="Scroll down one line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6hbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.SimpleFetch" commandName="Fetch from Upstream" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6hre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.StepInto" commandName="Step Into" description="Step into" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6h7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.Checkout" commandName="Checkout" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6iLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.scroll.lineUp" commandName="Scroll Line Up" description="Scroll up one line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6ibe6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.TerminateAndRelaunch" commandName="Terminate and Relaunch" description="Terminate and Relaunch" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYB6ire6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.print" commandName="Print" description="Print" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChgLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.breakpoint.properties" commandName="Java Breakpoint Properties" description="View and edit the properties for a given Java breakpoint" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChgbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.pageUp" commandName="Select Page Up" description="Select to the top of the page" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChgre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.import" commandName="Add Import" description="Create import statement on selection" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChg7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithPrevious" commandName="Compare with Previous Revision" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChhLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.interface" commandName="Extract Interface" description="Extract a set of members into a new interface and try to use the new interface" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChhbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.dynamicHelp" commandName="Dynamic Help" description="Open the dynamic help" category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChhre6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.run" commandName="Run" description="Run server" category="_eYGL9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChh7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.working.set" commandName="Read Access in Working Set" description="Search for read references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChiLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.promote.local.variable" commandName="Convert Local Variable to Var" description="Convert a local variable to a var" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChibe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.push.down" commandName="Push Down" description="Move members to subclasses" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChire6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.splitJoinVariableDeclaration.assist" commandName="Quick Assist - Split/Join variable declaration" description="Invokes quick assist and selects 'Split/Join variable declaration'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChi7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.run" commandName="Run Java Application" description="Run Java Application" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChjLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchHierarchy" commandName="Toggle Branch Representation" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChjbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showRulerAnnotationInformation" commandName="Show Ruler Annotation Tooltip" description="Displays annotation information for the caret line in a focused hover" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChjre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.format" commandName="Format" description="Format the selected text" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChj7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChkLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.junitWorkbenchShortcut.run" commandName="Run JUnit Plug-in Test" description="Run JUnit Plug-in Test" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChkbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChkre6EeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildLast" commandName="Repeat Working Set Build" description="Repeat the last working set build" category="_eYGL6Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChk7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.textStart" commandName="Text Start" description="Go to the beginning of the text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChlLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addNonNLS" commandName="Quick Fix - Add non-NLS tag" description="Invokes quick assist and selects 'Add non-NLS tag'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChlbe6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.openSearchDialog" commandName="Open Search Dialog" description="Open the Search dialog" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChlre6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.openWorkspace" commandName="Switch Workspace" description="Open the workspace selection dialog" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChl7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.launchShortcut.debug" commandName="Debug on Server" description="Debug the current selection on a server" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChmLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.pull.up" commandName="Pull Up" description="Move members to a superclass" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChmbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.configureFilters" commandName="Configure Contents..." description="Configure the filters to apply to the markers view" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChmre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.uncomment" commandName="Uncomment" description="Uncomment the selected JavaScript comment lines" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYChm7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.toggle.comment" commandName="Toggle Comment" description="Toggle comment the selected lines" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIkLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.find.broken.nls.keys" commandName="Find Broken Externalized Strings" description="Finds undefined, duplicate and unused externalized string keys in property files" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIkbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.cleanup.document" commandName="Cleanup Document..." description="Cleanup document" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIkre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.uncomment" commandName="Uncomment" description="Uncomment the selected Java comment lines" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIk7e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.commands.switch" commandName="Switch Source/Design Views" description="Switch between the Source and Design views." category="_eYGL77e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIlLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.wordNext" commandName="Next Word" description="Go to the next word" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIlbe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.addLocation" commandName="Add Repository Location" description="Add a new CVS repository location" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIlre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.up" commandName="Up" description="Navigate up one level" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIl7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.splitJoinVariableDeclaration.assist" commandName="Quick Assist - Split/Join variable declaration" description="Invokes quick assist and selects 'Split/Join variable declaration'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDImLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.goto.next.member" commandName="Go to Next Member" description="Move the caret to the next member of the JavaScript file" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDImbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.closePerspective" commandName="Close Perspective" description="Close the current perspective" category="_eYGL57e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYDImre6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.closePerspective.perspectiveId" name="Perspective Id"/>
+  <commands xmi:id="_JP3QG7fJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.antShortcut.debug" commandName="Debug Ant Build" description="Debug Ant Build" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QHLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.views.properties.NewPropertySheetCommand" commandName="Properties" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QHbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.return.continue.targets" commandName="Search break/continue Target Occurrences in File" description="Search for break/continue target occurrences of a selected target name" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QHrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.implementors.in.workspace" commandName="Implementors in Workspace" description="Search for implementors of the selected interface" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QH7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.navigate.gotopackage" commandName="Go to Folder" description="Go to Folder" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QILfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.move.inner.to.top.level" commandName="Move Type to New File" description="Move Type to New File" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QIbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.quick_outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QIrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.Revert" commandName="Revert Commit" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QI7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.publish" commandName="Publish" description="Publish to server" category="_JP7hlbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QJLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewCreateRepository" commandName="Create a Repository" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QJbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.gotoBreadcrumb" commandName="Show In Breadcrumb" description="Shows the Java editor breadcrumb and sets the keyboard focus into it" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QJrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.introduce.factory" commandName="Introduce Factory" description="Introduce a factory function to encapsulate invocation of the selected constructor" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QJ7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.scroll.lineDown" commandName="Scroll Line Down" description="Scroll down one line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QKLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.SimpleFetch" commandName="Fetch from Upstream" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QKbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.StepInto" commandName="Step Into" description="Step into" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QKrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.Checkout" commandName="Checkout" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP3QK7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.scroll.lineUp" commandName="Scroll Line Up" description="Scroll up one line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33ILfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.TerminateAndRelaunch" commandName="Terminate and Relaunch" description="Terminate and Relaunch" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33IbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.print" commandName="Print" description="Print" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33IrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.breakpoint.properties" commandName="Java Breakpoint Properties" description="View and edit the properties for a given Java breakpoint" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33I7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.pageUp" commandName="Select Page Up" description="Select to the top of the page" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33JLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.import" commandName="Add Import" description="Create import statement on selection" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33JbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithPrevious" commandName="Compare with Previous Revision" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33JrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.interface" commandName="Extract Interface" description="Extract a set of members into a new interface and try to use the new interface" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33J7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.help.dynamicHelp" commandName="Dynamic Help" description="Open the dynamic help" category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33KLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.run" commandName="Run" description="Run server" category="_JP7hlbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33KbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.search.read.access.in.working.set" commandName="Read Access in Working Set" description="Search for read references to the selected element in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33KrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.promote.local.variable" commandName="Convert Local Variable to Var" description="Convert a local variable to a var" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33K7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.push.down" commandName="Push Down" description="Move members to subclasses" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33LLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.splitJoinVariableDeclaration.assist" commandName="Quick Assist - Split/Join variable declaration" description="Invokes quick assist and selects 'Split/Join variable declaration'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33LbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.run" commandName="Run Java Application" description="Run Java Application" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33LrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesToggleBranchHierarchy" commandName="Toggle Branch Representation" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33L7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.showRulerAnnotationInformation" commandName="Show Ruler Annotation Tooltip" description="Displays annotation information for the caret line in a focused hover" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33MLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.format" commandName="Format" description="Format the selected text" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33MbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.structure.select.next" commandName="Select Next Element" description="Expand selection to include next sibling" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33MrfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.junitWorkbenchShortcut.run" commandName="Run JUnit Plug-in Test" description="Run JUnit Plug-in Test" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33M7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.select.last" commandName="Restore Last Selection" description="Restore last selection" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33NLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.project.buildLast" commandName="Repeat Working Set Build" description="Repeat the last working set build" category="_JP7hh7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33NbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.textStart" commandName="Text Start" description="Go to the beginning of the text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33NrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addNonNLS" commandName="Quick Fix - Add non-NLS tag" description="Invokes quick assist and selects 'Add non-NLS tag'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33N7fJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.openSearchDialog" commandName="Open Search Dialog" description="Open the Search dialog" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33OLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.openWorkspace" commandName="Switch Workspace" description="Open the workspace selection dialog" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33ObfJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.launchShortcut.debug" commandName="Debug on Server" description="Debug the current selection on a server" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33OrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.pull.up" commandName="Pull Up" description="Move members to a superclass" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP33O7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.ide.configureFilters" commandName="Configure Contents..." description="Configure the filters to apply to the markers view" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eMLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.uncomment" commandName="Uncomment" description="Uncomment the selected JavaScript comment lines" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eMbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.toggle.comment" commandName="Toggle Comment" description="Toggle comment the selected lines" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eMrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.find.broken.nls.keys" commandName="Find Broken Externalized Strings" description="Finds undefined, duplicate and unused externalized string keys in property files" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eM7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.sse.ui.cleanup.document" commandName="Cleanup Document..." description="Cleanup document" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eNLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.uncomment" commandName="Uncomment" description="Uncomment the selected Java comment lines" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eNbfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.commands.switch" commandName="Switch Source/Design Views" description="Switch between the Source and Design views." category="_JP7hjrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eNrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.wordNext" commandName="Next Word" description="Go to the next word" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eN7fJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.addLocation" commandName="Add Repository Location" description="Add a new CVS repository location" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eOLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.up" commandName="Up" description="Navigate up one level" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eObfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.splitJoinVariableDeclaration.assist" commandName="Quick Assist - Split/Join variable declaration" description="Invokes quick assist and selects 'Split/Join variable declaration'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eOrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.goto.next.member" commandName="Go to Next Member" description="Move the caret to the next member of the JavaScript file" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eO7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.closePerspective" commandName="Close Perspective" description="Close the current perspective" category="_JP7hhrfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP4ePLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.closePerspective.perspectiveId" name="Perspective Id"/>
   </commands>
-  <commands xmi:id="_eYDIm7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.hideShowEditors" commandName="Toggle Editor Area Visibility" description="Toggles the visibility of the editor area" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDInLe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.organizeManifest" commandName="Organize Manifests" description="Cleans up plug-in manifest files" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDInbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.modify.method.parameters" commandName="Change Function Signature" description="Change function signature includes parameter names and parameter order" category="_eYGL9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDInre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.move" commandName="Move..." description="Move the selected item" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIn7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.updateAll" commandName="Update All Incoming Changes" description="Update all incoming changes with new content from the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIoLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.renameInFile.assist" commandName="Quick Assist - Rename in file" description="Invokes quick assist and selects 'Rename in file'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIobe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.tostring" commandName="Generate toString()" description="Generates the toString() method for the type" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIore6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.OpenProfileConfigurations" commandName="Profile..." description="Open profile launch configuration dialog" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIo7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.external.javadoc" commandName="Open Attached Javadoc" description="Open the attached Javadoc of the selected element in a browser" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIpLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.assignParamToField.assist" commandName="Quick Assist - Assign parameter to var" description="Invokes quick assist and selects 'Assign parameter to var'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIpbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.project" commandName="Declaration in Project" description="Search for declarations of the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIpre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.hashcode.equals" commandName="Generate hashCode() and equals()" description="Generates hashCode() and equals() methods for the type" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDIp7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.browser.openBrowser" commandName="Open Browser" description="Opens the default web browser." category="_eYGL57e6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYDIqLe6EeOxntPoYxjofg" elementId="url" name="URL"/>
-    <parameters xmi:id="_eYDIqbe6EeOxntPoYxjofg" elementId="browserId" name="Browser Id"/>
-    <parameters xmi:id="_eYDIqre6EeOxntPoYxjofg" elementId="name" name="Browser Name"/>
-    <parameters xmi:id="_eYDvoLe6EeOxntPoYxjofg" elementId="tooltip" name="Browser Tooltip"/>
+  <commands xmi:id="_JP4ePbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.hideShowEditors" commandName="Toggle Editor Area Visibility" description="Toggles the visibility of the editor area" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4ePrfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.organizeManifest" commandName="Organize Manifests" description="Cleans up plug-in manifest files" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eP7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.modify.method.parameters" commandName="Change Function Signature" description="Change function signature includes parameter names and parameter order" category="_JP7hk7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eQLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.move" commandName="Move..." description="Move the selected item" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eQbfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.updateAll" commandName="Update All Incoming Changes" description="Update all incoming changes with new content from the repository" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eQrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.renameInFile.assist" commandName="Quick Assist - Rename in file" description="Invokes quick assist and selects 'Rename in file'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eQ7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.tostring" commandName="Generate toString()" description="Generates the toString() method for the type" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eRLfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.OpenProfileConfigurations" commandName="Profile..." description="Open profile launch configuration dialog" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eRbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.open.external.javadoc" commandName="Open Attached Javadoc" description="Open the attached Javadoc of the selected element in a browser" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eRrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.assignParamToField.assist" commandName="Quick Assist - Assign parameter to var" description="Invokes quick assist and selects 'Assign parameter to var'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eR7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.declarations.in.project" commandName="Declaration in Project" description="Search for declarations of the selected element in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eSLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.generate.hashcode.equals" commandName="Generate hashCode() and equals()" description="Generates hashCode() and equals() methods for the type" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP4eSbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.browser.openBrowser" commandName="Open Browser" description="Opens the default web browser." category="_JP7hhrfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP5FQLfJEeOxntPoYxjofg" elementId="url" name="URL"/>
+    <parameters xmi:id="_JP5FQbfJEeOxntPoYxjofg" elementId="browserId" name="Browser Id"/>
+    <parameters xmi:id="_JP5FQrfJEeOxntPoYxjofg" elementId="name" name="Browser Name"/>
+    <parameters xmi:id="_JP5FQ7fJEeOxntPoYxjofg" elementId="tooltip" name="Browser Tooltip"/>
   </commands>
-  <commands xmi:id="_eYDvobe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.gototype" commandName="Go to Type" description="Go to Type" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvore6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.columnNext" commandName="Select Next Column" description="Select the next column" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvo7e6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.merge" commandName="Merge" description="Merge" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvpLe6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.convertJavaQueries" commandName="Move Java Queries to XML..." category="_eYGL87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvpbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" commandName="Debug Java Application" description="Debug Java Application" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvpre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.local.variable" commandName="Extract Local Variable" description="Extracts an expression into a new local variable and uses the new local variable" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvp7e6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.synchronizeLast" commandName="Repeat last synchronization" description="Repeat the last synchronization" category="_eYGy8re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvqLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.previousSibling" commandName="Previous Sibling" description="Go to Previous Sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvqbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvqre6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.ParametrizedRemoteOperationCommand" commandName="ParametrizedRemoteOperationCommand" category="_eYGL8re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYDvq7e6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.params.jobClass" name="jobClass" optional="false"/>
+  <commands xmi:id="_JP5FRLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.navigate.gototype" commandName="Go to Type" description="Go to Type" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FRbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.columnNext" commandName="Select Next Column" description="Select the next column" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FRrfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.merge" commandName="Merge" description="Merge" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FR7fJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.convertJavaQueries" commandName="Move Java Queries to XML..." category="_JP7hkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FSLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" commandName="Debug Java Application" description="Debug Java Application" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FSbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.local.variable" commandName="Extract Local Variable" description="Extracts an expression into a new local variable and uses the new local variable" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FSrfJEeOxntPoYxjofg" elementId="org.eclipse.team.ui.synchronizeLast" commandName="Repeat last synchronization" description="Repeat the last synchronization" category="_JP8IlbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FS7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.xml.ui.previousSibling" commandName="Previous Sibling" description="Go to Previous Sibling" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FTLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.select.previous" commandName="Select Previous Element" description="Expand selection to include previous sibling" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FTbfJEeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.ParametrizedRemoteOperationCommand" commandName="ParametrizedRemoteOperationCommand" category="_JP7hkbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP5FTrfJEeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.params.jobClass" name="jobClass" optional="false"/>
   </commands>
-  <commands xmi:id="_eYDvrLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.columnNext" commandName="Next Column" description="Go to the next column" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvrbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.aboutAction" commandName="About" description="Open the about dialog" category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvrre6EeOxntPoYxjofg" elementId="org.eclipse.compare.copyRightToLeft" commandName="Copy from Right to Left" description="Copy Current Change from Right to Left" category="_eYGy9Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvr7e6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.quickOutline" commandName="Quick Outline" description="Open a quick outline popup dialog for a given editor input" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvsLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.method" commandName="Extract Method" description="Extract a set of statements or an expression into a new method and use the new method" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvsbe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.clean.up" commandName="Clean Up" description="Solve problems and improve code style on selected resources" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvsre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithRevision" commandName="Compare with History" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvs7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.project" commandName="References in Project" description="Search for references to the selected element in the enclosing project" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvtLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.hierarchy" commandName="Quick Hierarchy" description="Show the quick hierarchy of the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvtbe6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.GenerateSwarmApiClassCommand" commandName="Generate Cloud Endpoint Class" description="Generate Cloud Endpoint Class" category="_eYGL8re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvtre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addThrowsDecl" commandName="Quick Fix - Add throws declaration" description="Invokes quick assist and selects 'Add throws declaration'" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvt7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.activeContextInfo" commandName="Show activeContext Info" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvuLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.override.methods" commandName="Override/Implement Functions" description="Override or implement functions from super types" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvube6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.compareWithTag" commandName="Compare With Another Branch or Version" description="Compare with a Branch or a Version on the CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYDvure6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.generate.constructor.using.fields" commandName="Generate Constructor using Vars" description="Choose vars to initialize and constructor from superclass to call " category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWsLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findNext" commandName="Find Next" description="Find next item" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWsbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addSuppressWarnings" commandName="Quick Fix - Add @SuppressWarnings" description="Invokes quick fix and selects 'Add @SuppressWarnings' " category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWsre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Disconnect" commandName="Disconnect" description="Disconnect" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWs7e6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.CreateTag" commandName="Create Tag..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWtLe6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.extractLocal.assist" commandName="Quick Assist - Extract local variable" description="Invokes quick assist and selects 'Extract local variable'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWtbe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.junitWorkbenchShortcut.debug" commandName="Debug JUnit Plug-in Test" description="Debug JUnit Plug-in Test" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWtre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addSuppressWarnings" commandName="Quick Fix - Add @SuppressWarnings" description="Invokes quick fix and selects 'Add @SuppressWarnings' " category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWt7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.show.outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWuLe6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.setKeywordSubstitution" commandName="Change ASCII/Binary Property" description="Change whether the selected resources should be treated as ASCII or binary on the CVS Server" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWube6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.internal.reflog.CheckoutCommand" commandName="Checkout" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWure6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.working.set" commandName="References in Working Set" description="Search for references to the selected element in a working set" category="_eYGL-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWu7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.help.quickStartAction" commandName="Welcome" description="Show help for beginning users" category="_eYGy87e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWvLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.addTask" commandName="Add Task..." description="Add a task" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWvbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.editors.quickdiff.revertLine" commandName="Revert Line" description="Revert the current line" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWvre6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.command.prevpage" commandName="Previous Page of Memory" description="Load previous page of memory" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWv7e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.push.down" commandName="Push Down" description="Move members to subclasses" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWwLe6EeOxntPoYxjofg" elementId="org.eclipse.ant.ui.toggleMarkOccurrences" commandName="Toggle Ant Mark Occurrences" description="Toggles mark occurrences in Ant editors" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWwbe6EeOxntPoYxjofg" elementId="com.google.gdt.eclipse.gph.importGoogleHostedProject" commandName="Import Google Hosted Project" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWwre6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.SourceView" commandName="JavaScript Declaration" description="Show the Declaration view" category="_eYGL6re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWw7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.qualifyField" commandName="Quick Fix - Qualify var access" description="Invokes quick assist and selects 'Qualify var access'" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWxLe6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactor.create.refactoring.script" commandName="Create Script" description="Create a refactoring script from refactorings on the local workspace" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWxbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delimiter.windows" commandName="Convert Line Delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" description="Converts the line delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWxre6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.cut.line" commandName="Cut Line" description="Cut a line of text" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWx7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.columnPrevious" commandName="Select Previous Column" description="Select the previous column" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWyLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.file.closeAll" commandName="Close All" description="Close all editors" category="_eYGL67e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYEWybe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.promote.local.variable" commandName="Convert Local Variable to Field" description="Convert a local variable to a field" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9wLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.wordNext" commandName="Select Next Word" description="Select the next word" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9wbe6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.spy" commandName="Show Contributing Plug-in" description="Shows contribution information for the currently selected element" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9wre6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.submodule.sync" commandName="Sync Submodule" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9w7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.quickAccess" commandName="Quick Access" description="Quickly access UI elements" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9xLe6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.addToWorkingSet" commandName="Add to Working Set" description="Adds the selected object to a working set." category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9xbe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.next.member" commandName="Go to Next Member" description="Move the caret to the next member of the compilation unit" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9xre6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentTypeMapAs" commandName="Map As" category="_eYGL8Le6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYE9x7e6EeOxntPoYxjofg" elementId="persistentTypeMappingKey" name="mapping key" optional="false"/>
+  <commands xmi:id="_JP5FT7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.goto.columnNext" commandName="Next Column" description="Go to the next column" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FULfJEeOxntPoYxjofg" elementId="org.eclipse.ui.help.aboutAction" commandName="About" description="Open the about dialog" category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FUbfJEeOxntPoYxjofg" elementId="org.eclipse.compare.copyRightToLeft" commandName="Copy from Right to Left" description="Copy Current Change from Right to Left" category="_JP8Il7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FUrfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.quickOutline" commandName="Quick Outline" description="Open a quick outline popup dialog for a given editor input" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FU7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.method" commandName="Extract Method" description="Extract a set of statements or an expression into a new method and use the new method" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FVLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.clean.up" commandName="Clean Up" description="Solve problems and improve code style on selected resources" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FVbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CompareWithRevision" commandName="Compare with History" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FVrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.project" commandName="References in Project" description="Search for references to the selected element in the enclosing project" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FV7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.hierarchy" commandName="Quick Hierarchy" description="Show the quick hierarchy of the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FWLfJEeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.GenerateSwarmApiClassCommand" commandName="Generate Cloud Endpoint Class" description="Generate Cloud Endpoint Class" category="_JP7hkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FWbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addThrowsDecl" commandName="Quick Fix - Add throws declaration" description="Invokes quick assist and selects 'Add throws declaration'" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5FWrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.activeContextInfo" commandName="Show activeContext Info" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sULfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.override.methods" commandName="Override/Implement Functions" description="Override or implement functions from super types" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sUbfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.compareWithTag" commandName="Compare With Another Branch or Version" description="Compare with a Branch or a Version on the CVS Server" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sUrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.generate.constructor.using.fields" commandName="Generate Constructor using Vars" description="Choose vars to initialize and constructor from superclass to call " category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sU7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.findNext" commandName="Find Next" description="Find next item" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sVLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.correction.addSuppressWarnings" commandName="Quick Fix - Add @SuppressWarnings" description="Invokes quick fix and selects 'Add @SuppressWarnings' " category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sVbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Disconnect" commandName="Disconnect" description="Disconnect" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sVrfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commit.CreateTag" commandName="Create Tag..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sV7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.extractLocal.assist" commandName="Quick Assist - Extract local variable" description="Invokes quick assist and selects 'Extract local variable'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sWLfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.junitWorkbenchShortcut.debug" commandName="Debug JUnit Plug-in Test" description="Debug JUnit Plug-in Test" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sWbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.addSuppressWarnings" commandName="Quick Fix - Add @SuppressWarnings" description="Invokes quick fix and selects 'Add @SuppressWarnings' " category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sWrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.show.outline" commandName="Quick Outline" description="Show the quick outline for the editor input" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sW7fJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.setKeywordSubstitution" commandName="Change ASCII/Binary Property" description="Change whether the selected resources should be treated as ASCII or binary on the CVS Server" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sXLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.internal.reflog.CheckoutCommand" commandName="Checkout" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sXbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.search.references.in.working.set" commandName="References in Working Set" description="Search for references to the selected element in a working set" category="_JP8IkbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sXrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.help.quickStartAction" commandName="Welcome" description="Show help for beginning users" category="_JP8IlrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sX7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.addTask" commandName="Add Task..." description="Add a task" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sYLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.editors.quickdiff.revertLine" commandName="Revert Line" description="Revert the current line" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sYbfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.command.prevpage" commandName="Previous Page of Memory" description="Load previous page of memory" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sYrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.push.down" commandName="Push Down" description="Move members to subclasses" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sY7fJEeOxntPoYxjofg" elementId="org.eclipse.ant.ui.toggleMarkOccurrences" commandName="Toggle Ant Mark Occurrences" description="Toggles mark occurrences in Ant editors" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sZLfJEeOxntPoYxjofg" elementId="com.google.gdt.eclipse.gph.importGoogleHostedProject" commandName="Import Google Hosted Project" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sZbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.SourceView" commandName="JavaScript Declaration" description="Show the Declaration view" category="_JP7hibfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sZrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.correction.qualifyField" commandName="Quick Fix - Qualify var access" description="Invokes quick assist and selects 'Qualify var access'" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sZ7fJEeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.refactor.create.refactoring.script" commandName="Create Script" description="Create a refactoring script from refactorings on the local workspace" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5saLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.delimiter.windows" commandName="Convert Line Delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" description="Converts the line delimiters to Windows (CRLF, \r\n, 0D0A, &#xa4;&#xb6;)" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP5sabfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.cut.line" commandName="Cut Line" description="Cut a line of text" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TYLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.columnPrevious" commandName="Select Previous Column" description="Select the previous column" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TYbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.file.closeAll" commandName="Close All" description="Close all editors" category="_JP7hirfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TYrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.promote.local.variable" commandName="Convert Local Variable to Field" description="Convert a local variable to a field" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TY7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.select.wordNext" commandName="Select Next Word" description="Select the next word" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TZLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.spy" commandName="Show Contributing Plug-in" description="Shows contribution information for the currently selected element" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TZbfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.submodule.sync" commandName="Sync Submodule" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TZrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.quickAccess" commandName="Quick Access" description="Quickly access UI elements" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TZ7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.addToWorkingSet" commandName="Add to Working Set" description="Adds the selected object to a working set." category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TaLfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.goto.next.member" commandName="Go to Next Member" description="Move the caret to the next member of the compilation unit" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TabfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.persistentTypeMapAs" commandName="Map As" category="_JP7hj7fJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP6TarfJEeOxntPoYxjofg" elementId="persistentTypeMappingKey" name="mapping key" optional="false"/>
   </commands>
-  <commands xmi:id="_eYE9yLe6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.ForceReturn" commandName="Force Return" description="Forces return from method with value of selected expression " category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9ybe6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.runtimeWorkbenchShortcut.run" commandName="Run Eclipse Application" description="Run Eclipse Application" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9yre6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.remove.block.comment" commandName="Remove Block Comment" description="Remove the block comment enclosing the selection" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9y7e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.call.hierarchy" commandName="Open Call Hierarchy" description="Open a call hierarchy on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9zLe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CreatePatch" commandName="Create Patch" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9zbe6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewImportProjects" commandName="Import Projects..." description="Import or create in local Git repository" category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE9zre6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showIn" commandName="Show In" category="_eYGy9re6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYE9z7e6EeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showIn.targetId" name="Show In Target Id" optional="false"/>
+  <commands xmi:id="_JP6Ta7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.ForceReturn" commandName="Force Return" description="Forces return from method with value of selected expression " category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TbLfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.runtimeWorkbenchShortcut.run" commandName="Run Eclipse Application" description="Run Eclipse Application" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TbbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.remove.block.comment" commandName="Remove Block Comment" description="Remove the block comment enclosing the selection" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TbrfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.call.hierarchy" commandName="Open Call Hierarchy" description="Open a call hierarchy on the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6Tb7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.team.CreatePatch" commandName="Create Patch" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TcLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewImportProjects" commandName="Import Projects..." description="Import or create in local Git repository" category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TcbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showIn" commandName="Show In" category="_JP8ImbfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP6TcrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.navigate.showIn.targetId" name="Show In Target Id" optional="false"/>
   </commands>
-  <commands xmi:id="_eYE90Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.run" commandName="Run Java Applet" description="Run Java Applet" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE90be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.copy.qualified.name" commandName="Copy Qualified Name" description="Copy a fully qualified name to the system clipboard" category="_eYGL8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE90re6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.generateDDL" commandName="Generate Tables from Entities..." category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE907e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AllReferences" commandName="All References" description="Inspect all references to the selected object" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYE91Le6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowRepositoryCatalog" commandName="Show Repository Catalog" category="_eYGy8be6EeOxntPoYxjofg">
-    <parameters xmi:id="_eYE91be6EeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.RepositoryParameter" name="P2 Repository URI"/>
+  <commands xmi:id="_JP6Tc7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.javaAppletShortcut.run" commandName="Run Java Applet" description="Run Java Applet" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TdLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.copy.qualified.name" commandName="Copy Qualified Name" description="Copy a fully qualified name to the system clipboard" category="_JP7hkLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TdbfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.generateDDL" commandName="Generate Tables from Entities..." category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6TdrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.AllReferences" commandName="All References" description="Inspect all references to the selected object" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP6Td7fJEeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.ShowRepositoryCatalog" commandName="Show Repository Catalog" category="_JP8IlLfJEeOxntPoYxjofg">
+    <parameters xmi:id="_JP6TeLfJEeOxntPoYxjofg" elementId="org.eclipse.equinox.p2.ui.discovery.commands.RepositoryParameter" name="P2 Repository URI"/>
   </commands>
-  <commands xmi:id="_eYFk0Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.command.OpenFromClipboard" commandName="Open from Clipboard" description="Opens a Java element or a Java stack trace from clipboard" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk0be6EeOxntPoYxjofg" elementId="org.eclipse.ui.window.nextPerspective" commandName="Next Perspective" description="Switch to the next perspective" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk0re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.constant" commandName="Extract Constant" description="Extracts a constant into a new static field and uses the new static field" category="_eYGy-Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk07e6EeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.hippieCompletion" commandName="Word Completion" description="Context insensitive completion" category="_eYGy8Le6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk1Le6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.sync" commandName="Synchronize with Repository" description="Synchronize the workspace resources with those in the repository" category="_eYGL5re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk1be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.folding.collapseComments" commandName="Collapse Comments" description="Collapse all comments" category="_eYGL-be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk1re6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.javadoc.comment" commandName="Add Javadoc Comment" description="Add a Javadoc comment stub to the member element" category="_eYGy97e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk17e6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.type.hierarchy" commandName="Open Type Hierarchy" description="Open a type hierarchy on the selected element" category="_eYGy9re6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk2Le6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureFetch" commandName="Configure Fetch..." category="_eYGL9be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk2be6EeOxntPoYxjofg" elementId="com.google.gwt.eclipse.core.speedTracerProfile" commandName="Profile Using Speed Tracer" category="_eYGy8be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk2re6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Resume" commandName="Resume" description="Resume" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk27e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Execute" commandName="Execute" description="Evaluate selected text" category="_eYGL7be6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk3Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.arrangeWindowsInFront" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.arrangeWindows.name" description="%command.arrangeWindows.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk3be6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.minimizeWindow" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.minimize.name" description="%command.minimize.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk3re6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.fullscreenWindow" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.fullscreen.name" description="%command.fullscreen.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk37e6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.zoomWindow" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.zoom.name" description="%command.zoom.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk4Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.closeDialog" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.closeDialog.name" description="%command.closeDialog.desc" category="_eYGL57e6EeOxntPoYxjofg"/>
-  <commands xmi:id="_eYFk4be6EeOxntPoYxjofg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetExecute" commandName="E&amp;xecute"/>
-  <commands xmi:id="_eYFk4re6EeOxntPoYxjofg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetDisplay" commandName="Displa&amp;y"/>
-  <commands xmi:id="_eYFk47e6EeOxntPoYxjofg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetInspect" commandName="Insp&amp;ect"/>
-  <addons xmi:id="_eYFk5Le6EeOxntPoYxjofg" elementId="org.eclipse.e4.core.commands.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.core.commands/org.eclipse.e4.core.commands.CommandServiceAddon"/>
-  <addons xmi:id="_eYFk5be6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.contexts.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.services/org.eclipse.e4.ui.services.ContextServiceAddon"/>
-  <addons xmi:id="_eYFk5re6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.bindings.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.bindings/org.eclipse.e4.ui.bindings.BindingServiceAddon"/>
-  <addons xmi:id="_eYFk57e6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.commands.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.CommandProcessingAddon"/>
-  <addons xmi:id="_eYFk6Le6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.contexts.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.ContextProcessingAddon"/>
-  <addons xmi:id="_eYFk6be6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.bindings.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.swt/org.eclipse.e4.ui.workbench.swt.util.BindingProcessingAddon"/>
-  <addons xmi:id="_eYGL4Le6EeOxntPoYxjofg" elementId="Cleanup Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.cleanupaddon.CleanupAddon"/>
-  <addons xmi:id="_eYGL4be6EeOxntPoYxjofg" elementId="DnD Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.dndaddon.DnDAddon"/>
-  <addons xmi:id="_eYGL4re6EeOxntPoYxjofg" elementId="MinMax Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon"/>
-  <addons xmi:id="_eYGL47e6EeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.addon.0" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.HandlerProcessingAddon"/>
-  <addons xmi:id="_eYGL5Le6EeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CocoaUIHandler" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CocoaUIHandler"/>
-  <categories xmi:id="_eYGL5be6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.perspectives" name="Perspectives" description="Commands for opening perspectives"/>
-  <categories xmi:id="_eYGL5re6EeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.actionSet" name="CVS" description="Actions that apply when working with CVS repositories"/>
-  <categories xmi:id="_eYGL57e6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.window" name="Window"/>
-  <categories xmi:id="_eYGL6Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.project" name="Project"/>
-  <categories xmi:id="_eYGL6be6EeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.spy.commands.category" name="Spy"/>
-  <categories xmi:id="_eYGL6re6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.views" name="Views" description="Commands for opening views"/>
-  <categories xmi:id="_eYGL67e6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.file" name="File"/>
-  <categories xmi:id="_eYGL7Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.ide.markerContents" name="Contents" description="The category for menu contents"/>
-  <categories xmi:id="_eYGL7be6EeOxntPoYxjofg" elementId="org.eclipse.debug.ui.category.run" name="Run/Debug" description="Run/Debug command category"/>
-  <categories xmi:id="_eYGL7re6EeOxntPoYxjofg" elementId="org.eclipse.pde.ui.category.source" name="Manifest Editor Source" description="PDE Source Page actions"/>
-  <categories xmi:id="_eYGL77e6EeOxntPoYxjofg" elementId="org.eclipse.wb.core.actions.category" name="WindowBuilder Pro" description="WindowBuilder Pro actions"/>
-  <categories xmi:id="_eYGL8Le6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.jpaStructureViewCommands" name="JPA Structure View"/>
-  <categories xmi:id="_eYGL8be6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.category.source" name="Source" description="JavaScript Source Actions"/>
-  <categories xmi:id="_eYGL8re6EeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.category" name="gaewtp-commands"/>
-  <categories xmi:id="_eYGL87e6EeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.jpaMetadataConversionCommands" name="JPA Metadata Conversion"/>
-  <categories xmi:id="_eYGL9Le6EeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.category.refactoring" name="Refactor - JavaScript" description="JavaScript Refactoring Actions"/>
-  <categories xmi:id="_eYGL9be6EeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commandCategory" name="Git"/>
-  <categories xmi:id="_eYGL9re6EeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui" name="Server" description="Server"/>
-  <categories xmi:id="_eYGL97e6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.dialogs" name="Dialogs" description="Commands for opening dialogs"/>
-  <categories xmi:id="_eYGL-Le6EeOxntPoYxjofg" elementId="org.eclipse.search.ui.category.search" name="Search" description="Search command category"/>
-  <categories xmi:id="_eYGL-be6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.textEditor" name="Text Editing" description="Text Editing Commands"/>
-  <categories xmi:id="_eYGy8Le6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.edit" name="Edit"/>
-  <categories xmi:id="_eYGy8be6EeOxntPoYxjofg" elementId="org.eclipse.core.commands.categories.autogenerated" name="Uncategorized" description="Commands that were either auto-generated or have no category"/>
-  <categories xmi:id="_eYGy8re6EeOxntPoYxjofg" elementId="org.eclipse.team.ui.category.team" name="Team" description="Actions that apply when working with a Team"/>
-  <categories xmi:id="_eYGy87e6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.help" name="Help"/>
-  <categories xmi:id="_eYGy9Le6EeOxntPoYxjofg" elementId="org.eclipse.compare.ui.category.compare" name="Compare" description="Compare command category"/>
-  <categories xmi:id="_eYGy9be6EeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.category.refactoring" name="Refactoring"/>
-  <categories xmi:id="_eYGy9re6EeOxntPoYxjofg" elementId="org.eclipse.ui.category.navigate" name="Navigate"/>
-  <categories xmi:id="_eYGy97e6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.category.source" name="Source" description="Java Source Actions"/>
-  <categories xmi:id="_eYGy-Le6EeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.category.refactoring" name="Refactor - Java" description="Java Refactoring Actions"/>
+  <commands xmi:id="_JP6TebfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.command.OpenFromClipboard" commandName="Open from Clipboard" description="Opens a Java element or a Java stack trace from clipboard" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66cLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.window.nextPerspective" commandName="Next Perspective" description="Switch to the next perspective" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66cbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.extract.constant" commandName="Extract Constant" description="Extracts a constant into a new static field and uses the new static field" category="_JP8Im7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66crfJEeOxntPoYxjofg" elementId="org.eclipse.ui.edit.text.hippieCompletion" commandName="Word Completion" description="Context insensitive completion" category="_JP8Ik7fJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66c7fJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.sync" commandName="Synchronize with Repository" description="Synchronize the workspace resources with those in the repository" category="_JP7hhbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66dLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.folding.collapseComments" commandName="Collapse Comments" description="Collapse all comments" category="_JP8IkrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66dbfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.edit.text.java.add.javadoc.comment" commandName="Add Javadoc Comment" description="Add a Javadoc comment stub to the member element" category="_JP8ImrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66drfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.edit.text.java.open.type.hierarchy" commandName="Open Type Hierarchy" description="Open a type hierarchy on the selected element" category="_JP8ImbfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66d7fJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.RepositoriesViewConfigureFetch" commandName="Configure Fetch..." category="_JP7hlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66eLfJEeOxntPoYxjofg" elementId="com.google.gwt.eclipse.core.speedTracerProfile" commandName="Profile Using Speed Tracer" category="_JP8IlLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66ebfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.commands.Resume" commandName="Resume" description="Resume" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66erfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.debug.ui.commands.Execute" commandName="Execute" description="Evaluate selected text" category="_JP7hjLfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66e7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.arrangeWindowsInFront" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.arrangeWindows.name" description="%command.arrangeWindows.desc" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66fLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.minimizeWindow" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.minimize.name" description="%command.minimize.desc" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66fbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.fullscreenWindow" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.fullscreen.name" description="%command.fullscreen.desc" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66frfJEeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.zoomWindow" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.zoom.name" description="%command.zoom.desc" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66f7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.cocoa.closeDialog" contributorURI="platform:/fragment/org.eclipse.e4.ui.workbench.renderers.swt.cocoa" commandName="%command.closeDialog.name" description="%command.closeDialog.desc" category="_JP7hhrfJEeOxntPoYxjofg"/>
+  <commands xmi:id="_JP66gLfJEeOxntPoYxjofg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetExecute" commandName="E&amp;xecute"/>
+  <commands xmi:id="_JP66gbfJEeOxntPoYxjofg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetDisplay" commandName="Displa&amp;y"/>
+  <commands xmi:id="_JP66grfJEeOxntPoYxjofg" elementId="AUTOGEN:::org.eclipse.jdt.debug.ui.JavaSnippetToolbarActions/org.eclipse.jdt.debug.ui.SnippetInspect" commandName="Insp&amp;ect"/>
+  <addons xmi:id="_JP66g7fJEeOxntPoYxjofg" elementId="org.eclipse.e4.core.commands.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.core.commands/org.eclipse.e4.core.commands.CommandServiceAddon"/>
+  <addons xmi:id="_JP66hLfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.contexts.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.services/org.eclipse.e4.ui.services.ContextServiceAddon"/>
+  <addons xmi:id="_JP66hbfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.bindings.service" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.bindings/org.eclipse.e4.ui.bindings.BindingServiceAddon"/>
+  <addons xmi:id="_JP66hrfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.commands.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.CommandProcessingAddon"/>
+  <addons xmi:id="_JP66h7fJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.contexts.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.ContextProcessingAddon"/>
+  <addons xmi:id="_JP66iLfJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.bindings.model" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.swt/org.eclipse.e4.ui.workbench.swt.util.BindingProcessingAddon"/>
+  <addons xmi:id="_JP66ibfJEeOxntPoYxjofg" elementId="Cleanup Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.cleanupaddon.CleanupAddon"/>
+  <addons xmi:id="_JP7hgLfJEeOxntPoYxjofg" elementId="DnD Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.dndaddon.DnDAddon"/>
+  <addons xmi:id="_JP7hgbfJEeOxntPoYxjofg" elementId="MinMax Addon" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.addons.swt/org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon"/>
+  <addons xmi:id="_JP7hgrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.workbench.addon.0" contributorURI="platform:/plugin/org.eclipse.platform" contributionURI="bundleclass://org.eclipse.e4.ui.workbench/org.eclipse.e4.ui.internal.workbench.addons.HandlerProcessingAddon"/>
+  <addons xmi:id="_JP7hg7fJEeOxntPoYxjofg" elementId="org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CocoaUIHandler" contributionURI="bundleclass://org.eclipse.e4.ui.workbench.renderers.swt/org.eclipse.e4.ui.workbench.renderers.swt.cocoa.CocoaUIHandler"/>
+  <categories xmi:id="_JP7hhLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.perspectives" name="Perspectives" description="Commands for opening perspectives"/>
+  <categories xmi:id="_JP7hhbfJEeOxntPoYxjofg" elementId="org.eclipse.team.cvs.ui.actionSet" name="CVS" description="Actions that apply when working with CVS repositories"/>
+  <categories xmi:id="_JP7hhrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.window" name="Window"/>
+  <categories xmi:id="_JP7hh7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.project" name="Project"/>
+  <categories xmi:id="_JP7hiLfJEeOxntPoYxjofg" elementId="org.eclipse.pde.runtime.spy.commands.category" name="Spy"/>
+  <categories xmi:id="_JP7hibfJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.views" name="Views" description="Commands for opening views"/>
+  <categories xmi:id="_JP7hirfJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.file" name="File"/>
+  <categories xmi:id="_JP7hi7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.ide.markerContents" name="Contents" description="The category for menu contents"/>
+  <categories xmi:id="_JP7hjLfJEeOxntPoYxjofg" elementId="org.eclipse.debug.ui.category.run" name="Run/Debug" description="Run/Debug command category"/>
+  <categories xmi:id="_JP7hjbfJEeOxntPoYxjofg" elementId="org.eclipse.pde.ui.category.source" name="Manifest Editor Source" description="PDE Source Page actions"/>
+  <categories xmi:id="_JP7hjrfJEeOxntPoYxjofg" elementId="org.eclipse.wb.core.actions.category" name="WindowBuilder Pro" description="WindowBuilder Pro actions"/>
+  <categories xmi:id="_JP7hj7fJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.jpaStructureViewCommands" name="JPA Structure View"/>
+  <categories xmi:id="_JP7hkLfJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.category.source" name="Source" description="JavaScript Source Actions"/>
+  <categories xmi:id="_JP7hkbfJEeOxntPoYxjofg" elementId="com.google.appengine.eclipse.wtp.commands.category" name="gaewtp-commands"/>
+  <categories xmi:id="_JP7hkrfJEeOxntPoYxjofg" elementId="org.eclipse.jpt.jpa.ui.jpaMetadataConversionCommands" name="JPA Metadata Conversion"/>
+  <categories xmi:id="_JP7hk7fJEeOxntPoYxjofg" elementId="org.eclipse.wst.jsdt.ui.category.refactoring" name="Refactor - JavaScript" description="JavaScript Refactoring Actions"/>
+  <categories xmi:id="_JP7hlLfJEeOxntPoYxjofg" elementId="org.eclipse.egit.ui.commandCategory" name="Git"/>
+  <categories xmi:id="_JP7hlbfJEeOxntPoYxjofg" elementId="org.eclipse.wst.server.ui" name="Server" description="Server"/>
+  <categories xmi:id="_JP8IkLfJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.dialogs" name="Dialogs" description="Commands for opening dialogs"/>
+  <categories xmi:id="_JP8IkbfJEeOxntPoYxjofg" elementId="org.eclipse.search.ui.category.search" name="Search" description="Search command category"/>
+  <categories xmi:id="_JP8IkrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.textEditor" name="Text Editing" description="Text Editing Commands"/>
+  <categories xmi:id="_JP8Ik7fJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.edit" name="Edit"/>
+  <categories xmi:id="_JP8IlLfJEeOxntPoYxjofg" elementId="org.eclipse.core.commands.categories.autogenerated" name="Uncategorized" description="Commands that were either auto-generated or have no category"/>
+  <categories xmi:id="_JP8IlbfJEeOxntPoYxjofg" elementId="org.eclipse.team.ui.category.team" name="Team" description="Actions that apply when working with a Team"/>
+  <categories xmi:id="_JP8IlrfJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.help" name="Help"/>
+  <categories xmi:id="_JP8Il7fJEeOxntPoYxjofg" elementId="org.eclipse.compare.ui.category.compare" name="Compare" description="Compare command category"/>
+  <categories xmi:id="_JP8ImLfJEeOxntPoYxjofg" elementId="org.eclipse.ltk.ui.category.refactoring" name="Refactoring"/>
+  <categories xmi:id="_JP8ImbfJEeOxntPoYxjofg" elementId="org.eclipse.ui.category.navigate" name="Navigate"/>
+  <categories xmi:id="_JP8ImrfJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.category.source" name="Source" description="Java Source Actions"/>
+  <categories xmi:id="_JP8Im7fJEeOxntPoYxjofg" elementId="org.eclipse.jdt.ui.category.refactoring" name="Refactor - Java" description="Java Refactoring Actions"/>
 </application:Application>
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index b/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index
index 5fe1ed0..17add33 100644
Binary files a/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index and b/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index differ
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index.tmp b/.metadata/.plugins/org.eclipse.jdt.core/1856098903.index.tmp
deleted file mode 100644
index e69de29..0000000
diff --git a/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt b/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt
index c836f54..91eade9 100644
--- a/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt
+++ b/.metadata/.plugins/org.eclipse.jdt.core/savedIndexNames.txt
@@ -1,3 +1,28 @@
 INDEX VERSION 1.126+/Users/Enoch/Documents/CPSC304/Project/CPSC304CoolTeam/.metadata/.plugins/org.eclipse.jdt.core
+1856098903.index
+1743766565.index
+4238209716.index
+3380752744.index
+2236530947.index
+3321539481.index
+1819685514.index
+1384487945.index
+2678104552.index
+1600714693.index
+156905802.index
+2371787587.index
+3712507179.index
+947220250.index
+1833648217.index
+3302703152.index
+2582987092.index
+185235850.index
+1089098316.index
 2842765697.index
+257114466.index
+1271342938.index
+3399394134.index
+2545238116.index
+3266567714.index
+2063481186.index
 1465312868.index
diff --git a/Project Part III/src/gui/Main.java b/Project Part III/src/gui/Main.java
index cc9d472..033d3b6 100644
--- a/Project Part III/src/gui/Main.java	
+++ b/Project Part III/src/gui/Main.java	
@@ -4,6 +4,7 @@ import java.awt.*;
 import java.awt.event.*;
 import java.io.*;
 import java.sql.*;
+import java.text.ParseException;
 
 import javax.swing.*;
 
@@ -163,7 +164,12 @@ public class Main implements ActionListener {
 			// if the username and password are valid, 
 			// remove the login window and display a text menu 
 			mainFrame.dispose();
-			showMenu();     
+			try {
+				showMenu();
+			} catch (ParseException e1) {
+				// TODO Auto-generated catch block
+				e1.printStackTrace();
+			}     
 		}
 		else
 		{
@@ -187,7 +193,7 @@ public class Main implements ActionListener {
 	/*
      * displays simple text interface
      */ 
-    private void showMenu()
+    private void showMenu() throws ParseException
     {
 	int choice;
 	boolean quit;
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index d0f8b7b..58a3905 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -23,7 +23,7 @@ public class ClerkUser {
 	 * Loads clerk's side of application.
 	 * Uses buffer line reader and connection established in Main class.
 	 */
-	public static void main() {
+	public static void main() throws ParseException {
 		int choice;
 		boolean quit;
 
@@ -32,7 +32,7 @@ public class ClerkUser {
 			while (!quit) {
 				System.out.print("\n\nPlease choose one of the following: \n");
 				System.out.print("1.  Add borrower\n");
-				//System.out.print("2.  Check out items\n");
+				System.out.print("2.  Check out item\n");;
 				//System.out.print("3.  Process a return\n");
 				//System.out.print("4.  Check overdue items\n");
 				System.out.print("5.  Quit\n>>");
@@ -43,7 +43,7 @@ public class ClerkUser {
 
 				switch (choice) {
 				case 1:  addBorrower(); break;
-				case 2:  ; break; // TODO checkOutItems()
+				case 2:  checkOutItems(); break; // TODO checkOutItems()
 				case 3:  ; break; // TODO processReturn()
 				case 4:  ; break; // TODO checkOverdueItems()
 				case 5:  quit = true; 
@@ -160,32 +160,40 @@ public class ClerkUser {
 		Statement  		   s;
 		
 		try {
-			System.out.println("\n Borrower ID: ");
+			System.out.println("Borrower ID: ");
 			bid = Integer.parseInt(Main.in.readLine());
-			System.out.println("\n List of call numbers: ");
+			System.out.println("List of call numbers: ");
 			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
 			
-			for (String c: callNumbersS){
-				int callNumber;
-				callNumber = Integer.parseInt(c);
-				callNumbers.add(callNumber);
+			if (callNumbersS.isEmpty()) {
+				
 			}
+	
 			
-			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT bid "
-										+ "FROM Borrower "
-										+ "WHERE bid = " + bid);
+			else{
+				
+				for (String c: callNumbersS){
+					int callNumber;
+					callNumber = Integer.parseInt(c.trim());
+					callNumbers.add(callNumber);
+				}
+			
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT bid "
+												+ "FROM Borrower "
+												+ "WHERE bid = " + bid);
 
-			if (rs.next() == false){
-				System.out.println("Invalid ID");
+				if (rs.next() == false){
+					System.out.println("Invalid ID");
 				
-			}
-			else {
-				for (int j = 0; j < callNumbers.size(); j++) {
-					int i = callNumbers.get(j);
-					checkOutItem(bid, i);
 				}
+				else {
+					for (int j = 0; j < callNumbers.size(); j++) {
+						int i = callNumbers.get(j);
+						checkOutItem(bid, i);
+					}
 				
+				}
 			}
 			
 		}
@@ -217,7 +225,8 @@ public class ClerkUser {
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT callNumber "
 										+ "FROM BookCopy  "
-										+ "WHERE status = in");
+										+ "WHERE status = 'in' "
+										+ "AND callNumber = " + callNumber);
 
 			if (rs.next() == false){
 				System.out.println("Book not available for borrowing");
@@ -253,19 +262,24 @@ public class ClerkUser {
 		PreparedStatement  ps;
 
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,bid,callNumber,?,?,null)");
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
 
-			System.out.print("\n Borrowing ID: ");
+			System.out.println("Borrowing ID for " + callNumber + ":");
 			borid = Integer.parseInt(Main.in.readLine());
 			ps.setInt(1, borid);
 
-			System.out.print("\n Copy No: ");
+			System.out.println("Copy No: ");
 			copyNo = Integer.parseInt(Main.in.readLine());
 			ps.setInt(4, copyNo);
 
-			System.out.print("\n Out Date: ");
+			System.out.println("Out Date(dd/mm/yy): ");
 			outDate = stringToDate(Main.in.readLine());
 			ps.setDate(5, outDate);
+			
+			//!!
+			ps.setInt(2, bid);
+			ps.setInt(3, callNumber);
+			ps.setDate(6, null);
 
 			ps.executeUpdate();
 			// commit work 
@@ -274,7 +288,7 @@ public class ClerkUser {
 			
 			System.out.println("Call Number: " + callNumber);
 			System.out.println("Copy Number: " + copyNo);
-			System.out.println("Due Date: " + getDueDateAccordingToTodaysDate(bid, outDate).toString());
+			System.out.println("Due Date: " + getDueDate(bid, outDate).toString());
 		}
 
 		
@@ -304,7 +318,7 @@ public class ClerkUser {
 		
 	}
 	
-	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
+	static Date getDueDate(int bid, Date outDate){
 		
 		Statement 				s;
 		int 					bookTimeLimit = 0;
@@ -341,10 +355,10 @@ public class ClerkUser {
 		
 		String outDateS = outDate.toString();
 		System.out.println("This is the outDate in string: " + outDateS);
-		String[] tokens = outDateS.split("/");
+		String[] tokens = outDateS.split("-");
 		
-		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]));
-		gregCalendar.add(Calendar.DATE, bookTimeLimit*7);
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
+		gregCalendar.add(Calendar.DAY_OF_YEAR, bookTimeLimit*7);
 		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
 		return sqlDate;
 		

commit 9904c7bf68d8f4d035dc104954253fc1cb4e1847
Merge: f671fd3 89320b3
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sat Mar 29 22:10:47 2014 -0700

    merge

commit 62304c8618355e2f5cf993e96c86794eb305b59d
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 22:14:39 2014 -0700

    receiving updates

diff --git a/Project Part III/.gitignore b/Project Part III/.gitignore
new file mode 100644
index 0000000..5e56e04
--- /dev/null
+++ b/Project Part III/.gitignore	
@@ -0,0 +1 @@
+/bin
diff --git a/Project Part III/bin/.gitignore b/Project Part III/bin/.gitignore
deleted file mode 100644
index d271c69..0000000
--- a/Project Part III/bin/.gitignore	
+++ /dev/null
@@ -1,2 +0,0 @@
-/gui
-/users
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index f5b2008..e9c8e3a 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -360,7 +360,7 @@ public class ClerkUser {
 			statement = Main.con.createStatement();
 
 			System.out.println("List of items overdue and the borrowers who have checked them out:");
-			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate, D.bookTimeLimit"
+			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate, D.bookTimeLimit "
 							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
 							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
 							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 0ad60e6..73e750d 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -23,7 +23,7 @@ public class LibrarianUser {
 			while (!quit) {
 				System.out.print("\n\nPlease choose one of the following: \n");
 				System.out.print("1.  Add book\n");
-				//System.out.println("2. Generate a report of all checked out books\n");
+				System.out.println("2. Generate a report of all checked out books\n"); 
 //				System.out.println("3. Generate a report of the most popular items for a given year\n");
 				System.out.print("4.  Quit\n>>");
 
@@ -33,7 +33,7 @@ public class LibrarianUser {
 
 				switch (choice) {
 				case 1:  addBook(); break;
-				case 2:  reportCheckedOutBooks(); break; // TODO reportCheckedOutBooks()
+				case 2:  reportCheckedOutBooks(); break; // TODO reportCheckedOutBooks() NOT DONE YET
 				case 3:  ; break; // TODO mostPopular()
 				case 4:  quit = true; 
 				}
@@ -335,7 +335,7 @@ public class LibrarianUser {
 			// when borrowing's inDate is
 			// null.
 			System.out.println("List of items you currently borrowed:");
-			rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, D.bookTimeLimit"
+			rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, D.bookTimeLimit "
 							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
 							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
 							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "

commit e6b2b186b669a40708c2c541e2da2c3e587a11e4
Merge: 62304c8 9904c7b
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 22:15:03 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam

commit 929ea304306de33ad243049ab01f889a1105f7f3
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 22:20:30 2014 -0700

    Updated table.sql Borrowing and HoldRequest inserts to comply with
    integrity constraints.

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index d0f8b7b..4496cc9 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -83,49 +83,45 @@ public class ClerkUser {
 		String             phone;
 		String             emailAddress;
 		int                sinOrStNo;
-		Date               expiryDate;
+		String             expiryDate;
 		String             type;
 
 		PreparedStatement  ps;
 
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (?,?,?,?,?,?,?,?,?)");
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (bid_c.nextval,?,?,?,?,?,?,{d ?},?)");
 
-			System.out.print("\n Borrower ID: ");
-			bid = Integer.parseInt(Main.in.readLine());
-			ps.setInt(1, bid);
-
-			System.out.print("\n Borrower password: ");
+			System.out.print("Borrower password: ");
 			password = Main.in.readLine();
-			ps.setString(2, password);
+			ps.setString(1, password);
 
-			System.out.print("\n Borrower name: ");
+			System.out.print("Borrower name: ");
 			name = Main.in.readLine();
-			ps.setString(3, name);
+			ps.setString(2, name);
 
-			System.out.print("\n Borrower address: ");
+			System.out.print("Borrower address: ");
 			address = Main.in.readLine();
-			ps.setString(4, address);
+			ps.setString(3, address);
 
-			System.out.print("\n Borrower phone number: ");
+			System.out.print("Borrower phone number: ");
 			phone = Main.in.readLine();
-			ps.setString(5,  phone);
+			ps.setString(4,  phone);
 
-			System.out.print("\n Borrower email address: ");
+			System.out.print("Borrower email address: ");
 			emailAddress = Main.in.readLine();
-			ps.setString(6, emailAddress);
+			ps.setString(5, emailAddress);
 
-			System.out.print("\n Borrower SIN or student number: ");
+			System.out.print("Borrower SIN or student number: ");
 			sinOrStNo = Integer.parseInt(Main.in.readLine());
-			ps.setInt(7, sinOrStNo);
+			ps.setInt(6, sinOrStNo);
 
-			System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
-			expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
-			ps.setDate(8, expiryDate);
+			System.out.print("Borrower expiry date: ");  // Clerk should set to 2 years from today
+			expiryDate = Main.in.readLine();  // Must be in format yyyy-mm-dd
+			ps.setString(7, expiryDate);
 
-			System.out.print("\n Borrower type: ");
+			System.out.print("Borrower type: ");
 			type = Main.in.readLine();
-			ps.setString(9, type);
+			ps.setString(8, type);
 
 			ps.executeUpdate();
 			// commit work 
@@ -296,12 +292,16 @@ public class ClerkUser {
 		}
 	}
 	
-	static Date stringToDate(String date) throws ParseException{
-		SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+	static Date stringToDate(String date) {
+		try {SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
 		java.util.Date utilDate = fm.parse(date);
 		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
 		return sqlDate;
-		
+		}
+		catch (ParseException p) {
+			System.out.println("Message: Date must be informat dd/MM/yy");
+			return null;
+		}		
 	}
 	
 	static Date getDueDateAccordingToTodaysDate(int bid, Date outDate){
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 8084743..b2f9641 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -33,10 +33,9 @@ public class LibrarianUser {
 
 				switch (choice) {
 				case 1:  addBook(); break;
-				case 2:  ; break; // TODO checkOutItems()
-				case 3:  ; break; // TODO processReturn()
-				case 4:  ; break; // TODO checkOverdueItems()
-				case 5:  quit = true; 
+				case 2:  ; break; // TODO checkedOutBooksReport()
+				case 3:  ; break; // TODO mostPopularItemsReport()
+				case 4:  quit = true; 
 				}
 			}
 			Main.con.close();
@@ -120,10 +119,10 @@ public class LibrarianUser {
 
 		try {
 
-			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (bid_c.nextval,?,?,?,?,?)");
-			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (bid_c.nextval,?,?)");
-			ps3 = Main.con.prepareStatement("INSERT INTO HasSubject VALUES (bid_c.nextval,?)");
-			ps4 = Main.con.prepareStatement("INSERT INTO HasAuthor VALUES (bid_c,?)");
+			ps1 = Main.con.prepareStatement("INSERT INTO Book VALUES (callNumber_c.nextval,?,?,?,?,?)");
+			ps2 = Main.con.prepareStatement("INSERT INTO BookCopy VALUES (callNumber_c.currval,?,?)");
+			ps3 = Main.con.prepareStatement("INSERT INTO HasSubject VALUES (callNumber_c.currval,?)");
+			ps4 = Main.con.prepareStatement("INSERT INTO HasAuthor VALUES (callNumber_c.currval,?)");
 
 			// new book
 			System.out.print("Book ISBN: ");
@@ -143,30 +142,30 @@ public class LibrarianUser {
 				return;
 			}
 
-			ps1.setString(2, isbn);
+			ps1.setString(1, isbn);
 
 			System.out.print("Book title: ");
 			title = Main.in.readLine();
-			ps1.setString(3, title);
+			ps1.setString(2, title);
 
 			System.out.print("Book main author: ");
 			mainAuthor = Main.in.readLine();
-			ps1.setString(4, mainAuthor);
+			ps1.setString(3, mainAuthor);
 
 			System.out.print("Book publisher: ");
 			publisher = Main.in.readLine();
-			ps1.setString(5,  publisher);
+			ps1.setString(4,  publisher);
 
 			System.out.print("Book published year: ");
 			year = Integer.parseInt(Main.in.readLine());
-			ps1.setInt(6, year);
+			ps1.setInt(5, year);
 
 			ps1.executeUpdate();
 
 
 			// new book copy
-			ps2.setInt(2, 1);
-			ps2.setString(3, "in");
+			ps2.setInt(1, 1);
+			ps2.setString(2, "in");
 			
 			ps2.executeUpdate();
 
@@ -178,9 +177,9 @@ public class LibrarianUser {
 
 			for (String subject : subjects) {				
 				if (subject.trim().length() == 0) {
-					ps3.setString(2, null);
+					ps3.setString(1, null);
 				} else {
-					ps3.setString(2, subject.trim());
+					ps3.setString(1, subject.trim());
 				}
 				
 				ps3.executeUpdate();
@@ -196,9 +195,9 @@ public class LibrarianUser {
 				
 				for (String author: authors) {					
 					if (author.length() == 0) {
-						ps4.setString(2, null);
+						ps4.setString(1, null);
 					} else {
-						ps4.setString(2, author.trim());
+						ps4.setString(1, author.trim());
 					}
 					
 					ps4.executeUpdate();
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index b430849..ad05ae2 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -111,15 +111,15 @@ insert into BorrowerType values
 
 
 insert into Borrower values
-(12345678, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '12345678', '2015-09-09', 'faculty');
+(111, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '11111111', {d '2015-09-09'}, 'faculty');
 insert into Borrower values
-(56781234, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '12345678', '2014-09-09', 'staff');
+(222, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '22222222', {d '2014-09-09'}, 'staff');
 insert into Borrower values
-(87654321, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '12345678', '2015-12-12', 'general');
+(333, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '33333333', {d '2015-12-12'}, 'general');
 insert into Borrower values
-(11111111, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '12345678', '2015-09-09', 'staff');
+(444, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '44444444', {d '2015-09-09'}, 'staff');
 insert into Borrower values
-(22222222, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
+(555, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '55555555', {d '2015-09-09'}, 'student');
 
 
 insert into Book values
@@ -197,13 +197,13 @@ insert into HasSubject values
 
 
 insert into Borrowing values
-(11111, 12345678, 1000, 2,'2014-03-29',null);
+(100, 111, 100, 1,'2014-03-29',null);
 insert into Borrowing values
-(22222, 12345678, 1000, 1,'2014-02-22','2014-03-29');
+(200, 222, 300, 1,'2014-02-22','2014-03-29');
 insert into Borrowing values
-(33333, 12345678, 1000, 1,'2014-01-29','2014-01-31');
+(300, 333, 600, 1,'2014-01-29','2014-01-31');
 insert into Borrowing values
-(44444, 12345678, 1000, 1,'2013-09-01','2013-10-10');
+(400, 444, 999, 2,'2013-09-01','2013-10-10');
 
 insert into HoldRequest values
-(1111, 12345678, 1000, '2014-03-30');
\ No newline at end of file
+(999, 111, 300, '2014-03-30');
\ No newline at end of file

commit ae89e8bf9c6fac0ab39720ba01ee30f5ffc948ef
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 22:23:46 2014 -0700

    removed Branch project again

diff --git a/.DS_Store b/.DS_Store
deleted file mode 100644
index 5008ddf..0000000
Binary files a/.DS_Store and /dev/null differ
diff --git a/Branch/.classpath b/Branch/.classpath
deleted file mode 100644
index fb565a5..0000000
--- a/Branch/.classpath
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
diff --git a/Branch/.project b/Branch/.project
deleted file mode 100644
index a1cbcd1..0000000
--- a/Branch/.project
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>Branch</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/Branch/.settings/org.eclipse.jdt.core.prefs b/Branch/.settings/org.eclipse.jdt.core.prefs
deleted file mode 100644
index 7341ab1..0000000
--- a/Branch/.settings/org.eclipse.jdt.core.prefs
+++ /dev/null
@@ -1,11 +0,0 @@
-eclipse.preferences.version=1
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.7
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.source=1.7
diff --git a/Branch/branch.java b/Branch/branch.java
deleted file mode 100644
index 3ec4ce0..0000000
--- a/Branch/branch.java
+++ /dev/null
@@ -1,597 +0,0 @@
-
-// We need to import the java.sql package to use JDBC
-import gui.Main;
-
-import java.sql.*;
-// for reading from the command line
-import java.io.*;
-
-// for the login window
-import javax.swing.*;
-
-import java.awt.*;
-import java.awt.event.*;
-
-
-/*
- * This class implements a graphical login window and a simple text
- * interface for interacting with the branch table 
- */ 
-public class branch implements ActionListener
-{
-    // command line reader 
-    private BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
-
-    private Connection con;
-
-    // user is allowed 3 login attempts
-    private int loginAttempts = 0;
-
-    // components of the login window
-    private JTextField usernameField;
-    private JPasswordField passwordField;
-    private JFrame mainFrame;
-
-
-    /*
-     * constructs login window and loads JDBC driver
-     */ 
-    public branch()
-    {
-      mainFrame = new JFrame("User Login");
-
-      JLabel usernameLabel = new JLabel("Enter username: ");
-      JLabel passwordLabel = new JLabel("Enter password: ");
-
-      usernameField = new JTextField(10);
-      passwordField = new JPasswordField(10);
-      passwordField.setEchoChar('*');
-
-      JButton loginButton = new JButton("Log In");
-
-      JPanel contentPane = new JPanel();
-      mainFrame.setContentPane(contentPane);
-
-
-      // layout components using the GridBag layout manager
-
-      GridBagLayout gb = new GridBagLayout();
-      GridBagConstraints c = new GridBagConstraints();
-
-      contentPane.setLayout(gb);
-      contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
-
-      // place the username label 
-      c.gridwidth = GridBagConstraints.RELATIVE;
-      c.insets = new Insets(10, 10, 5, 0);
-      gb.setConstraints(usernameLabel, c);
-      contentPane.add(usernameLabel);
-
-      // place the text field for the username 
-      c.gridwidth = GridBagConstraints.REMAINDER;
-      c.insets = new Insets(10, 0, 5, 10);
-      gb.setConstraints(usernameField, c);
-      contentPane.add(usernameField);
-
-      // place password label
-      c.gridwidth = GridBagConstraints.RELATIVE;
-      c.insets = new Insets(0, 10, 10, 0);
-      gb.setConstraints(passwordLabel, c);
-      contentPane.add(passwordLabel);
-
-      // place the password field 
-      c.gridwidth = GridBagConstraints.REMAINDER;
-      c.insets = new Insets(0, 0, 10, 10);
-      gb.setConstraints(passwordField, c);
-      contentPane.add(passwordField);
-
-      // place the login button
-      c.gridwidth = GridBagConstraints.REMAINDER;
-      c.insets = new Insets(5, 10, 10, 10);
-      c.anchor = GridBagConstraints.CENTER;
-      gb.setConstraints(loginButton, c);
-      contentPane.add(loginButton);
-
-      // register password field and OK button with action event handler
-      passwordField.addActionListener(this);
-      loginButton.addActionListener(this);
-
-      // anonymous inner class for closing the window
-      mainFrame.addWindowListener(new WindowAdapter() 
-      {
-	public void windowClosing(WindowEvent e) 
-	{ 
-	  System.exit(0); 
-	}
-      });
-
-      // size the window to obtain a best fit for the components
-      mainFrame.pack();
-
-      // center the frame
-      Dimension d = mainFrame.getToolkit().getScreenSize();
-      Rectangle r = mainFrame.getBounds();
-      mainFrame.setLocation( (d.width - r.width)/2, (d.height - r.height)/2 );
-
-      // make the window visible
-      mainFrame.setVisible(true);
-
-      // place the cursor in the text field for the username
-      usernameField.requestFocus();
-
-      try 
-      {
-	// Load the Oracle JDBC driver
-    	  System.out.println(username);
-    	  System.out.println(password);
-
-	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
-      }
-      catch (SQLException ex)
-      {
-	System.out.println("Message: " + ex.getMessage());
-	System.exit(-1);
-      }
-    }
-
-
-    /*
-     * connects to Oracle database named ug using user supplied username and password
-     */ 
-    private boolean connect(String username, String password)
-    {
-      String connectURL = "jdbc:oracle:thin:@dbhost.ugrad.cs.ubc.ca:1522:ug"; 
-
-      try 
-      {
-	con = DriverManager.getConnection(connectURL,username,password);
-
-	System.out.println("\nConnected to Oracle!");
-	return true;
-      }
-      catch (SQLException ex)
-      {
-	System.out.println("Message: " + ex.getMessage());
-	return false;
-      }
-    }
-
-
-    /*
-     * event handler for login window
-     */ 
-    public void actionPerformed(ActionEvent e) 
-    {
-	if ( connect(usernameField.getText(), String.valueOf(passwordField.getPassword())) )
-	{
-	  // if the username and password are valid, 
-	  // remove the login window and display a text menu 
-	  mainFrame.dispose();
-          showMenu();     
-	}
-	else
-	{
-	  loginAttempts++;
-	  
-	  if (loginAttempts >= 3)
-	  {
-	      mainFrame.dispose();
-	      System.exit(-1);
-	  }
-	  else
-	  {
-	      // clear the password
-	      passwordField.setText("");
-	  }
-	}             
-                    
-    }
-
-
-    /*
-     * displays simple text interface
-     */ 
-    private void showMenu()
-    {
-	int choice;
-	boolean quit;
-
-	quit = false;
-	
-	try 
-	{
-	    // disable auto commit mode
-	    con.setAutoCommit(false);
-
-	    while (!quit)
-	    {
-		System.out.print("\n\nPlease choose one of the following: \n");
-		System.out.print("1.  Insert branch\n");
-		System.out.print("2.  Delete branch\n");
-		System.out.print("3.  Update branch\n");
-		System.out.print("4.  Show branch\n");
-		System.out.print("5.  Quit\n>> ");
-
-		choice = Integer.parseInt(in.readLine());
-		
-		System.out.println(" ");
-
-		switch(choice)
-		{
-		   case 1:  insertBranch(); break;
-		   case 2:  deleteBranch(); break;
-		   case 3:  updateBranch(); break;
-		   case 4:  showBranch(); break;
-		   case 5:  quit = true;
-		}
-	    }
-
-	    con.close();
-            in.close();
-	    System.out.println("\nGood Bye!\n\n");
-	    System.exit(0);
-	}
-	catch (IOException e)
-	{
-	    System.out.println("IOException!");
-
-	    try
-	    {
-		con.close();
-		System.exit(-1);
-	    }
-	    catch (SQLException ex)
-	    {
-		 System.out.println("Message: " + ex.getMessage());
-	    }
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-	}
-    }
-
-
-    /*
-     * inserts a branch
-     */ 
-    private void insertBranch()
-    {
-	int                bid;
-	String             bname;
-	String             baddr;
-	String             bcity;
-	int                bphone;
-	PreparedStatement  ps;
-	  
-	try
-	{
-	  ps = con.prepareStatement("INSERT INTO branch VALUES (?,?,?,?,?)");
-	
-	  System.out.print("\nBranch ID: ");
-	  bid = Integer.parseInt(in.readLine());
-	  ps.setInt(1, bid);
-
-	  System.out.print("\nBranch Name: ");
-	  bname = in.readLine();
-	  ps.setString(2, bname);
-
-	  System.out.print("\nBranch Address: ");
-	  baddr = in.readLine();
-	  
-	  if (baddr.length() == 0)
-          {
-	      ps.setString(3, null);
-	  }
-	  else
-	  {
-	      ps.setString(3, baddr);
-	  }
-	 
-	  System.out.print("\nBranch City: ");
-	  bcity = in.readLine();
-	  ps.setString(4, bcity);
-
-	  System.out.print("\nBranch Phone: ");
-	  String phoneTemp = in.readLine();
-	  if (phoneTemp.length() == 0)
-	  {
-	      ps.setNull(5, java.sql.Types.INTEGER);
-	  }
-	  else
-	  {
-	      bphone = Integer.parseInt(phoneTemp);
-	      ps.setInt(5, bphone);
-	  }
-
-	  ps.executeUpdate();
-
-	  // commit work 
-	  con.commit();
-
-	  ps.close();
-	}
-	catch (IOException e)
-	{
-	    System.out.println("IOException!");
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-	    try 
-	    {
-		// undo the insert
-		con.rollback();	
-	    }
-	    catch (SQLException ex2)
-	    {
-		System.out.println("Message: " + ex2.getMessage());
-		System.exit(-1);
-	    }
-	}
-    }
-
-
-    /*
-     * deletes a branch
-     */ 
-    private void deleteBranch()
-    {
-	int                bid;
-	PreparedStatement  ps;
-	  
-	try
-	{
-	  ps = con.prepareStatement("DELETE FROM branch WHERE branch_id = ?");
-	
-	  System.out.print("\nBranch ID: ");
-	  bid = Integer.parseInt(in.readLine());
-	  ps.setInt(1, bid);
-
-	  int rowCount = ps.executeUpdate();
-
-	  if (rowCount == 0)
-	  {
-	      System.out.println("\nBranch " + bid + " does not exist!");
-	  }
-
-	  con.commit();
-
-	  ps.close();
-	}
-	catch (IOException e)
-	{
-	    System.out.println("IOException!");
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-
-            try 
-	    {
-		con.rollback();	
-	    }
-	    catch (SQLException ex2)
-	    {
-		System.out.println("Message: " + ex2.getMessage());
-		System.exit(-1);
-	    }
-	}
-    }
-    
-
-    /*
-     * updates the name of a branch
-     */ 
-    private void updateBranch()
-    {
-	int                bid;
-	String             bname;
-	PreparedStatement  ps;
-	  
-	try
-	{
-	  ps = con.prepareStatement("UPDATE branch SET branch_name = ? WHERE branch_id = ?");
-	
-	  System.out.print("\nBranch ID: ");
-	  bid = Integer.parseInt(in.readLine());
-	  ps.setInt(2, bid);
-
-	  System.out.print("\nBranch Name: ");
-	  bname = in.readLine();
-	  ps.setString(1, bname);
-
-	  int rowCount = ps.executeUpdate();
-	  if (rowCount == 0)
-	  {
-	      System.out.println("\nBranch " + bid + " does not exist!");
-	  }
-
-	  con.commit();
-
-	  ps.close();
-	}
-	catch (IOException e)
-	{
-	    System.out.println("IOException!");
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-	    
-	    try 
-	    {
-		con.rollback();	
-	    }
-	    catch (SQLException ex2)
-	    {
-		System.out.println("Message: " + ex2.getMessage());
-		System.exit(-1);
-	    }
-	}	
-    }
-
-    
-    /*
-     * display information about branches
-     */ 
-    private void showBranch()
-    {
-	String     bid;
-	String     bname;
-	String     baddr;
-	String     bcity;
-	String     bphone;
-	Statement  stmt;
-	ResultSet  rs;
-	   
-	try
-	{
-	  stmt = con.createStatement();
-
-	  rs = stmt.executeQuery("SELECT * FROM branch");
-
-	  // get info on ResultSet
-	  ResultSetMetaData rsmd = rs.getMetaData();
-
-	  // get number of columns
-	  int numCols = rsmd.getColumnCount();
-
-	  System.out.println(" ");
-	  
-	  // display column names;
-	  for (int i = 0; i < numCols; i++)
-	  {
-	      // get column name and print it
-
-	      System.out.printf("%-15s", rsmd.getColumnName(i+1));    
-	  }
-
-	  System.out.println(" ");
-
-	  while(rs.next())
-	  {
-	      // for display purposes get everything from Oracle 
-	      // as a string
-
-	      // simplified output formatting; truncation may occur
-
-	      bid = rs.getString("branch_id");
-	      System.out.printf("%-10.10s", bid);
-
-	      bname = rs.getString("branch_name");
-	      System.out.printf("%-20.20s", bname);
-
-	      baddr = rs.getString("branch_addr");
-	      if (rs.wasNull())
-	      {
-	    	  System.out.printf("%-20.20s", " ");
-              }
-	      else
-	      {
-	    	  System.out.printf("%-20.20s", baddr);
-	      }
-
-	      bcity = rs.getString("branch_city");
-	      System.out.printf("%-15.15s", bcity);
-
-	      bphone = rs.getString("branch_phone");
-	      if (rs.wasNull())
-	      {
-	    	  System.out.printf("%-15.15s\n", " ");
-              }
-	      else
-	      {
-	    	  System.out.printf("%-15.15s\n", bphone);
-	      }      
-	  }
- 
-	  // close the statement; 
-	  // the ResultSet will also be closed
-	  stmt.close();
-	}
-	catch (SQLException ex)
-	{
-	    System.out.println("Message: " + ex.getMessage());
-	}	
-    }
-    
- 
-    public static void main(String args[])
-    {
-      branch b = new branch();
-    }
-}
-
-private static void checkoutBorrower() {
-	int                bid;
-	int 			   borid;
-	int   			   callNumber;
-	int 			   copyNo;
-	int 			   outDate;
-	int 			   inDate;
-
-	PreparedStatement  ps;
-
-	try {
-		ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
-
-		System.out.print("\n Borrower ID: ");
-		bid = Integer.parseInt(Main.in.readLine());
-		ps.setInt(1, bid);
-
-		System.out.print("\n Borrower password: ");
-		password = Main.in.readLine();
-		ps.setString(2, password);
-
-		System.out.print("\n Borrower name: ");
-		name = Main.in.readLine();
-		ps.setString(3, name);
-
-		System.out.print("\n Borrower address: ");
-		address = Main.in.readLine();
-		ps.setString(4, address);
-
-		System.out.print("\n Borrower phone number: ");
-		phone = Main.in.readLine();
-		ps.setString(5,  phone);
-
-		System.out.print("\n Borrower email address: ");
-		emailAddress = Main.in.readLine();
-		ps.setString(6, emailAddress);
-
-		System.out.print("\n Borrower SIN or student number: ");
-		sinOrStNo = Integer.parseInt(Main.in.readLine());
-		ps.setInt(7, sinOrStNo);
-
-		System.out.print("\n Borrower expiry date: ");  // Clerk should set to 2 years from today
-		expiryDate = Date.valueOf(Main.in.readLine());  // Must be in format yyyy-mm-dd
-		ps.setDate(8, expiryDate);
-
-		System.out.print("\n Borrower type: ");
-		type = Main.in.readLine();
-		ps.setString(9, type);
-
-		ps.executeUpdate();
-		// commit work 
-		Main.con.commit();
-		ps.close();
-	}
-
-	catch (IOException e) {
-		System.out.println("IOException!");
-	}
-	catch (SQLException ex) {
-		System.out.println("Message: " + ex.getMessage());
-		try 
-		{
-			// undo the insert
-			Main.con.rollback();	
-		}
-		catch (SQLException ex2)
-		{
-			System.out.println("Message: " + ex2.getMessage());
-			System.exit(-1);
-		}
-	}
-}
\ No newline at end of file
diff --git a/Branch/classes12.zip b/Branch/classes12.zip
deleted file mode 100644
index 860bb5a..0000000
Binary files a/Branch/classes12.zip and /dev/null differ
diff --git a/Branch/ojdbc6.jar b/Branch/ojdbc6.jar
deleted file mode 100644
index b663cd2..0000000
Binary files a/Branch/ojdbc6.jar and /dev/null differ
diff --git a/table.sql b/table.sql
deleted file mode 100644
index ecf5fe2..0000000
--- a/table.sql
+++ /dev/null
@@ -1,209 +0,0 @@
-drop table Fine;
-drop table Borrowing;
-drop table HoldRequest;
-drop table HasSubject;
-drop table HasAuthor;
-drop table BookCopy;
-drop table Book;
-drop table Borrower;
-drop table BorrowerType;
-
-
-create sequence bid_c
-	start with 1000 
-	increment by 1;
-	
-create sequence callNumber_c
-	start with 1000
-	increment by 1;
-	
-create sequence hid_c
-	start with 1000
-	increment by 1;
-	
-create sequence borid_c
-	start with 1000
-	increment by 1;
-	
-create sequence fid_c
-	start with 1000
-	increment by 1;
-
-
-create table BorrowerType
-	(type varchar(10) not null PRIMARY KEY,
-	bookTimeLimit integer null);
-
-create table Borrower
-	(bid integer not null PRIMARY KEY,
-	password varchar(20) null,
-	name varchar(20) null,
-	address varchar(50) null,
-	phone char(10) null,
-	emailAddress varchar(50) null,
-	sinOrStNo varchar(10) not null,
-	expiryDate date null,
-	type varchar(10) not null,
-	FOREIGN KEY (type) references BorrowerType);
-
-create table Book
-	(callNumber integer not null PRIMARY KEY,
-	isbn char(9) not null,
-	title varchar(50) null,
-	mainAuthor varchar(20) null,
-	publisher varchar(20) null,
-	year integer null);
-
-create table BookCopy 
-	(callNumber integer not null,
-	copyNo integer not null,
-	status varchar(10) null,
-	PRIMARY KEY (callNumber, copyNo),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HasAuthor
-	(callNumber integer not null,
-	name varchar(20) not null,
-	PRIMARY KEY (callNumber, name),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HasSubject
-	(callNumber integer not null,
-	subject varchar(50) not null,
-	PRIMARY KEY (callNumber, subject),
-	FOREIGN KEY (callNumber) references Book);
-
-create table HoldRequest
-	(hid integer not null PRIMARY KEY,
-	bid integer not null,
-	callNumber integer not null,
-	issuedDate date null,
-	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber) references Book);
-
-create table Borrowing
-	(borid integer not null PRIMARY KEY,
-	bid integer not null,
-	callNumber integer not null,
-	copyNo integer not null,
-	outDate date null,
-	inDate date null,
-	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber, copyNo) references BookCopy);
-
-create table Fine
-	(fid integer not null PRIMARY KEY,
-	amount number null,
-	issuedDate date null,
-	paidDate date null,
-	borid integer not null,
-	FOREIGN KEY (borid) references Borrowing);
-
-
-insert into BorrowerType values
-('student', 2);
-insert into BorrowerType values
-('faculty', 12);
-insert into BorrowerType values
-('staff', 6);
-insert into BorrowerType values
-('general', 2);
-
-
-insert into Borrower values
-(12345678, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '12345678', '2015-09-09', 'faculty');
-insert into Borrower values
-(56781234, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '12345678', '2014-09-09', 'staff');
-insert into Borrower values
-(87654321, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '12345678', '2015-12-12', 'general');
-insert into Borrower values
-(11111111, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '12345678', '2015-09-09', 'staff');
-insert into Borrower values
-(22222222, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '12345678', '2015-09-09', 'student');
-
-
-insert into Book values
-(100, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
-insert into Book values
-(200, '02000000', 'Hi Database', 'Laks', 'SFU','2000');
-insert into Book values
-(300, '03000000', 'Advanced Data Structures and Algorithms', 'Michelle Ng', 'UBC','2008');
-insert into Book values
-(400, '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
-insert into Book values
-(500, '05000000', 'Hi C++', 'Laks', 'UBC','2014');
-insert into Book values
-(600, '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
-insert into Book values
-(999, '123456789', 'ABCs', 'Sammy', 'Foo Readers', 2000);
-
-
-insert into BookCopy values
-(100, 1, 'out');
-insert into BookCopy values
-(200, 1, 'on hold');
-insert into BookCopy values
-(300, 1, 'out');
-insert into BookCopy values
-(300, 2, 'on hold');
-insert into BookCopy values
-(400, 1, 'in');
-insert into BookCopy values
-(500, 1, 'in');
-insert into BookCopy values
-(500, 1, 'in');
-insert into BookCopy values
-(600, 1, 'out');
-insert into BookCopy values
-(999, 1, 'in');
-insert into BookCopy values
-(999, 2, 'out');
-insert into BookCopy values
-(999, 3, 'on hold');
-
-
-insert into HasAuthor values
-(200, 'Gregor');
-insert into HasAuthor values
-(200, 'Mike');
-insert into HasAuthor values
-(500, 'Patrice');
-insert into HasAuthor values
-(999, 'Bobby');
-
-
-insert into HasSubject values
-(100, 'java');
-insert into HasSubject values
-(100, 'computer');
-insert into HasSubject values
-(200, 'database');
-insert into HasSubject values
-(200, 'computer');
-insert into HasSubject values
-(300, 'computer');
-insert into HasSubject values
-(400, 'computer');
-insert into HasSubject values
-(500, 'c++');
-insert into HasSubject values
-(500, 'computer');
-insert into HasSubject values
-(600, 'computer');
-insert into HasSubject values
-(999, 'kindergarten');
-insert into HasSubject values
-(999, 'letters');
-
-
-insert into Borrowing values
-(11111, 12345678, 1000, 2,'2014-03-29',null);
-insert into Borrowing values
-(22222, 12345678, 1000, 1,'2014-02-22','2014-03-29');
-insert into Borrowing values
-(33333, 12345678, 1000, 1,'2014-01-29','2014-01-31');
-insert into Borrowing values
-(44444, 12345678, 1000, 1,'2013-09-01','2013-10-10');
-
-insert into HoldRequest values
-(1111, 12345678, 1000, '2014-03-30');

commit b73435cf0245d4ec730bf51fc0b2bae6b6b5b7eb
Merge: 929ea30 ae89e8b
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 22:24:05 2014 -0700

    Merge branch 'fromRemote'

commit 7c7f2e84674315a20ff63dc82f48c499394c0b6d
Merge: b73435c e6b2b18
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 22:34:37 2014 -0700

     merge conflicts resolved

commit 332b5bed2b932b9ee442f68a0fe2818923917cb7
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sat Mar 29 23:11:04 2014 -0700

    modified overdue(Date), modified table.sql

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 2de94af..b3eb812 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -447,8 +447,14 @@ public class ClerkUser {
 	}
 	
 	private static boolean overdue(Date dueDate){
+		String dueDateString = dueDate.toString();
+		System.out.println("This is the outDate in string: " + dueDateString);
+		String[] tokens = dueDateString.split("-");
+		
+		GregorianCalendar gregCalendar2 = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
+	
 		GregorianCalendar gregCalendar = new GregorianCalendar();
-		if(gregCalendar.after(dueDate))
+		if(gregCalendar.after(gregCalendar2))
 			return true;
 		else
 			return false;
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index ad05ae2..43fbe1c 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -8,6 +8,12 @@ drop table Book;
 drop table Borrower;
 drop table BorrowerType;
 
+drop sequence bid_c;
+drop sequence callNumber_c;
+drop sequence hid_c;
+drop sequence borid_c;
+drop sequence fid_c;
+
 
 create sequence bid_c
 	start with 1000 
@@ -111,15 +117,15 @@ insert into BorrowerType values
 
 
 insert into Borrower values
-(111, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '11111111', {d '2015-09-09'}, 'faculty');
+(111, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '11111111', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'student');
 insert into Borrower values
-(222, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '22222222', {d '2014-09-09'}, 'staff');
+(222, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '22222222', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'staff');
 insert into Borrower values
-(333, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '33333333', {d '2015-12-12'}, 'general');
+(333, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '33333333', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'general');
 insert into Borrower values
-(444, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '44444444', {d '2015-09-09'}, 'staff');
+(444, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '44444444', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'staff');
 insert into Borrower values
-(555, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '55555555', {d '2015-09-09'}, 'student');
+(555, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '55555555', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'student');
 
 
 insert into Book values
@@ -151,7 +157,7 @@ insert into BookCopy values
 insert into BookCopy values
 (500, 1, 'in');
 insert into BookCopy values
-(500, 1, 'in');
+(500, 2, 'in');
 insert into BookCopy values
 (600, 1, 'out');
 insert into BookCopy values
@@ -197,13 +203,13 @@ insert into HasSubject values
 
 
 insert into Borrowing values
-(100, 111, 100, 1,'2014-03-29',null);
+(100, 111, 100, 1, TO_DATE('2013-02-20', 'YYYY-MM-DD'), null);
 insert into Borrowing values
-(200, 222, 300, 1,'2014-02-22','2014-03-29');
+(200, 222, 300, 1, TO_DATE('2014-02-22', 'YYYY-MM-DD'), TO_DATE('2014-03-29', 'YYYY-MM-DD'));
 insert into Borrowing values
-(300, 333, 600, 1,'2014-01-29','2014-01-31');
+(300, 333, 600, 1, TO_DATE('2014-01-29', 'YYYY-MM-DD'), TO_DATE('2014-01-31', 'YYYY-MM-DD'));
 insert into Borrowing values
-(400, 444, 999, 2,'2013-09-01','2013-10-10');
+(400, 444, 999, 2, TO_DATE('2013-09-01', 'YYYY-MM-DD'), TO_DATE('2013-10-10', 'YYYY-MM-DD'));
 
 insert into HoldRequest values
-(999, 111, 300, '2014-03-30');
\ No newline at end of file
+(999, 111, 300, TO_DATE('2014-03-30', 'YYYY-MM-DD'));
\ No newline at end of file

commit 6d911827277a848a581e7d587dc0780ea5959fc0
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 23:12:14 2014 -0700

    merge conflict

diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index ad05ae2..0086a51 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -151,8 +151,6 @@ insert into BookCopy values
 insert into BookCopy values
 (500, 1, 'in');
 insert into BookCopy values
-(500, 1, 'in');
-insert into BookCopy values
 (600, 1, 'out');
 insert into BookCopy values
 (999, 1, 'in');

commit def7297f3d0c9fec3d078e37e3e309ea527fccb7
Merge: 6d91182 332b5be
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sat Mar 29 23:13:37 2014 -0700

    merge conflict resolved

commit bfee5c35bd0f0ad21c868e3d59f46a25d2c8595d
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sat Mar 29 23:40:09 2014 -0700

    checkoutitem finished

diff --git a/.metadata/.log b/.metadata/.log
index a5d6c8e..d17a9c2 100644
--- a/.metadata/.log
+++ b/.metadata/.log
@@ -72,3 +72,213 @@ java.lang.StringIndexOutOfBoundsException: String index out of range: 0
 	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.notifyIdle(IndexManager.java:618)
 	at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:388)
 	at java.lang.Thread.run(Thread.java:724)
+!SESSION 2014-03-29 22:59:51.123 -----------------------------------------------
+eclipse.buildId=4.3.0.I20130605-2000
+java.version=1.7.0_40
+java.vendor=Oracle Corporation
+BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
+Framework arguments:  -product org.eclipse.epp.package.standard.product -keyring /Users/Enoch/.eclipse_keyring -showlocation
+Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.standard.product -keyring /Users/Enoch/.eclipse_keyring -showlocation
+
+!ENTRY org.eclipse.core.resources 2 10035 2014-03-29 22:59:58.278
+!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.
+
+!ENTRY org.eclipse.osgi 4 0 2014-03-29 22:59:58.455
+!MESSAGE An error occurred while automatically activating bundle org.eclipse.core.resources (44).
+!STACK 0
+org.osgi.framework.BundleException: Exception in org.eclipse.core.resources.ResourcesPlugin.start() of bundle org.eclipse.core.resources.
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:734)
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:683)
+	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:381)
+	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:300)
+	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:478)
+	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:263)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:109)
+	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:469)
+	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:395)
+	at org.eclipse.osgi.internal.loader.SingleSourcePackage.loadClass(SingleSourcePackage.java:35)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:461)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
+	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
+	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
+	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:125)
+	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
+	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
+	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
+	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
+	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
+	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
+	at java.lang.reflect.Method.invoke(Method.java:606)
+	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
+	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
+	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
+Caused by: org.eclipse.core.internal.dtree.ObjectNotFoundException: Tree element '/Project Part III/table.sql' not found.
+	at org.eclipse.core.internal.dtree.AbstractDataTree.handleNotFound(AbstractDataTree.java:257)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.getData(DeltaDataTree.java:585)
+	at org.eclipse.core.internal.dtree.DataDeltaNode.asBackwardDelta(DataDeltaNode.java:50)
+	at org.eclipse.core.internal.dtree.NoDataDeltaNode.asBackwardDelta(NoDataDeltaNode.java:59)
+	at org.eclipse.core.internal.dtree.DataDeltaNode.asBackwardDelta(DataDeltaNode.java:47)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.asBackwardDelta(DeltaDataTree.java:88)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:816)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:792)
+	at org.eclipse.core.internal.watson.ElementTree.immutable(ElementTree.java:518)
+	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:710)
+	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1530)
+	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2503)
+	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
+	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:439)
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:711)
+	at java.security.AccessController.doPrivileged(Native Method)
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:702)
+	... 28 more
+Root exception:
+org.eclipse.core.internal.dtree.ObjectNotFoundException: Tree element '/Project Part III/table.sql' not found.
+	at org.eclipse.core.internal.dtree.AbstractDataTree.handleNotFound(AbstractDataTree.java:257)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.getData(DeltaDataTree.java:585)
+	at org.eclipse.core.internal.dtree.DataDeltaNode.asBackwardDelta(DataDeltaNode.java:50)
+	at org.eclipse.core.internal.dtree.NoDataDeltaNode.asBackwardDelta(NoDataDeltaNode.java:59)
+	at org.eclipse.core.internal.dtree.DataDeltaNode.asBackwardDelta(DataDeltaNode.java:47)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.asBackwardDelta(DeltaDataTree.java:88)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:816)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:792)
+	at org.eclipse.core.internal.watson.ElementTree.immutable(ElementTree.java:518)
+	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:710)
+	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1530)
+	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2503)
+	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
+	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:439)
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:711)
+	at java.security.AccessController.doPrivileged(Native Method)
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:702)
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:683)
+	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:381)
+	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:300)
+	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:478)
+	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:263)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:109)
+	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:469)
+	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:395)
+	at org.eclipse.osgi.internal.loader.SingleSourcePackage.loadClass(SingleSourcePackage.java:35)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:461)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
+	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
+	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
+	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:125)
+	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
+	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
+	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
+	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
+	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
+	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
+	at java.lang.reflect.Method.invoke(Method.java:606)
+	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
+	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
+	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
+
+!ENTRY org.eclipse.osgi 4 0 2014-03-29 22:59:58.492
+!MESSAGE Application error
+!STACK 1
+java.lang.NoClassDefFoundError: org/eclipse/core/resources/IContainer
+	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:125)
+	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
+	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
+	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
+	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
+	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
+	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
+	at java.lang.reflect.Method.invoke(Method.java:606)
+	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
+	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
+	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
+Caused by: org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter$TerminatingClassNotFoundException: An error occurred while automatically activating bundle org.eclipse.core.resources (44).
+	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:124)
+	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:469)
+	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:395)
+	at org.eclipse.osgi.internal.loader.SingleSourcePackage.loadClass(SingleSourcePackage.java:35)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:461)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
+	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
+	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
+	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
+	... 13 more
+Caused by: org.osgi.framework.BundleException: Exception in org.eclipse.core.resources.ResourcesPlugin.start() of bundle org.eclipse.core.resources.
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:734)
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:683)
+	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:381)
+	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:300)
+	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:478)
+	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:263)
+	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:109)
+	... 22 more
+Caused by: org.eclipse.core.internal.dtree.ObjectNotFoundException: Tree element '/Project Part III/table.sql' not found.
+	at org.eclipse.core.internal.dtree.AbstractDataTree.handleNotFound(AbstractDataTree.java:257)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.getData(DeltaDataTree.java:585)
+	at org.eclipse.core.internal.dtree.DataDeltaNode.asBackwardDelta(DataDeltaNode.java:50)
+	at org.eclipse.core.internal.dtree.NoDataDeltaNode.asBackwardDelta(NoDataDeltaNode.java:59)
+	at org.eclipse.core.internal.dtree.DataDeltaNode.asBackwardDelta(DataDeltaNode.java:47)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.asBackwardDelta(DeltaDataTree.java:88)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:816)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:815)
+	at org.eclipse.core.internal.dtree.DeltaDataTree.reroot(DeltaDataTree.java:792)
+	at org.eclipse.core.internal.watson.ElementTree.immutable(ElementTree.java:518)
+	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:710)
+	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1530)
+	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2503)
+	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2252)
+	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:439)
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:711)
+	at java.security.AccessController.doPrivileged(Native Method)
+	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:702)
+	... 28 more
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 2de94af..33a2a64 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -257,26 +257,26 @@ public class ClerkUser {
 		PreparedStatement  ps;
 
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (borid_c.nextval,?,?,?,?,?)");
+
 
-			System.out.println("Borrowing ID for " + callNumber + ":");
-			borid = Integer.parseInt(Main.in.readLine());
-			ps.setInt(1, borid);
 
 			System.out.println("Copy No: ");
 			copyNo = Integer.parseInt(Main.in.readLine());
-			ps.setInt(4, copyNo);
+			ps.setInt(3, copyNo);
 
 			System.out.println("Out Date(dd/mm/yy): ");
 			outDate = stringToDate(Main.in.readLine());
-			ps.setDate(5, outDate);
+			ps.setDate(4, outDate);
 			
 			//!!
-			ps.setInt(2, bid);
-			ps.setInt(3, callNumber);
-			ps.setDate(6, null);
+			ps.setInt(1, bid);
+			ps.setInt(2, callNumber);
+			ps.setDate(5, null);
 
 			ps.executeUpdate();
+			updateBookCopyStatus(callNumber, copyNo);
+
 			// commit work 
 			Main.con.commit();
 			ps.close();
@@ -304,6 +304,43 @@ public class ClerkUser {
 			}
 		}
 	}
+
+    private static void updateBookCopyStatus(int callNumber, int copyNo)
+    {
+
+	String             status = "out";
+	PreparedStatement  ps;
+	  
+	try
+	{
+	  ps = Main.con.prepareStatement("UPDATE bookCopy SET status = 'out' WHERE callNumber = ? AND copyNo = ?");
+	
+
+	  //ps.setString(1, status);
+	  ps.setInt(1, callNumber);
+	  ps.setInt(2, copyNo);
+	  ps.execute();
+
+	  Main.con.commit();
+
+	  ps.close();
+	}
+	catch (SQLException ex)
+	{
+	    System.out.println("Message: " + ex.getMessage());
+	    
+	    try 
+	    {
+		Main.con.rollback();	
+	    }
+	    catch (SQLException ex2)
+	    {
+		System.out.println("Message: " + ex2.getMessage());
+		System.exit(-1);
+	    }
+	}	
+    }
+
 	
 	static Date stringToDate(String date) {
 		try {SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
@@ -352,7 +389,6 @@ public class ClerkUser {
 		}
 		
 		String outDateS = outDate.toString();
-		System.out.println("This is the outDate in string: " + outDateS);
 		String[] tokens = outDateS.split("-");
 		
 		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));

commit 55c0b9ac3039c4737a98f17297bca44d925f3fbf
Merge: bfee5c3 332b5be
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sat Mar 29 23:40:25 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam

commit 897d69088ccdef9aa86864a5eec345304cdb50fb
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sun Mar 30 00:24:37 2014 -0700

    I am not sure what I changed

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index b3eb812..5f30eac 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -374,7 +374,7 @@ public class ClerkUser {
 			statement = Main.con.createStatement();
 
 			System.out.println("List of items overdue and the borrowers who have checked them out:");
-			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate, D.bookTimeLimit "
+			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate, "
 							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
 							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
 							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
@@ -388,7 +388,7 @@ public class ClerkUser {
 			System.out.println(" ");
 
 			// display column names;
-			for (int i = 0; i < numCols-2; i++) {
+			for (int i = 0; i < numCols-1; i++) {
 				// get column name and print it
 				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
 			}
@@ -399,9 +399,6 @@ public class ClerkUser {
 			while (rs.next()) {
 				Integer bid = rs.getInt("bid");
 				Date outDate = rs.getDate("outDate");
-				Integer bookTimeLimit = rs.getInt("bookTimeLimit");
-				// pseudo code: Date dueDate = outDate + bookTimeLimit;
-				// System.out.printf("%-20.20s\n", dueDate);
 				if (overdue(getDueDate(bid, outDate))) {
 					System.out.printf("%-9.9s", bid);
 					String name = rs.getString("name");
@@ -438,6 +435,8 @@ public class ClerkUser {
 				}
 			}
 
+			//TODO: Should be able to send email to each user or all the user.
+			
 			// close the statement;
 			// the ResultSet will also be closed
 			statement.close();
@@ -446,7 +445,7 @@ public class ClerkUser {
 		}
 	}
 	
-	private static boolean overdue(Date dueDate){
+	public static boolean overdue(Date dueDate){
 		String dueDateString = dueDate.toString();
 		System.out.println("This is the outDate in string: " + dueDateString);
 		String[] tokens = dueDateString.split("-");
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index af7721d..16ae61e 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -335,7 +335,7 @@ public class LibrarianUser {
 			// when borrowing's inDate is
 			// null.
 			System.out.println("List of items you currently borrowed:");
-			rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, D.bookTimeLimit "
+			rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, B.bid "
 							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
 							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
 							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "
@@ -386,12 +386,14 @@ public class LibrarianUser {
 					System.out.printf("%-20.20s", outDate);
 				}
 				
-				Integer bookTimeLimit = rs.getInt("bookTimeLimit");
-				//pseudo code: Date dueDate = outDate + bookTimeLimit;
-				//System.out.printf("%-20.20s\n", dueDate);		
+				Integer bid = rs.getInt("bid");
+				Date duedate = ClerkUser.getDueDate(bid,outDate);			
+				System.out.printf("%-20.20s\n", duedate);
+				
+				if(ClerkUser.overdue(duedate)){
+					//TODO: let it flags since
+				}
 				
-				//TODO: check if the item is overdue using gregorianCalendar(), and let it flags.
-
 				//TODO: If a subject is provided the report lists only books related to that subject, otherwise all the books that are out are listed by the report.
 				
 			}

commit e60c1af462c47f0e0075c0adf6a944801d8baf0c
Merge: 897d690 55c0b9a
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sun Mar 30 00:24:44 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam

commit 19a360e2fe7eb31720ee77c07e24b9c8ddd42d67
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 01:36:02 2014 -0700

    Finished holdrequest, withou clerk notification gui thingy

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 05fce50..2abab18 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -4,6 +4,8 @@ import gui.Main;
 
 import java.io.IOException;
 import java.sql.*;
+import java.text.ParseException;
+import java.util.GregorianCalendar;
 
 public class BorrowerUser {
 
@@ -22,7 +24,7 @@ public class BorrowerUser {
 				System.out.print("\n\nPlease choose one of the following: \n");
 				System.out.print("1.  Book search\n");
 				System.out.print("2.  Check account\n");
-				//System.out.print("3.  Place a hold request\n");
+				System.out.print("3.  Place a hold request\n");
 				//System.out.print("4.  Pay fines\n");
 				System.out.print("5.  Quit\n>>");
 
@@ -33,7 +35,7 @@ public class BorrowerUser {
 				switch(choice) {
 				case 1:  searchBook(); break;
 				case 2:  checkAccount(); break;
-				case 3:  ; break; // TODO requestHold()
+				case 3:  requestHold(); break;
 				case 4:  ; break; // TODO payFine()
 				case 5:  quit = true; 
 				}
@@ -586,5 +588,155 @@ public class BorrowerUser {
 			return null;
 		}
 	}
+	
+private static void requestHold() {
+		int					bid = 0;
+		int					callNumber = 0;
+		Statement			s;
+		Statement			s2;
+		
+		System.out.println("Borrower ID: ");
+		try {
+			bid = Integer.parseInt(Main.in.readLine());
+		} catch (NumberFormatException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
+		} catch (IOException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
+		}
+		System.out.println("Book call number: ");
+		try {
+			callNumber = Integer.parseInt(Main.in.readLine());
+		} catch (NumberFormatException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
+		} catch (IOException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
+		}
+		
+		
+		try 
+		{
+			s2 = Main.con.createStatement();
+			ResultSet rs2 = s2.executeQuery("SELECT copyNo  "
+										+ "FROM BookCopy  "
+										+ "WHERE callNumber = " + callNumber
+										+ "AND status = 'in'");
+
+			if (rs2.next()){
+				System.out.println("Book is available for borrowing");
+				return;
+			}
+			else {
+
+				s = Main.con.createStatement();
+				ResultSet rs = s.executeQuery("SELECT copyNo  "
+						+ "FROM BookCopy  "
+						+ "WHERE callNumber = " + callNumber
+						+ "AND status = 'out'");
+
+				if (rs.next()){
+				updateBookCopyStatus(callNumber, rs.getInt(1));
+				addHoldRequest(bid, callNumber);
+				System.out.println("Hold request successful! An email will be sent to you when the book is available.");
+				}
+			else {
+					System.out.println("No books available for hold");
+				}
+			
+			}
+		}
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+private static void updateBookCopyStatus(int callNumber, int copyNo)
+{
+
+	PreparedStatement  ps;
+
+	try
+	{
+		ps = Main.con.prepareStatement("UPDATE bookCopy SET status = 'on hold' WHERE callNumber = ? AND copyNo = ?");
+
+
+		ps.setInt(1, callNumber);
+		ps.setInt(2, copyNo);
+		ps.execute();
+
+		Main.con.commit();
+
+		ps.close();
+	}
+	catch (SQLException ex)
+	{
+		System.out.println("Message: " + ex.getMessage());
+
+		try 
+		{
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}	
+}
+
+private static void addHoldRequest(int bid, int callNumber) {
+
+
+	java.sql.Date 			issuedDate;
+	PreparedStatement  ps;
+
+	try {
+		ps = Main.con.prepareStatement("INSERT INTO holdRequest VALUES (hid_c.nextval,?,?,?)");
+
+		
+		ps.setInt(1, bid);
+		ps.setInt(2, callNumber);
+		GregorianCalendar gregCalendar = new GregorianCalendar();
+		issuedDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		ps.setDate(3, issuedDate);
+
+
+		ps.executeUpdate();
+
+		// commit work 
+		Main.con.commit();
+		ps.close();
+
+	}
+
+
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
 }
 

commit 4689a74a29f1795c0bae35ac9208afba3f2950e1
Merge: 19a360e e60c1af
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 01:36:16 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam

commit 950abb6dc01c264c06f55afc5fb9bdf451f18286
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sun Mar 30 02:19:33 2014 -0700

    reportCheckOutbook() implemented

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 05fce50..b82dbe3 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -423,9 +423,9 @@ public class BorrowerUser {
 
 				title = rs.getString("title");
 				if (rs.wasNull()) {
-					System.out.printf("%-50.50s", " ");
+					System.out.printf("%-25.25s", " ");
 				} else {
-					System.out.printf("%-50.50s", title);
+					System.out.printf("%-25.25s", title);
 				}
 
 				isbn = rs.getString("isbn");
@@ -520,9 +520,9 @@ public class BorrowerUser {
 				// simplified output formatting; truncation may occur
 				title = rs.getString("title");
 				if (rs.wasNull()) {
-					System.out.printf("%-50.50s", " ");
+					System.out.printf("%-25.25s", " ");
 				} else {
-					System.out.printf("%-50.50s", title);
+					System.out.printf("%-25.25s", title);
 				}
 				issuedDate = rs.getDate("issuedDate");
 				if (rs.wasNull()) {
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 77a3f25..16cf0c2 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -410,7 +410,7 @@ public class ClerkUser {
 			statement = Main.con.createStatement();
 
 			System.out.println("List of items overdue and the borrowers who have checked them out:");
-			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate, "
+			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate "
 							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
 							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
 							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
@@ -435,7 +435,8 @@ public class ClerkUser {
 			while (rs.next()) {
 				Integer bid = rs.getInt("bid");
 				Date outDate = rs.getDate("outDate");
-				if (overdue(getDueDate(bid, outDate))) {
+				Date duedate = getDueDate(bid, outDate);
+				if (overdue(duedate)) {
 					System.out.printf("%-9.9s", bid);
 					String name = rs.getString("name");
 					if(rs.wasNull())
@@ -468,6 +469,7 @@ public class ClerkUser {
 					} else {
 						System.out.printf("%-30.30s", title);
 					}
+					System.out.printf("%-20.20s", duedate);
 				}
 			}
 
@@ -483,7 +485,7 @@ public class ClerkUser {
 	
 	public static boolean overdue(Date dueDate){
 		String dueDateString = dueDate.toString();
-		System.out.println("This is the outDate in string: " + dueDateString);
+		//System.out.println("This is the outDate in string: " + dueDateString);
 		String[] tokens = dueDateString.split("-");
 		
 		GregorianCalendar gregCalendar2 = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 16ae61e..1f9aaa1 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -23,8 +23,8 @@ public class LibrarianUser {
 			while (!quit) {
 				System.out.print("\n\nPlease choose one of the following: \n");
 				System.out.print("1.  Add book\n");
-				System.out.println("2. Generate a report of all checked out books\n"); 
-//				System.out.println("3. Generate a report of the most popular items for a given year\n");
+				System.out.println("2.  Generate a report of all checked out books\n"); 
+//				System.out.println("3.  Generate a report of the most popular items for a given year\n");
 				System.out.print("4.  Quit\n>>");
 
 				choice = Integer.parseInt(Main.in.readLine());
@@ -326,20 +326,41 @@ public class LibrarianUser {
 	 * by the report.
 	 */
 	private static void reportCheckedOutBooks() {
-		Statement statement;
-		ResultSet rs;
+		String subject;
 		try {
-			statement = Main.con.createStatement();
-
+			Statement statement = Main.con.createStatement();
+			ResultSet rs;
+			System.out.println("Please put subject information (if you just press enter, it will print out everything): \n>> ");
+			subject = Main.in.readLine();
+			// check that this is a valid subject
+			if (!subject.trim().equals("")) {
+				rs = statement.executeQuery("SELECT * " + "FROM HasSubject "
+						+ "WHERE subject='" + subject+"'");
+				if (rs.next() == false) {
+					System.out
+							.println("I don't see such a thing in our database HasSubject table.");
+					statement.close();
+					return;
+				}
+			}
 			// query of callNumber, copyNo, title, outDate and bookTimeLimit
 			// when borrowing's inDate is
 			// null.
-			System.out.println("List of items you currently borrowed:");
-			rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, B.bid "
+			System.out.println("List of items that are out :");
+			
+			if(!subject.trim().equals(""))//subject is inputed
+				rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, B.bid "
+							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E, HasSubject F "
+							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid AND F.callNumber = A.callNumber "
+							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL AND F.subject='" + subject + "' "
+							+ "ORDER BY A.callNumber, C.copyNo, A.title ASC");
+			else//empty subject, all of the items will be selected
+				rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, B.bid "
 							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
 							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
 							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "
 							+ "ORDER BY A.callNumber, C.copyNo, A.title ASC");
+			
 			// get info on ResultSet
 			ResultSetMetaData rsmd = rs.getMetaData();
 
@@ -388,10 +409,11 @@ public class LibrarianUser {
 				
 				Integer bid = rs.getInt("bid");
 				Date duedate = ClerkUser.getDueDate(bid,outDate);			
-				System.out.printf("%-20.20s\n", duedate);
+				System.out.printf("%-20.20s", duedate);
 				
 				if(ClerkUser.overdue(duedate)){
-					//TODO: let it flags since
+					System.out.println("This item missed dueDate:" + duedate);
+					//TODO: let it flag.
 				}
 				
 				//TODO: If a subject is provided the report lists only books related to that subject, otherwise all the books that are out are listed by the report.
@@ -403,6 +425,15 @@ public class LibrarianUser {
 			statement.close();
 		} catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
+		} catch (IOException e) {
+			System.out.println("IOException!");
+			try {
+				Main.con.close();
+				System.exit(-1);
+			}
+			catch (SQLException ex) {
+				System.out.println("Message: " + ex.getMessage());
+			}
 		}
 	}
 }
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 7b58d02..ee84afd 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -149,18 +149,24 @@ insert into BookCopy values
 insert into BookCopy values
 (200, 1, 'on hold');
 insert into BookCopy values
+(200, 2, 'out');
+insert into BookCopy values
 (300, 1, 'out');
 insert into BookCopy values
 (300, 2, 'on hold');
 insert into BookCopy values
 (400, 1, 'in');
 insert into BookCopy values
+(400, 2, 'out');
+insert into BookCopy values
 (500, 1, 'in');
 insert into BookCopy values
 (500, 2, 'in');
 insert into BookCopy values
 (600, 1, 'out');
 insert into BookCopy values
+(600, 2, 'out');
+insert into BookCopy values
 (999, 1, 'in');
 insert into BookCopy values
 (999, 2, 'out');
@@ -203,7 +209,17 @@ insert into HasSubject values
 
 
 insert into Borrowing values
-(100, 111, 100, 1, TO_DATE('2013-02-20', 'YYYY-MM-DD'), null);
+(100, 333, 100, 1, TO_DATE('2013-02-20', 'YYYY-MM-DD'), null);
+insert into Borrowing values
+(500, 111, 200, 2, TO_DATE('2010-02-20', 'YYYY-MM-DD'), null);
+insert into Borrowing values
+(600, 111, 300, 1, TO_DATE('2009-02-20', 'YYYY-MM-DD'), null);
+insert into Borrowing values
+(700, 111, 400, 2, TO_DATE('2013-05-20', 'YYYY-MM-DD'), null);
+insert into Borrowing values
+(800, 222, 600, 2, TO_DATE('2012-02-20', 'YYYY-MM-DD'), null);
+insert into Borrowing values
+(900, 222, 999, 2, TO_DATE('2012-02-22', 'YYYY-MM-DD'), null);
 insert into Borrowing values
 (200, 222, 300, 1, TO_DATE('2014-02-22', 'YYYY-MM-DD'), TO_DATE('2014-03-29', 'YYYY-MM-DD'));
 insert into Borrowing values

commit e6ef9484bc3fb2376b0b04f85cb865266cadebcc
Merge: 950abb6 4689a74
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sun Mar 30 02:19:43 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam

commit a3b8aec81010e09abc0f03b8d62b885b85b9f8d5
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sun Mar 30 02:32:50 2014 -0700

    small changes in reportcheckedoutbooks()

diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 1f9aaa1..11957a5 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -23,8 +23,8 @@ public class LibrarianUser {
 			while (!quit) {
 				System.out.print("\n\nPlease choose one of the following: \n");
 				System.out.print("1.  Add book\n");
-				System.out.println("2.  Generate a report of all checked out books\n"); 
-//				System.out.println("3.  Generate a report of the most popular items for a given year\n");
+				System.out.print("2.  Generate a report of all checked out books\n"); 
+				System.out.print("3.  Generate a report of the most popular items for a given year\n");
 				System.out.print("4.  Quit\n>>");
 
 				choice = Integer.parseInt(Main.in.readLine());
@@ -415,11 +415,9 @@ public class LibrarianUser {
 					System.out.println("This item missed dueDate:" + duedate);
 					//TODO: let it flag.
 				}
-				
-				//TODO: If a subject is provided the report lists only books related to that subject, otherwise all the books that are out are listed by the report.
-				
+				else
+					System.out.println(" ");
 			}
-
 			// close the statement;
 			// the ResultSet will also be closed
 			statement.close();
@@ -436,4 +434,11 @@ public class LibrarianUser {
 			}
 		}
 	}
+	
+
+//	private static void mostPopular() {
+//		// TODO Auto-generated method stub
+//		
+//	}
+
 }
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index ee84afd..e3f8e79 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -217,7 +217,7 @@ insert into Borrowing values
 insert into Borrowing values
 (700, 111, 400, 2, TO_DATE('2013-05-20', 'YYYY-MM-DD'), null);
 insert into Borrowing values
-(800, 222, 600, 2, TO_DATE('2012-02-20', 'YYYY-MM-DD'), null);
+(800, 222, 600, 2, TO_DATE('2014-03-29', 'YYYY-MM-DD'), null);
 insert into Borrowing values
 (900, 222, 999, 2, TO_DATE('2012-02-22', 'YYYY-MM-DD'), null);
 insert into Borrowing values

commit 9f0b248af8da236b19dffbf738868283ca426d01
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 02:45:00 2014 -0700

    Pay Fine Done

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 2abab18..b483d0f 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -25,7 +25,7 @@ public class BorrowerUser {
 				System.out.print("1.  Book search\n");
 				System.out.print("2.  Check account\n");
 				System.out.print("3.  Place a hold request\n");
-				//System.out.print("4.  Pay fines\n");
+				System.out.print("4.  Pay fines\n");
 				System.out.print("5.  Quit\n>>");
 
 				choice = Integer.parseInt(Main.in.readLine());
@@ -36,7 +36,7 @@ public class BorrowerUser {
 				case 1:  searchBook(); break;
 				case 2:  checkAccount(); break;
 				case 3:  requestHold(); break;
-				case 4:  ; break; // TODO payFine()
+				case 4:  payFine(); break;
 				case 5:  quit = true; 
 				}
 			}
@@ -738,5 +738,146 @@ private static void addHoldRequest(int bid, int callNumber) {
 		}
 	}
 }
+
+private static void payFine()
+{
+	int		   bid = 0;
+	Statement  s;
+	int		   fid = 0;
+	String	   ans = "";
+
+	try
+	{
+		
+		System.out.print("Borrower ID: ");
+		try {
+			bid = Integer.parseInt(Main.in.readLine());
+		} catch (NumberFormatException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
+		} catch (IOException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
+		}
+		
+		s = Main.con.createStatement();
+
+		ResultSet rs = s.executeQuery("SELECT fid, amount, issuedDate "
+				+ "FROM Fine F, Borrowing B "
+				+ "WHERE F.borid = B.borid "
+				+ "AND B.bid = " + bid);
+		
+		// get info on ResultSet
+		ResultSetMetaData rsmd = rs.getMetaData();
+
+		// get number of columns
+		int numCols = rsmd.getColumnCount();
+
+		System.out.println(" ");
+
+		
+		// display column names;
+		for (int i = 0; i < numCols; i++)
+		{
+			// get column name and print it
+
+			System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+		}
+		
+		System.out.println(" ");
+
+		while(rs.next())
+		{
+			// simplified output formatting; truncation may occur
+
+			fid = rs.getInt(1);
+			System.out.printf("%-15.15s", fid);
+
+			double amount = rs.getDouble(2);
+			System.out.printf("%-15.15s", amount);
+
+			Date issuedDate = rs.getDate(3);
+			System.out.printf("%-15.15s", issuedDate);
+
+		}
+		System.out.println("\n\nSelect ID of fine that will be paid for: ");
+		try {
+			fid = Integer.parseInt(Main.in.readLine());
+		} catch (NumberFormatException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
+		} catch (IOException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
+		}
+		System.out.println("Proceed with payment?(y/n)");
+		try {
+			ans = Main.in.readLine();
+		} catch (IOException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
+		}
+
+		if (ans.equals("y")){
+			updateFine(fid);
+			System.out.println("Fine has been paid.");
+		}
+		else{
+			System.out.println("Payment cancelled.");
+		}
+	}
+
+	catch (SQLException ex) {
+		System.out.println("Message: " + ex.getMessage());
+		try 
+		{
+			// undo the insert
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}
+}
+
+private static void updateFine(int fid)
+{
+
+	Date			   paidDate;
+	PreparedStatement  ps;
+
+	try
+	{
+		ps = Main.con.prepareStatement("UPDATE fine SET paidDate = ? WHERE fid = ?");
+
+
+		GregorianCalendar gregCalendar = new GregorianCalendar();
+		paidDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		ps.setDate(1, paidDate);
+		ps.setInt(2, fid);
+		ps.execute();
+
+		Main.con.commit();
+
+		ps.close();
+	}
+	catch (SQLException ex)
+	{
+		System.out.println("Message: " + ex.getMessage());
+
+		try 
+		{
+			Main.con.rollback();	
+		}
+		catch (SQLException ex2)
+		{
+			System.out.println("Message: " + ex2.getMessage());
+			System.exit(-1);
+		}
+	}	
+}
+
 }
 
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 7b58d02..a643e1a 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -213,3 +213,6 @@ insert into Borrowing values
 
 insert into HoldRequest values
 (999, 111, 300, TO_DATE('2014-03-30', 'YYYY-MM-DD'));
+
+insert into Fine values
+(100, 100.00, TO_DATE('2013-09-01', 'YYYY-MM-DD'), null, 100);
diff --git a/table.sql b/table.sql
new file mode 100644
index 0000000..85a6159
--- /dev/null
+++ b/table.sql
@@ -0,0 +1,219 @@
+drop table Fine;
+drop table Borrowing;
+drop table HoldRequest;
+drop table HasSubject;
+drop table HasAuthor;
+drop table BookCopy;
+drop table Book;
+drop table Borrower;
+drop table BorrowerType;
+
+drop sequence bid_c;
+drop sequence callNumber_c;
+drop sequence hid_c;
+drop sequence borid_c;
+drop sequence fid_c;
+
+
+create sequence bid_c
+	start with 1000 
+	increment by 1;
+
+create sequence callNumber_c
+	start with 1000
+	increment by 1;
+
+create sequence hid_c
+	start with 1000
+	increment by 1;
+
+create sequence borid_c
+	start with 1000
+	increment by 1;
+
+create sequence fid_c
+	start with 1000
+	increment by 1;
+
+
+create table BorrowerType
+	(type varchar(10) not null PRIMARY KEY,
+	bookTimeLimit integer null);
+
+create table Borrower
+	(bid integer not null PRIMARY KEY,
+	password varchar(20) null,
+	name varchar(20) null,
+	address varchar(50) null,
+	phone char(10) null,
+	emailAddress varchar(50) null,
+	sinOrStNo varchar(10) not null,
+	expiryDate date null,
+	type varchar(10) not null,
+	FOREIGN KEY (type) references BorrowerType);
+
+create table Book
+	(callNumber integer not null PRIMARY KEY,
+	isbn char(9) not null,
+	title varchar(50) null,
+	mainAuthor varchar(20) null,
+	publisher varchar(20) null,
+	year integer null);
+
+create table BookCopy 
+	(callNumber integer not null,
+	copyNo integer not null,
+	status varchar(10) null,
+	PRIMARY KEY (callNumber, copyNo),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HasAuthor
+	(callNumber integer not null,
+	name varchar(20) not null,
+	PRIMARY KEY (callNumber, name),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HasSubject
+	(callNumber integer not null,
+	subject varchar(50) not null,
+	PRIMARY KEY (callNumber, subject),
+	FOREIGN KEY (callNumber) references Book);
+
+create table HoldRequest
+	(hid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber integer not null,
+	issuedDate date null,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber) references Book);
+
+create table Borrowing
+	(borid integer not null PRIMARY KEY,
+	bid integer not null,
+	callNumber integer not null,
+	copyNo integer not null,
+	outDate date null,
+	inDate date null,
+	FOREIGN KEY (bid) references Borrower,
+	FOREIGN KEY (callNumber, copyNo) references BookCopy);
+
+create table Fine
+	(fid integer not null PRIMARY KEY,
+	amount number null,
+	issuedDate date null,
+	paidDate date null,
+	borid integer not null,
+	FOREIGN KEY (borid) references Borrowing);
+
+
+insert into BorrowerType values
+('student', 2);
+insert into BorrowerType values
+('faculty', 12);
+insert into BorrowerType values
+('staff', 6);
+insert into BorrowerType values
+('general', 2);
+
+
+insert into Borrower values
+(111, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '11111111', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'student');
+insert into Borrower values
+(222, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '22222222', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'staff');
+insert into Borrower values
+(333, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '33333333', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'general');
+insert into Borrower values
+(444, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '44444444', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'staff');
+insert into Borrower values
+(555, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '55555555', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'student');
+
+
+insert into Book values
+(100, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
+insert into Book values
+(200, '02000000', 'Hi Database', 'Laks', 'SFU','2000');
+insert into Book values
+(300, '03000000', 'Advanced Data Structures and Algorithms', 'Michelle Ng', 'UBC','2008');
+insert into Book values
+(400, '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
+insert into Book values
+(500, '05000000', 'Hi C++', 'Laks', 'UBC','2014');
+insert into Book values
+(600, '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
+insert into Book values
+(999, '123456789', 'ABCs', 'Sammy', 'Foo Readers', 2000);
+
+
+insert into BookCopy values
+(100, 1, 'out');
+insert into BookCopy values
+(200, 1, 'on hold');
+insert into BookCopy values
+(300, 1, 'out');
+insert into BookCopy values
+(300, 2, 'on hold');
+insert into BookCopy values
+(400, 1, 'in');
+insert into BookCopy values
+(500, 1, 'in');
+insert into BookCopy values
+(500, 2, 'in');
+insert into BookCopy values
+(600, 1, 'out');
+insert into BookCopy values
+(999, 1, 'in');
+insert into BookCopy values
+(999, 2, 'out');
+insert into BookCopy values
+(999, 3, 'on hold');
+
+
+insert into HasAuthor values
+(200, 'Gregor');
+insert into HasAuthor values
+(200, 'Mike');
+insert into HasAuthor values
+(500, 'Patrice');
+insert into HasAuthor values
+(999, 'Bobby');
+
+
+insert into HasSubject values
+(100, 'java');
+insert into HasSubject values
+(100, 'computer');
+insert into HasSubject values
+(200, 'database');
+insert into HasSubject values
+(200, 'computer');
+insert into HasSubject values
+(300, 'computer');
+insert into HasSubject values
+(400, 'computer');
+insert into HasSubject values
+(500, 'c++');
+insert into HasSubject values
+(500, 'computer');
+insert into HasSubject values
+(600, 'computer');
+insert into HasSubject values
+(999, 'kindergarten');
+insert into HasSubject values
+(999, 'letters');
+
+
+insert into Borrowing values
+(100, 111, 100, 1, TO_DATE('2013-02-20', 'YYYY-MM-DD'), null);
+insert into Borrowing values
+(200, 222, 300, 1, TO_DATE('2014-02-22', 'YYYY-MM-DD'), TO_DATE('2014-03-29', 'YYYY-MM-DD'));
+insert into Borrowing values
+(300, 333, 600, 1, TO_DATE('2014-01-29', 'YYYY-MM-DD'), TO_DATE('2014-01-31', 'YYYY-MM-DD'));
+insert into Borrowing values
+(400, 444, 999, 2, TO_DATE('2013-09-01', 'YYYY-MM-DD'), TO_DATE('2013-10-10', 'YYYY-MM-DD'));
+
+insert into HoldRequest values
+(999, 111, 300, TO_DATE('2014-03-30', 'YYYY-MM-DD'));
+
+insert into Fine values
+(100, 100.00, TO_DATE('2013-09-01', 'YYYY-MM-DD'), null, 100);
+(200, 90.00, TO_DATE('2013-09-02', 'YYYY-MM-DD'), null, 100);

commit 6627edb01d93f70b1e310fc98af7845055b357f0
Merge: 9f0b248 a3b8aec
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 02:45:11 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam

commit 5d226f98551ee34b8243eadcef87796d160c60d7
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 14:50:06 2014 -0700

    cleaning up
    
    checkOutItems() and helpers, processReturn()

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index b3eb812..73c90aa 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -7,7 +7,6 @@ import java.sql.*;
 import java.util.GregorianCalendar;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
-import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Calendar;
 import java.util.List;
@@ -32,7 +31,7 @@ public class ClerkUser {
 				System.out.print("\n\nPlease choose one of the following: \n");
 				System.out.print("1.  Add borrower\n");
 				System.out.print("2.  Check out item\n");;
-				//System.out.print("3.  Process a return\n");
+				System.out.print("3.  Process a return\n");
 				System.out.print("4.  Check overdue items\n");
 				System.out.print("5.  Quit\n>>");
 
@@ -42,9 +41,9 @@ public class ClerkUser {
 
 				switch (choice) {
 				case 1:  addBorrower(); break;
-				case 2:  checkOutItems(); break; // TODO checkOutItems()
-				case 3:  ; break; // TODO processReturn()
-				case 4:  checkOverdueItems(); break; // TODO checkOverdueItems()
+				case 2:  checkOutItems(); break;
+				case 3:  processReturn(); break;
+				case 4:  checkOverdueItems(); break;
 				case 5:  quit = true; 
 				}
 			}
@@ -75,20 +74,18 @@ public class ClerkUser {
 	 * User should provide all required info.
 	 */
 	private static void addBorrower() {
-		int                bid;
 		String             password; 
 		String             name;
 		String             address;
 		String             phone;
 		String             emailAddress;
 		int                sinOrStNo;
-		String             expiryDate;
 		String             type;
 
 		PreparedStatement  ps;
 
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (bid_c.nextval,?,?,?,?,?,?,{d ?},?)");
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (bid_c.nextval,?,?,?,?,?,?,TO_DATE(?, 'YYYY-MM-DD'),?)");
 
 			System.out.print("Borrower password: ");
 			password = Main.in.readLine();
@@ -114,9 +111,11 @@ public class ClerkUser {
 			sinOrStNo = Integer.parseInt(Main.in.readLine());
 			ps.setInt(6, sinOrStNo);
 
-			System.out.print("Borrower expiry date: ");  // Clerk should set to 2 years from today
-			expiryDate = Main.in.readLine();  // Must be in format yyyy-mm-dd
-			ps.setString(7, expiryDate);
+			// expiry date set to 5 years from now
+			GregorianCalendar gregToday = new GregorianCalendar();
+			gregToday.add(Calendar.YEAR, 5);
+			java.sql.Date expiryDate = new java.sql.Date(gregToday.getTime().getTime());
+			ps.setDate(7, expiryDate);
 
 			System.out.print("Borrower type: ");
 			type = Main.in.readLine();
@@ -146,51 +145,71 @@ public class ClerkUser {
 		}
 	}
 
-	
+
+	/*
+	 * Checks out items borrowed by a borrower.  Borrowers provide their bid and a list
+	 * of callNumbers and copyNos of the items they wish to check out. 
+	 */
 	private static void checkOutItems() throws ParseException {
 		int 			   bid;
-		List<String>	   callNumbersS;
-		ArrayList<Integer> callNumbers = null;
-		callNumbers = new ArrayList<Integer>();
+		List<String>	   callNumbers;
 		Statement  		   s;
-		
+
+		// today's date
+		GregorianCalendar gregToday = new GregorianCalendar();
+		java.sql.Date sqlToday = new java.sql.Date(gregToday.getTime().getTime());
+
 		try {
-			System.out.println("Borrower ID: ");
+			System.out.print("Borrower ID: ");
 			bid = Integer.parseInt(Main.in.readLine());
-			System.out.println("List of call numbers: ");
-			callNumbersS = Arrays.asList(Main.in.readLine().split(","));
-			
-			if (callNumbersS.isEmpty()) {
-				
+
+			System.out.print("List of call numbers to be checked out: ");
+			callNumbers = Arrays.asList(Main.in.readLine().split(","));
+
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bid "
+					+ "FROM Borrower "
+					+ "WHERE bid = " + bid);
+			// check that bid is valid
+			if (!rs.next()){
+				System.out.println("Invalid borrower ID.");
+				return;
 			}
-	
 			
-			else{
-				
-				for (String c: callNumbersS){
-					int callNumber;
-					callNumber = Integer.parseInt(c.trim());
-					callNumbers.add(callNumber);
-				}
-			
-				s = Main.con.createStatement();
-				ResultSet rs = s.executeQuery("SELECT bid "
-												+ "FROM Borrower "
-												+ "WHERE bid = " + bid);
-
-				if (rs.next() == false){
-					System.out.println("Invalid ID");
-				
-				}
-				else {
-					for (int j = 0; j < callNumbers.size(); j++) {
-						int i = callNumbers.get(j);
-						checkOutItem(bid, i);
-					}
-				
-				}
+			// check out all items that borrower listed
+			for (String c: callNumbers){
+				int callNumber = Integer.parseInt(c.trim());
+				checkOutItem(bid, callNumber, sqlToday);
 			}
-			
+
+			// after checking out items using helper function, 
+			// display all that were successfully checked out
+			ResultSet rs2 = s.executeQuery("SELECT callNumber, copyNo "
+					+ "FROM Borrowing "
+					+ "WHERE bid=" + bid + " AND outDate=" + sqlToday.toString());
+
+			// display columns
+			ResultSetMetaData rsmd = rs2.getMetaData();
+			int numCols = rsmd.getColumnCount();
+			System.out.println(" ");
+
+			for (int i = 0; i < numCols; i++)
+			{
+				System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+			}
+
+			System.out.println(" ");
+
+			// display checked out items
+			while(rs2.next())
+			{
+				int iCallNumber = rs.getInt(1);
+				System.out.printf("%-10.10s", iCallNumber);
+
+				int iCopyNo = rs.getInt(2);
+				System.out.printf("%-20.20s", iCopyNo); 
+			}
+			System.out.println("Items due " + sqlToday);
 		}
 
 		catch (IOException e) {
@@ -211,28 +230,28 @@ public class ClerkUser {
 		}
 	}
 
-	private static void checkOutItem(int bid, int callNumber) throws ParseException {
-		
+	private static void checkOutItem(int bid, int callNumber, Date outDate) throws ParseException {
+
 		Statement			s;
-		
+
 		try 
 		{
+			//check if book is in library
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT callNumber "
-										+ "FROM BookCopy  "
-										+ "WHERE status = 'in' "
-										+ "AND callNumber = " + callNumber);
+					+ "FROM BookCopy  "
+					+ "WHERE status = 'in' "
+					+ "AND callNumber = " + callNumber);
+
+			if (!rs.next()){
+				System.out.println("Book not available for borrowing at this time.");
 
-			if (rs.next() == false){
-				System.out.println("Book not available for borrowing");
-				
 			}
 			else {
-				addBorrowingHelper(bid, callNumber);
+				addBorrowingHelper(bid, callNumber, outDate);
 			}
-			
+
 		}
-		
 
 		catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
@@ -248,45 +267,32 @@ public class ClerkUser {
 			}
 		}
 	}
-	
-	private static void addBorrowingHelper(int bid, int callNumber) throws ParseException {
 
-		int						borid;
-		int						copyNo;
-		java.sql.Date 			outDate;
+	private static void addBorrowingHelper(int bid, int callNumber, Date outDate) throws ParseException {
+
+		int				   copyNo;
 		PreparedStatement  ps;
 
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (?,?,?,?,?,?)");
+			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (borid_c.nextval,?,?,?,TO_DATE(?, 'YYYY-MM-DD'),null)");
 
-			System.out.println("Borrowing ID for " + callNumber + ":");
-			borid = Integer.parseInt(Main.in.readLine());
-			ps.setInt(1, borid);
+			ps.setInt(1, bid);
+			ps.setInt(2, callNumber);
 
-			System.out.println("Copy No: ");
+			System.out.print("Copy number of item " + callNumber + ": ");
 			copyNo = Integer.parseInt(Main.in.readLine());
-			ps.setInt(4, copyNo);
+			ps.setInt(3, copyNo);
 
-			System.out.println("Out Date(dd/mm/yy): ");
-			outDate = stringToDate(Main.in.readLine());
-			ps.setDate(5, outDate);
-			
-			//!!
-			ps.setInt(2, bid);
-			ps.setInt(3, callNumber);
-			ps.setDate(6, null);
+			ps.setDate(4, outDate);		
+			System.out.println("got past insert");
 
 			ps.executeUpdate();
+
 			// commit work 
 			Main.con.commit();
 			ps.close();
-			
-			System.out.println("Call Number: " + callNumber);
-			System.out.println("Copy Number: " + copyNo);
-			System.out.println("Due Date: " + getDueDate(bid, outDate).toString());
 		}
 
-		
 		catch (IOException e) {
 			System.out.println("IOException!");
 		}
@@ -304,39 +310,37 @@ public class ClerkUser {
 			}
 		}
 	}
-	
-	static Date stringToDate(String date) {
+
+	public static Date stringToDate(String date) {
 		try {SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
 		java.util.Date utilDate = fm.parse(date);
 		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
 		return sqlDate;
 		}
 		catch (ParseException p) {
-			System.out.println("Message: Date must be informat dd/MM/yy");
+			System.out.println("Message: Date must be in format dd/MM/yy.");
 			return null;
 		}		
 	}
-	
-	static Date getDueDate(int bid, Date outDate){
-		
+
+	public static Date getDueDate(int bid, Date outDate){
+
 		Statement 				s;
 		int 					bookTimeLimit = 0;
-		
+
 		try 
 		{
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
-										+ "FROM Borrower B, BorrowerType C "
-										+ "WHERE B.type = C.type "
-										+ "AND B.bid = " + bid);
+					+ "FROM Borrower B, BorrowerType C "
+					+ "WHERE B.type = C.type "
+					+ "AND B.bid = " + bid);
 			while (rs.next()){
 				bookTimeLimit = rs.getInt(1);
-				
-			}
 
-			
+			}
 		}
-		
+
 		catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
 			try 
@@ -350,17 +354,130 @@ public class ClerkUser {
 				System.exit(-1);
 			}
 		}
-		
+
 		String outDateS = outDate.toString();
-		System.out.println("This is the outDate in string: " + outDateS);
 		String[] tokens = outDateS.split("-");
-		
+
 		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
 		gregCalendar.add(Calendar.DAY_OF_YEAR, bookTimeLimit*7);
 		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
 		return sqlDate;		
 	}
-	
+
+
+	/*
+	 * Process a return.  Clerk provides item's callNumber and copyNo, and the system 
+	 * registers the item as 'in'.  
+	 * If the item is overdue, a fine is placed on the borrower.
+	 * If there is a hold request on this item, the system registers the item as 'on hold'.
+	 */
+	private static void processReturn() {
+		
+		// provided by clerk
+		int 				callNumber;
+		int					copyNo;
+
+		// determined by system
+		int					borid;
+		int					bid;
+		Date				outDate;
+
+		Statement			s;
+		PreparedStatement   ps1;
+		PreparedStatement   ps2;
+		PreparedStatement   ps3;
+		PreparedStatement   ps4;
+
+		try {
+			ps1 = Main.con.prepareStatement("UPDATE Borrowing SET inDate= ? WHERE callNumber= ? AND copyNo= ?");
+			ps2 = Main.con.prepareStatement("INSERT INTO Fine VALUES (fid_c.nextval,?,?,?,?)");
+			ps3 = Main.con.prepareStatement("UPDATE BookCopy SET status='on hold' WHERE callNumber= ? AND copyNo= ?");
+			ps4 = Main.con.prepareStatement("UPDATE BookCopy SET status='in' WHERE callNumber= ? AND copyNo= ?");
+
+			// first enter callNumber and copyNo
+			System.out.print("Book call number: ");
+			callNumber = Integer.parseInt(Main.in.readLine());
+			System.out.print("Book copy number: ");
+			copyNo = Integer.parseInt(Main.in.readLine());
+
+			s = Main.con.createStatement();
+
+			// get borid and bid of borrowing
+			ResultSet rs = s.executeQuery("SELECT A.borid, A.bid, A.outDate, C.bookTimeLimit "
+					+ "FROM Borrowing A, Borrower B, BorrowerType C "
+					+ "WHERE A.callNumber=" + callNumber + " AND A.copyNo=" + copyNo
+					+ " AND A.bid=B.bid AND B.type=C.type");
+			if (!rs.next()) {
+				System.out.println("This item has not been borrowed, please check the call number and copy number.");
+				return;
+			}
+			borid = rs.getInt(1);
+			bid = rs.getInt(2);
+			outDate = rs.getDate(3);
+
+			// update borrowing so that inDate is set
+			GregorianCalendar gregToday = new GregorianCalendar();
+			java.sql.Date sqlToday = new java.sql.Date(gregToday.getTime().getTime());
+			ps1.setDate(1, sqlToday);
+			ps1.setInt(2, callNumber);
+			ps1.setInt(3, copyNo);
+			ps1.execute();
+			System.out.println("Item has been checked in.");
+
+			// if item is overdue, place a fine on the borrower
+			if (overdue(getDueDate(bid, outDate))) {
+				double fine = overdueBy(outDate) * 0.10;  // charged 10 cents a day
+				ps2.setDouble(1, fine);
+				ps2.setDate(2, sqlToday);
+				ps2.setDate(3, null);
+				ps2.setInt(4, borid);
+				ps2.execute();
+				System.out.println("A fine has been placed on borrower " + bid + ".");
+			}
+
+			ResultSet rs2 = s.executeQuery("SELECT bid "
+					+ "FROM HoldRequest "
+					+ "WHERE callNumber=" + callNumber);
+			// if there is a hold request on the book, register as on hold
+			if (rs2.next()) {
+				ps3.setInt(1, callNumber);
+				ps3.setInt(2, copyNo);
+				ps3.execute();
+
+				int bidHold = rs2.getInt(1);
+
+				// notify borrower who requested hold
+				ResultSet rs3 = s.executeQuery("SELECT name, emailAddress "
+						+ "FROM Borrower "
+						+ "WHERE bid=" + bidHold);
+				String nameHold = rs3.getString(1);
+				String emailAddrHold = rs3.getString(2);
+
+				System.out.println("Item has been registered as 'on hold' for borrower " + bidHold);
+				System.out.println("Borrower "+ bid + ", " + nameHold + " (" + emailAddrHold + 
+						"), has been notified about their held item.");
+			}
+			// otherwise update book copy so that it's registered as 'in'
+			else {
+				ps4.setInt(1, callNumber);
+				ps4.setInt(2, copyNo);
+				ps4.execute();
+				System.out.println("Item has been registered as 'in'.");
+			}
+
+			Main.con.commit();
+			ps1.close();
+			ps2.close();
+			ps3.close();
+
+		}
+		catch (IOException e) {
+			System.out.println("IOException!");
+		}
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+		}
+	}
 
 
 	/*
@@ -375,10 +492,10 @@ public class ClerkUser {
 
 			System.out.println("List of items overdue and the borrowers who have checked them out:");
 			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate, D.bookTimeLimit "
-							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
-							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
-							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
-							+ "ORDER BY E.bid, E.name ASC");
+					+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
+					+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
+					+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
+					+ "ORDER BY E.bid, E.name ASC");
 			// get info on ResultSet
 			ResultSetMetaData rsmd = rs.getMetaData();
 
@@ -393,13 +510,12 @@ public class ClerkUser {
 				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
 			}
 			System.out.printf("%-25s", "DUEDATE");
-			
+
 			System.out.println(" ");
 
 			while (rs.next()) {
 				Integer bid = rs.getInt("bid");
 				Date outDate = rs.getDate("outDate");
-				Integer bookTimeLimit = rs.getInt("bookTimeLimit");
 				// pseudo code: Date dueDate = outDate + bookTimeLimit;
 				// System.out.printf("%-20.20s\n", dueDate);
 				if (overdue(getDueDate(bid, outDate))) {
@@ -414,7 +530,7 @@ public class ClerkUser {
 						System.out.printf("%-30.30s", " ");
 					else
 						System.out.printf("%-30.30s", email);
-					
+
 					Integer callNumber = rs.getInt("callNumber");
 					if (rs.wasNull()) {
 						System.out.printf("%-9.9s", " ");
@@ -445,19 +561,35 @@ public class ClerkUser {
 			System.out.println("Message: " + ex.getMessage());
 		}
 	}
-	
-	private static boolean overdue(Date dueDate){
+
+	public static boolean overdue(Date dueDate){
 		String dueDateString = dueDate.toString();
-		System.out.println("This is the outDate in string: " + dueDateString);
+		System.out.println("Item due: " + dueDateString);
 		String[] tokens = dueDateString.split("-");
-		
-		GregorianCalendar gregCalendar2 = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
-	
+
+		GregorianCalendar gregCalendar2 = new GregorianCalendar(Integer.parseInt(tokens[0]), 
+				Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
+
 		GregorianCalendar gregCalendar = new GregorianCalendar();
 		if(gregCalendar.after(gregCalendar2))
 			return true;
 		else
 			return false;
 	}
+
+	public static int overdueBy(Date dueDate) {
+		String dueDateString = dueDate.toString();
+		String[] tokens = dueDateString.split("-");
+
+		GregorianCalendar gregDueDate = new GregorianCalendar(Integer.parseInt(tokens[0]), 
+				Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
+		GregorianCalendar gregToday = new GregorianCalendar();
+
+		java.util.Date dueDate1 = gregDueDate.getTime();
+		java.util.Date today = gregToday.getTime();
+
+		double diff = (double) ((today.getTime() - dueDate1.getTime()))/(1000*60*60*24);
+		return (int) diff;
+	}
 }
 
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 43fbe1c..bbae972 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -147,12 +147,10 @@ insert into Book values
 insert into BookCopy values
 (100, 1, 'out');
 insert into BookCopy values
-(200, 1, 'on hold');
+(200, 1, 'in');
 insert into BookCopy values
 (300, 1, 'out');
 insert into BookCopy values
-(300, 2, 'on hold');
-insert into BookCopy values
 (400, 1, 'in');
 insert into BookCopy values
 (500, 1, 'in');
@@ -165,7 +163,7 @@ insert into BookCopy values
 insert into BookCopy values
 (999, 2, 'out');
 insert into BookCopy values
-(999, 3, 'on hold');
+(999, 3, 'out');
 
 
 insert into HasAuthor values
@@ -205,11 +203,14 @@ insert into HasSubject values
 insert into Borrowing values
 (100, 111, 100, 1, TO_DATE('2013-02-20', 'YYYY-MM-DD'), null);
 insert into Borrowing values
-(200, 222, 300, 1, TO_DATE('2014-02-22', 'YYYY-MM-DD'), TO_DATE('2014-03-29', 'YYYY-MM-DD'));
+(200, 222, 300, 1, TO_DATE('2014-02-22', 'YYYY-MM-DD'), null);
 insert into Borrowing values
 (300, 333, 600, 1, TO_DATE('2014-01-29', 'YYYY-MM-DD'), TO_DATE('2014-01-31', 'YYYY-MM-DD'));
 insert into Borrowing values
 (400, 444, 999, 2, TO_DATE('2013-09-01', 'YYYY-MM-DD'), TO_DATE('2013-10-10', 'YYYY-MM-DD'));
+insert into Borrowing values
+(500, 555, 999, 3, TO_DATE('2014-03-29', 'YYYY-MM-DD'), null);
+
 
 insert into HoldRequest values
 (999, 111, 300, TO_DATE('2014-03-30', 'YYYY-MM-DD'));
\ No newline at end of file

commit dab44326aeeee735f3f11e6d2647d41d3bf41684
Merge: 5d226f9 6627edb
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 15:03:33 2014 -0700

    merge conflict resolved

commit ed3f06710b5f2e33d758f572243ec9506ced91ca
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 15:07:07 2014 -0700

    deleted ds_store...maybe what contained so much javascript?

diff --git a/Project Part III/.DS_Store b/Project Part III/.DS_Store
deleted file mode 100644
index 5008ddf..0000000
Binary files a/Project Part III/.DS_Store and /dev/null differ
diff --git a/Project Part III/.gitignore b/Project Part III/.gitignore
deleted file mode 100644
index 5e56e04..0000000
--- a/Project Part III/.gitignore	
+++ /dev/null
@@ -1 +0,0 @@
-/bin

commit 796cac365d870ca700343f42e0ec6fe8bb00ae7f
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sun Mar 30 16:18:56 2014 -0700

    mostPopular() implemented. (not tested)

diff --git a/Project Part III/.gitignore b/Project Part III/.gitignore
new file mode 100644
index 0000000..5e56e04
--- /dev/null
+++ b/Project Part III/.gitignore	
@@ -0,0 +1 @@
+/bin
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 11957a5..88ed6e0 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -34,7 +34,7 @@ public class LibrarianUser {
 				switch (choice) {
 				case 1:  addBook(); break;
 				case 2:  reportCheckedOutBooks(); break; // TODO reportCheckedOutBooks() NOT DONE YET
-				case 3:  ; break; // TODO mostPopular()
+				case 3:  mostPopular(); break; // TODO mostPopular()
 				case 4:  quit = true; 
 				}
 			}
@@ -435,10 +435,63 @@ public class LibrarianUser {
 		}
 	}
 	
+	/*
+	 * Generate a report with the most popular items in a given year. The
+	 * librarian provides a year and a number n. The system lists out the top n
+	 * books that where borrowed the most times during that year. The books are
+	 * ordered by the number of times they were borrowed.
+	 */
+	private static void mostPopular() {
+		try {
+			System.out.println("Generating a report with most popular items.");
+			System.out.println("Please specify how many books you want to add into the report:\n>>");
+			int amount = Integer.parseInt(Main.in.readLine());
+			if(amount < 0){
+				System.out.println("negative is not allowed.");
+				return;
+			}
+			System.out.println("Also specify the year:\n>>");
+			String year = Main.in.readLine();
+			Statement statement = Main.con.createStatement();
+			ResultSet query = statement.executeQuery("SELECT A.title, A.mainAuthor, A.isbn , COUNT(B.borid) AS rating "  
+												+ "FROM Borrowing B "
+												+ "LEFT JOIN Book A "
+												+ "ON B.callNumber=A.callNumber "
+												+ "WHERE B.outDate > '"+year+"-01-01' AND B.outDate < '"+year+"-12-31' "
+												+ "GROUP BY A.callNumber "
+												+ "ORDER BY rating desc");
+			// get info on ResultSet
+			ResultSetMetaData rsmd = query.getMetaData();
+			// get number of columns
+			int numCols = rsmd.getColumnCount();
+			// display column names;
+			for (int i = 0; i < numCols; i++) {
+				// get column name and print it
+				System.out.printf("%-20s", rsmd.getColumnName(i + 1));
+			}
+			System.out.println(" ");
+			
+			for(int i = 0; i < amount; i++){
+				query.next();
+				// simplified output formatting; truncation may occur
+				String title = query.getString("title");
+				String isbn = query.getString("isbn");
+				String mainAuthor = query.getString("mainAuthor");
+				int rating = query.getInt("rating");
+
+				System.out.printf("%-30.30s", title);
+				System.out.printf("%-10.10s", isbn);
+				System.out.printf("%-20.20s", mainAuthor);
+				System.out.printf("%-10.10s", rating);
+			}
 
-//	private static void mostPopular() {
-//		// TODO Auto-generated method stub
-//		
-//	}
-
+			// close the statement;
+			// the ResultSet will also be closed
+			statement.close();
+		} catch (SQLException e) {
+			System.out.println("Message: " + e.getMessage());
+		} catch (IOException e) {
+			System.out.println("Message: " + e.getMessage());
+		}
+	}
 }
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index d9ef970..907ad51 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -225,7 +225,7 @@ insert into Borrowing values
 insert into Borrowing values
 (400, 444, 999, 2, TO_DATE('2013-09-01', 'YYYY-MM-DD'), TO_DATE('2013-10-10', 'YYYY-MM-DD'));
 insert into Borrowing values
-(500, 555, 999, 3, TO_DATE('2014-03-29', 'YYYY-MM-DD'), null);
+(550, 555, 999, 3, TO_DATE('2014-03-29', 'YYYY-MM-DD'), null);
 
 
 insert into HoldRequest values

commit f92c084da4de6e6171f10be0ec3521b494837b9a
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 16:35:29 2014 -0700

    In ClerkUser class:
    - checkOutItems() working
    - processReturn() and checkOverdueItems() mostly working, but sometimes
    say that items are overdue when they really aren't.
    
    Suspect it's a problem with one of the date converter helper methods.

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 68c13f1..22485d7 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -150,7 +150,7 @@ public class ClerkUser {
 	 * Checks out items borrowed by a borrower.  Borrowers provide their bid and a list
 	 * of callNumbers and copyNos of the items they wish to check out. 
 	 */
-	private static void checkOutItems() throws ParseException {
+	private static void checkOutItems() {
 		int 			   bid;
 		List<String>	   callNumbers;
 		Statement  		   s;
@@ -168,8 +168,8 @@ public class ClerkUser {
 
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT bid "
-					+ "FROM Borrower "
-					+ "WHERE bid = " + bid);
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
 			// check that bid is valid
 			if (!rs.next()){
 				System.out.println("Invalid borrower ID.");
@@ -185,8 +185,8 @@ public class ClerkUser {
 			// after checking out items using helper function, 
 			// display all that were successfully checked out
 			ResultSet rs2 = s.executeQuery("SELECT callNumber, copyNo "
-					+ "FROM Borrowing "
-					+ "WHERE bid=" + bid + " AND outDate=" + sqlToday.toString());
+										 + "FROM Borrowing "
+										 + "WHERE bid=" + bid + " AND outDate=TO_DATE('" + sqlToday + "', 'YYYY-MM-DD')");
 
 			// display columns
 			ResultSetMetaData rsmd = rs2.getMetaData();
@@ -230,45 +230,7 @@ public class ClerkUser {
 		}
 	}
 
-	private static void checkOutItem(int bid, int callNumber, Date outDate) throws ParseException {
-
-		Statement			s;
-
-		try 
-		{
-			//check if book is in library
-			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT callNumber "
-					+ "FROM BookCopy  "
-					+ "WHERE status = 'in' "
-					+ "AND callNumber = " + callNumber);
-
-			if (!rs.next()){
-				System.out.println("Book not available for borrowing at this time.");
-
-			}
-			else {
-				addBorrowingHelper(bid, callNumber, outDate);
-			}
-
-		}
-
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-	}
-
-	private static void addBorrowingHelper(int bid, int callNumber, Date outDate) throws ParseException {
+	private static void checkOutItem (int bid, int callNumber, Date outDate) {
 
 		int				   copyNo;
 		PreparedStatement  ps;
@@ -279,11 +241,11 @@ public class ClerkUser {
 			ps.setInt(1, bid);
 			ps.setInt(2, callNumber);
 			
-			System.out.print("Copy number of item" + callNumber + ": ");
+			System.out.print("Copy number of item " + callNumber + ": ");
 			copyNo = Integer.parseInt(Main.in.readLine());
+			ps.setInt(3, copyNo);
 
 			ps.setDate(4, outDate);		
-			System.out.println("got past insert");
 
 			ps.executeUpdate();
 
@@ -322,8 +284,6 @@ public class ClerkUser {
 	{
 	  ps = Main.con.prepareStatement("UPDATE bookCopy SET status = 'out' WHERE callNumber = ? AND copyNo = ?");
 	
-
-	  //ps.setString(1, status);
 	  ps.setInt(1, callNumber);
 	  ps.setInt(2, copyNo);
 	  ps.execute();
@@ -348,60 +308,6 @@ public class ClerkUser {
 	}	
     }
 
-	
-	static Date stringToDate(String date) {
-		try {SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
-		java.util.Date utilDate = fm.parse(date);
-		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
-		return sqlDate;
-		}
-		catch (ParseException p) {
-			System.out.println("Message: Date must be in format dd/MM/yy.");
-			return null;
-		}		
-	}
-
-	public static Date getDueDate(int bid, Date outDate){
-
-		Statement 				s;
-		int 					bookTimeLimit = 0;
-
-		try 
-		{
-			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
-					+ "FROM Borrower B, BorrowerType C "
-					+ "WHERE B.type = C.type "
-					+ "AND B.bid = " + bid);
-			while (rs.next()){
-				bookTimeLimit = rs.getInt(1);
-
-			}
-		}
-
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-
-		String outDateS = outDate.toString();
-		String[] tokens = outDateS.split("-");
-
-		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
-		gregCalendar.add(Calendar.DAY_OF_YEAR, bookTimeLimit*7);
-		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
-		return sqlDate;		
-	}
-
 
 	/*
 	 * Process a return.  Clerk provides item's callNumber and copyNo, and the system 
@@ -427,7 +333,7 @@ public class ClerkUser {
 		PreparedStatement   ps4;
 
 		try {
-			ps1 = Main.con.prepareStatement("UPDATE Borrowing SET inDate= ? WHERE callNumber= ? AND copyNo= ?");
+			ps1 = Main.con.prepareStatement("UPDATE Borrowing SET inDate=TO_DATE(?, 'YYYY-MM-DD') WHERE callNumber= ? AND copyNo= ?");
 			ps2 = Main.con.prepareStatement("INSERT INTO Fine VALUES (fid_c.nextval,?,?,?,?)");
 			ps3 = Main.con.prepareStatement("UPDATE BookCopy SET status='on hold' WHERE callNumber= ? AND copyNo= ?");
 			ps4 = Main.con.prepareStatement("UPDATE BookCopy SET status='in' WHERE callNumber= ? AND copyNo= ?");
@@ -442,9 +348,9 @@ public class ClerkUser {
 
 			// get borid and bid of borrowing
 			ResultSet rs = s.executeQuery("SELECT A.borid, A.bid, A.outDate, C.bookTimeLimit "
-					+ "FROM Borrowing A, Borrower B, BorrowerType C "
-					+ "WHERE A.callNumber=" + callNumber + " AND A.copyNo=" + copyNo
-					+ " AND A.bid=B.bid AND B.type=C.type");
+										+ "FROM Borrowing A, Borrower B, BorrowerType C "
+										+ "WHERE A.callNumber=" + callNumber + " AND A.copyNo=" + copyNo
+										+ " AND A.bid=B.bid AND B.type=C.type");
 			if (!rs.next()) {
 				System.out.println("This item has not been borrowed, please check the call number and copy number.");
 				return;
@@ -464,7 +370,7 @@ public class ClerkUser {
 
 			// if item is overdue, place a fine on the borrower
 			if (overdue(getDueDate(bid, outDate))) {
-				double fine = overdueBy(outDate) * 0.10;  // charged 10 cents a day
+				double fine = overdueBy(getDueDate(bid, outDate)) * 0.10;  // charged 10 cents a day
 				ps2.setDouble(1, fine);
 				ps2.setDate(2, sqlToday);
 				ps2.setDate(3, null);
@@ -476,6 +382,7 @@ public class ClerkUser {
 			ResultSet rs2 = s.executeQuery("SELECT bid "
 					+ "FROM HoldRequest "
 					+ "WHERE callNumber=" + callNumber);
+			
 			// if there is a hold request on the book, register as on hold
 			if (rs2.next()) {
 				ps3.setInt(1, callNumber);
@@ -495,6 +402,7 @@ public class ClerkUser {
 				System.out.println("Borrower "+ bid + ", " + nameHold + " (" + emailAddrHold + 
 						"), has been notified about their held item.");
 			}
+			
 			// otherwise update book copy so that it's registered as 'in'
 			else {
 				ps4.setInt(1, callNumber);
@@ -601,11 +509,68 @@ public class ClerkUser {
 			// close the statement;
 			// the ResultSet will also be closed
 			statement.close();
+			
 		} catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
 		}
 	}
 
+	
+	// Converts a date to string in proper format
+	public static Date stringToDate(String date) {
+		try {SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		}
+		catch (ParseException p) {
+			System.out.println("Message: Date must be in format dd/MM/yy.");
+			return null;
+		}		
+	}
+
+	// Gets due date of an item given borrower's bid and out date of item
+	public static Date getDueDate(int bid, Date outDate){
+
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+
+		try {
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+					+ "FROM Borrower B, BorrowerType C "
+					+ "WHERE B.type = C.type "
+					+ "AND B.bid = " + bid);
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+
+			}
+		}
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+
+		String outDateS = outDate.toString();
+		String[] tokens = outDateS.split("-");
+
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
+		gregCalendar.add(Calendar.DAY_OF_YEAR, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;		
+	}
+	
+	// Returns true of dueDate < today's date
 	public static boolean overdue(Date dueDate){
 		String dueDateString = dueDate.toString();
 		System.out.println("Item due: " + dueDateString);
@@ -622,6 +587,7 @@ public class ClerkUser {
 			return false;
 	}
 
+	// Returns # days item is overdue by
 	public static int overdueBy(Date dueDate) {
 		String dueDateString = dueDate.toString();
 		String[] tokens = dueDateString.split("-");
@@ -633,7 +599,7 @@ public class ClerkUser {
 		java.util.Date dueDate1 = gregDueDate.getTime();
 		java.util.Date today = gregToday.getTime();
 
-		double diff = (double) ((today.getTime() - dueDate1.getTime()))/(1000*60*60*24);
+		double diff = (double) ((today.getTime() - dueDate1.getTime()))/(1000*60*60*60*24);
 		return (int) diff;
 	}
 }
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index d9ef970..9a8c6d1 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -222,10 +222,6 @@ insert into Borrowing values
 (200, 222, 300, 1, TO_DATE('2014-02-22', 'YYYY-MM-DD'), null);
 insert into Borrowing values
 (300, 333, 600, 1, TO_DATE('2014-01-29', 'YYYY-MM-DD'), TO_DATE('2014-01-31', 'YYYY-MM-DD'));
-insert into Borrowing values
-(400, 444, 999, 2, TO_DATE('2013-09-01', 'YYYY-MM-DD'), TO_DATE('2013-10-10', 'YYYY-MM-DD'));
-insert into Borrowing values
-(500, 555, 999, 3, TO_DATE('2014-03-29', 'YYYY-MM-DD'), null);
 
 
 insert into HoldRequest values

commit c924da3e4b85377a3ca612d00776102b495c9b31
Merge: f92c084 796cac3
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 16:42:58 2014 -0700

    merge conflict resolved

commit 0de4e73319d413c3ad2168942151fe2cec1c6d96
Author: kbhangel <gwanggo1@hotmail.com>
Date:   Sun Mar 30 16:52:00 2014 -0700

    mostpopular() modified

diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 88ed6e0..744f252 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -453,12 +453,12 @@ public class LibrarianUser {
 			System.out.println("Also specify the year:\n>>");
 			String year = Main.in.readLine();
 			Statement statement = Main.con.createStatement();
-			ResultSet query = statement.executeQuery("SELECT A.title, A.mainAuthor, A.isbn , COUNT(B.borid) AS rating "  
+			ResultSet query = statement.executeQuery("SELECT A.callNumber, A.title, A.mainAuthor, A.isbn , COUNT(B.borid) AS rating "  
 												+ "FROM Borrowing B "
 												+ "LEFT JOIN Book A "
 												+ "ON B.callNumber=A.callNumber "
 												+ "WHERE B.outDate > '"+year+"-01-01' AND B.outDate < '"+year+"-12-31' "
-												+ "GROUP BY A.callNumber "
+												+ "GROUP BY A.callNumber, A.title, A.mainAuthor, A.isbn "
 												+ "ORDER BY rating desc");
 			// get info on ResultSet
 			ResultSetMetaData rsmd = query.getMetaData();
@@ -474,11 +474,13 @@ public class LibrarianUser {
 			for(int i = 0; i < amount; i++){
 				query.next();
 				// simplified output formatting; truncation may occur
+				int callNumber = query.getInt("callNumber");
 				String title = query.getString("title");
 				String isbn = query.getString("isbn");
 				String mainAuthor = query.getString("mainAuthor");
 				int rating = query.getInt("rating");
 
+				System.out.printf("%-10.10s", callNumber);
 				System.out.printf("%-30.30s", title);
 				System.out.printf("%-10.10s", isbn);
 				System.out.printf("%-20.20s", mainAuthor);

commit 84e15c30025e5a83ea4c574c57d3ac58c33b5eff
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 16:59:03 2014 -0700

    emailing done for check overdue items

diff --git a/Project Part III/.gitignore b/Project Part III/.gitignore
new file mode 100644
index 0000000..5e56e04
--- /dev/null
+++ b/Project Part III/.gitignore	
@@ -0,0 +1 @@
+/bin
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 68c13f1..dfe7b03 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -279,9 +279,10 @@ public class ClerkUser {
 			ps.setInt(1, bid);
 			ps.setInt(2, callNumber);
 			
-			System.out.print("Copy number of item" + callNumber + ": ");
+			System.out.print("Copy number of item " + callNumber + ": ");
 			copyNo = Integer.parseInt(Main.in.readLine());
 
+			ps.setInt(3, copyNo);
 			ps.setDate(4, outDate);		
 			System.out.println("got past insert");
 
@@ -525,6 +526,7 @@ public class ClerkUser {
 	private static void checkOverdueItems() {
 		Statement statement;
 		ResultSet rs;
+		List<String> bidsS = null;
 		try {
 			statement = Main.con.createStatement();
 
@@ -596,8 +598,34 @@ public class ClerkUser {
 				}
 			}
 
-			//TODO: Should be able to send email to each user or all the user.
+
+			System.out.print("\n\nList of borrower IDs you would like to send an overdue email to (or type in 'all' to send to all borrowers): ");
+			try {
+				bidsS = Arrays.asList(Main.in.readLine().split(","));
+			} catch (IOException e) {
+				System.out.println("Message: " + e.getMessage());
+				e.printStackTrace();
+			}
 			
+			if (bidsS.get(0).equals("all")){
+				
+				ResultSet rs2 = statement.executeQuery("SELECT E.bid "
+						+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
+						+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
+						+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
+						+ "ORDER BY E.bid, E.name ASC");
+				
+				while (rs2.next()) {
+					Integer bid = rs2.getInt("bid");
+					sendEmailOverdue(bid);
+				}
+			}
+			else {
+			for (String b: bidsS){
+				int bid = Integer.parseInt(b.trim());
+				sendEmailOverdue(bid);
+			}
+			}
 			// close the statement;
 			// the ResultSet will also be closed
 			statement.close();
@@ -606,9 +634,46 @@ public class ClerkUser {
 		}
 	}
 
+	private static void sendEmailOverdue(int bid) {
+		Statement 				s;
+		String 					emailAddrHold;
+		String					nameHold;
+
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT emailAddress, name "
+					+ "FROM Borrower "
+					+ "WHERE bid = " + bid);
+			
+			while (rs.next()){
+				emailAddrHold = rs.getString(1);
+				nameHold = rs.getString(2);
+				System.out.println("\nBorrower "+ bid + ", " + nameHold + " (" + emailAddrHold + 
+						"), has been notified about their overdue item.");
+			}
+		}
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+		
+	}
+
+
 	public static boolean overdue(Date dueDate){
 		String dueDateString = dueDate.toString();
-		System.out.println("Item due: " + dueDateString);
+		//System.out.println("Item due: " + dueDateString);
 
 		String[] tokens = dueDateString.split("-");
 

commit 89100eb9dfe01cc822ec63d827b4ebbd53de6ec2
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 17:00:11 2014 -0700

    minor detail

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index dfe7b03..ea3f190 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -599,7 +599,7 @@ public class ClerkUser {
 			}
 
 
-			System.out.print("\n\nList of borrower IDs you would like to send an overdue email to (or type in 'all' to send to all borrowers): ");
+			System.out.print("\n\nList of borrower IDs you would like to send an overdue email to (type in 'all' to send to all borrowers or simply press Enter to not send): ");
 			try {
 				bidsS = Arrays.asList(Main.in.readLine().split(","));
 			} catch (IOException e) {

commit 5ae45ccbeb895e69ba247a0d6a50f355279f830d
Merge: 89100eb 0de4e73
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 17:20:03 2014 -0700

    stupid merge

commit 26041fb2f409b58d5283184cdddde29f70348644
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 17:35:17 2014 -0700

    no string entered case for checkoverdueitem

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 792b4cc..995439c 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -528,6 +528,10 @@ public class ClerkUser {
 					sendEmailOverdue(bid);
 				}
 			}
+			else if (bidsS.get(0).trim().equals("")){
+				System.out.println("Email not sent");
+			}
+			
 			else {
 			for (String b: bidsS){
 				int bid = Integer.parseInt(b.trim());

commit 96c78f136a5d54ab34b2c47b1f0a76020f122c15
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 17:44:07 2014 -0700

    Changed all System.out.println()s in catch blocks to
    System.err.println()s for gui.

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index de78ad1..9aad7f0 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -47,17 +47,17 @@ public class BorrowerUser {
 
 		}
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 			try {
 				Main.con.close();
 				System.exit(-1);
 			}
 			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
+				System.err.println("Message: " + ex.getMessage());
 			}
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		}
 	}
 
@@ -90,13 +90,13 @@ public class BorrowerUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 			try {
 				Main.con.close();
 				System.exit(-1);
 			}
 			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
+				System.err.println("Message: " + ex.getMessage());
 			}
 		}
 	}
@@ -178,10 +178,10 @@ public class BorrowerUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		}
 	}
 
@@ -264,10 +264,10 @@ public class BorrowerUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		}
 
 	}
@@ -350,10 +350,10 @@ public class BorrowerUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		}
 	}
 
@@ -375,7 +375,6 @@ public class BorrowerUser {
 
 		Statement s;
 
-
 		try {
 			s = Main.con.createStatement();
 
@@ -392,7 +391,6 @@ public class BorrowerUser {
 				return;
 			}
 
-
 			// query of title, isbn and mainAuthor when borrowing's inDate is null.
 			System.out.println("List of items you currently borrowed:");
 			rs = s.executeQuery("SELECT A.title, A.isbn, A.mainAuthor "
@@ -537,10 +535,11 @@ public class BorrowerUser {
 			// close the statement;
 			// the ResultSet will also be closed
 			s.close();
+			
 		} catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		} catch (IOException e) {
-			System.out.println("Message: " + e.getMessage());
+			System.err.println("Message: " + e.getMessage());
 		}
 	}
 
@@ -584,7 +583,7 @@ public class BorrowerUser {
 		}
 		
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 			return null;
 		}
 	}
@@ -650,7 +649,7 @@ private static void requestHold() {
 		}
 
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 			try 
 			{
 				// undo the insert
@@ -658,7 +657,7 @@ private static void requestHold() {
 			}
 			catch (SQLException ex2)
 			{
-				System.out.println("Message: " + ex2.getMessage());
+				System.err.println("Message: " + ex2.getMessage());
 				System.exit(-1);
 			}
 		}
@@ -692,7 +691,7 @@ private static void updateBookCopyStatus(int callNumber, int copyNo)
 		}
 		catch (SQLException ex2)
 		{
-			System.out.println("Message: " + ex2.getMessage());
+			System.err.println("Message: " + ex2.getMessage());
 			System.exit(-1);
 		}
 	}	
@@ -725,7 +724,7 @@ private static void addHoldRequest(int bid, int callNumber) {
 
 
 	catch (SQLException ex) {
-		System.out.println("Message: " + ex.getMessage());
+		System.err.println("Message: " + ex.getMessage());
 		try 
 		{
 			// undo the insert
@@ -733,7 +732,7 @@ private static void addHoldRequest(int bid, int callNumber) {
 		}
 		catch (SQLException ex2)
 		{
-			System.out.println("Message: " + ex2.getMessage());
+			System.err.println("Message: " + ex2.getMessage());
 			System.exit(-1);
 		}
 	}
@@ -828,7 +827,7 @@ private static void payFine()
 	}
 
 	catch (SQLException ex) {
-		System.out.println("Message: " + ex.getMessage());
+		System.err.println("Message: " + ex.getMessage());
 		try 
 		{
 			// undo the insert
@@ -836,7 +835,7 @@ private static void payFine()
 		}
 		catch (SQLException ex2)
 		{
-			System.out.println("Message: " + ex2.getMessage());
+			System.err.println("Message: " + ex2.getMessage());
 			System.exit(-1);
 		}
 	}
@@ -865,7 +864,7 @@ private static void updateFine(int fid)
 	}
 	catch (SQLException ex)
 	{
-		System.out.println("Message: " + ex.getMessage());
+		System.err.println("Message: " + ex.getMessage());
 
 		try 
 		{
@@ -873,7 +872,7 @@ private static void updateFine(int fid)
 		}
 		catch (SQLException ex2)
 		{
-			System.out.println("Message: " + ex2.getMessage());
+			System.err.println("Message: " + ex2.getMessage());
 			System.exit(-1);
 		}
 	}	
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 22485d7..4bd9c49 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -54,17 +54,17 @@ public class ClerkUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 			try {
 				Main.con.close();
 				System.exit(-1);
 			}
 			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
+				System.err.println("Message: " + ex.getMessage());
 			}
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		}
 	}
 
@@ -128,10 +128,10 @@ public class ClerkUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 			try 
 			{
 				// undo the insert
@@ -139,7 +139,7 @@ public class ClerkUser {
 			}
 			catch (SQLException ex2)
 			{
-				System.out.println("Message: " + ex2.getMessage());
+				System.err.println("Message: " + ex2.getMessage());
 				System.exit(-1);
 			}
 		}
@@ -213,10 +213,10 @@ public class ClerkUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 			try 
 			{
 				// undo the insert
@@ -224,7 +224,7 @@ public class ClerkUser {
 			}
 			catch (SQLException ex2)
 			{
-				System.out.println("Message: " + ex2.getMessage());
+				System.err.println("Message: " + ex2.getMessage());
 				System.exit(-1);
 			}
 		}
@@ -257,10 +257,10 @@ public class ClerkUser {
 		}
 		
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 			try 
 			{
 				// undo the insert
@@ -268,7 +268,7 @@ public class ClerkUser {
 			}
 			catch (SQLException ex2)
 			{
-				System.out.println("Message: " + ex2.getMessage());
+				System.err.println("Message: " + ex2.getMessage());
 				System.exit(-1);
 			}
 		}
@@ -294,7 +294,7 @@ public class ClerkUser {
 	}
 	catch (SQLException ex)
 	{
-	    System.out.println("Message: " + ex.getMessage());
+	    System.err.println("Message: " + ex.getMessage());
 	    
 	    try 
 	    {
@@ -302,7 +302,7 @@ public class ClerkUser {
 	    }
 	    catch (SQLException ex2)
 	    {
-		System.out.println("Message: " + ex2.getMessage());
+		System.err.println("Message: " + ex2.getMessage());
 		System.exit(-1);
 	    }
 	}	
@@ -418,10 +418,10 @@ public class ClerkUser {
 
 		}
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		}
 	}
 
@@ -511,7 +511,7 @@ public class ClerkUser {
 			statement.close();
 			
 		} catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		}
 	}
 
@@ -524,7 +524,7 @@ public class ClerkUser {
 		return sqlDate;
 		}
 		catch (ParseException p) {
-			System.out.println("Message: Date must be in format dd/MM/yy.");
+			System.err.println("Message: Date must be in format dd/MM/yy.");
 			return null;
 		}		
 	}
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 744f252..ea9d372 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -33,8 +33,8 @@ public class LibrarianUser {
 
 				switch (choice) {
 				case 1:  addBook(); break;
-				case 2:  reportCheckedOutBooks(); break; // TODO reportCheckedOutBooks() NOT DONE YET
-				case 3:  mostPopular(); break; // TODO mostPopular()
+				case 2:  reportCheckedOutBooks(); break;
+				case 3:  mostPopular(); break; 
 				case 4:  quit = true; 
 				}
 			}
@@ -45,17 +45,17 @@ public class LibrarianUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 			try {
 				Main.con.close();
 				System.exit(-1);
 			}
 			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
+				System.err.println("Message: " + ex.getMessage());
 			}
 		}
 		catch (SQLException ex)	{
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		}
 	}
 
@@ -86,13 +86,13 @@ public class LibrarianUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 			try {
 				Main.con.close();
 				System.exit(-1);
 			}
 			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
+				System.err.println("Message: " + ex.getMessage());
 			}
 		}
 	}
@@ -217,10 +217,10 @@ public class LibrarianUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 			try 
 			{
 				// undo the insert
@@ -228,7 +228,7 @@ public class LibrarianUser {
 			}
 			catch (SQLException ex2)
 			{
-				System.out.println("Message: " + ex2.getMessage());
+				System.err.println("Message: " + ex2.getMessage());
 				System.exit(-1);
 			}
 		}
@@ -296,10 +296,10 @@ public class LibrarianUser {
 		}
 
 		catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 			try 
 			{
 				// undo the insert
@@ -307,13 +307,10 @@ public class LibrarianUser {
 			}
 			catch (SQLException ex2)
 			{
-				System.out.println("Message: " + ex2.getMessage());
+				System.err.println("Message: " + ex2.getMessage());
 				System.exit(-1);
 			}
 		}
-
-
-
 	}
 	
 
@@ -422,15 +419,15 @@ public class LibrarianUser {
 			// the ResultSet will also be closed
 			statement.close();
 		} catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
+			System.err.println("Message: " + ex.getMessage());
 		} catch (IOException e) {
-			System.out.println("IOException!");
+			System.err.println("IOException!");
 			try {
 				Main.con.close();
 				System.exit(-1);
 			}
 			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
+				System.err.println("Message: " + ex.getMessage());
 			}
 		}
 	}
@@ -453,7 +450,7 @@ public class LibrarianUser {
 			System.out.println("Also specify the year:\n>>");
 			String year = Main.in.readLine();
 			Statement statement = Main.con.createStatement();
-			ResultSet query = statement.executeQuery("SELECT A.callNumber, A.title, A.mainAuthor, A.isbn , COUNT(B.borid) AS rating "  
+			ResultSet query = statement.executeQuery("SELECT A.callNumber, A.title, A.mainAuthor, A.isbn , COUNT(B.borid) AS count "  
 												+ "FROM Borrowing B "
 												+ "LEFT JOIN Book A "
 												+ "ON B.callNumber=A.callNumber "
@@ -478,22 +475,23 @@ public class LibrarianUser {
 				String title = query.getString("title");
 				String isbn = query.getString("isbn");
 				String mainAuthor = query.getString("mainAuthor");
-				int rating = query.getInt("rating");
+				int count = query.getInt("count");
 
 				System.out.printf("%-10.10s", callNumber);
 				System.out.printf("%-30.30s", title);
-				System.out.printf("%-10.10s", isbn);
 				System.out.printf("%-20.20s", mainAuthor);
-				System.out.printf("%-10.10s", rating);
+				System.out.printf("%-10.10s", isbn);
+				System.out.printf("%-10.10s\n", count);
 			}
 
 			// close the statement;
 			// the ResultSet will also be closed
 			statement.close();
+			
 		} catch (SQLException e) {
-			System.out.println("Message: " + e.getMessage());
+			System.err.println("Message: " + e.getMessage());
 		} catch (IOException e) {
-			System.out.println("Message: " + e.getMessage());
+			System.err.println("Message: " + e.getMessage());
 		}
 	}
 }

commit cd480dea62f4b8083ab6247e06e78ee8731852fc
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 17:47:28 2014 -0700

    pull from remote

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 995439c..68c13f1 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -150,7 +150,7 @@ public class ClerkUser {
 	 * Checks out items borrowed by a borrower.  Borrowers provide their bid and a list
 	 * of callNumbers and copyNos of the items they wish to check out. 
 	 */
-	private static void checkOutItems() {
+	private static void checkOutItems() throws ParseException {
 		int 			   bid;
 		List<String>	   callNumbers;
 		Statement  		   s;
@@ -168,8 +168,8 @@ public class ClerkUser {
 
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT bid "
-										+ "FROM Borrower "
-										+ "WHERE bid = " + bid);
+					+ "FROM Borrower "
+					+ "WHERE bid = " + bid);
 			// check that bid is valid
 			if (!rs.next()){
 				System.out.println("Invalid borrower ID.");
@@ -185,8 +185,8 @@ public class ClerkUser {
 			// after checking out items using helper function, 
 			// display all that were successfully checked out
 			ResultSet rs2 = s.executeQuery("SELECT callNumber, copyNo "
-										 + "FROM Borrowing "
-										 + "WHERE bid=" + bid + " AND outDate=TO_DATE('" + sqlToday + "', 'YYYY-MM-DD')");
+					+ "FROM Borrowing "
+					+ "WHERE bid=" + bid + " AND outDate=" + sqlToday.toString());
 
 			// display columns
 			ResultSetMetaData rsmd = rs2.getMetaData();
@@ -230,7 +230,45 @@ public class ClerkUser {
 		}
 	}
 
-	private static void checkOutItem (int bid, int callNumber, Date outDate) {
+	private static void checkOutItem(int bid, int callNumber, Date outDate) throws ParseException {
+
+		Statement			s;
+
+		try 
+		{
+			//check if book is in library
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT callNumber "
+					+ "FROM BookCopy  "
+					+ "WHERE status = 'in' "
+					+ "AND callNumber = " + callNumber);
+
+			if (!rs.next()){
+				System.out.println("Book not available for borrowing at this time.");
+
+			}
+			else {
+				addBorrowingHelper(bid, callNumber, outDate);
+			}
+
+		}
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+	}
+
+	private static void addBorrowingHelper(int bid, int callNumber, Date outDate) throws ParseException {
 
 		int				   copyNo;
 		PreparedStatement  ps;
@@ -241,12 +279,11 @@ public class ClerkUser {
 			ps.setInt(1, bid);
 			ps.setInt(2, callNumber);
 			
-			System.out.print("Copy number of item " + callNumber + ": ");
+			System.out.print("Copy number of item" + callNumber + ": ");
 			copyNo = Integer.parseInt(Main.in.readLine());
-			ps.setInt(3, copyNo);
 
-			ps.setInt(3, copyNo);
 			ps.setDate(4, outDate);		
+			System.out.println("got past insert");
 
 			ps.executeUpdate();
 
@@ -285,6 +322,8 @@ public class ClerkUser {
 	{
 	  ps = Main.con.prepareStatement("UPDATE bookCopy SET status = 'out' WHERE callNumber = ? AND copyNo = ?");
 	
+
+	  //ps.setString(1, status);
 	  ps.setInt(1, callNumber);
 	  ps.setInt(2, copyNo);
 	  ps.execute();
@@ -309,6 +348,60 @@ public class ClerkUser {
 	}	
     }
 
+	
+	static Date stringToDate(String date) {
+		try {SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
+		java.util.Date utilDate = fm.parse(date);
+		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
+		return sqlDate;
+		}
+		catch (ParseException p) {
+			System.out.println("Message: Date must be in format dd/MM/yy.");
+			return null;
+		}		
+	}
+
+	public static Date getDueDate(int bid, Date outDate){
+
+		Statement 				s;
+		int 					bookTimeLimit = 0;
+
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
+					+ "FROM Borrower B, BorrowerType C "
+					+ "WHERE B.type = C.type "
+					+ "AND B.bid = " + bid);
+			while (rs.next()){
+				bookTimeLimit = rs.getInt(1);
+
+			}
+		}
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try 
+			{
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2)
+			{
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}
+
+		String outDateS = outDate.toString();
+		String[] tokens = outDateS.split("-");
+
+		GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
+		gregCalendar.add(Calendar.DAY_OF_YEAR, bookTimeLimit*7);
+		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
+		return sqlDate;		
+	}
+
 
 	/*
 	 * Process a return.  Clerk provides item's callNumber and copyNo, and the system 
@@ -334,7 +427,7 @@ public class ClerkUser {
 		PreparedStatement   ps4;
 
 		try {
-			ps1 = Main.con.prepareStatement("UPDATE Borrowing SET inDate=TO_DATE(?, 'YYYY-MM-DD') WHERE callNumber= ? AND copyNo= ?");
+			ps1 = Main.con.prepareStatement("UPDATE Borrowing SET inDate= ? WHERE callNumber= ? AND copyNo= ?");
 			ps2 = Main.con.prepareStatement("INSERT INTO Fine VALUES (fid_c.nextval,?,?,?,?)");
 			ps3 = Main.con.prepareStatement("UPDATE BookCopy SET status='on hold' WHERE callNumber= ? AND copyNo= ?");
 			ps4 = Main.con.prepareStatement("UPDATE BookCopy SET status='in' WHERE callNumber= ? AND copyNo= ?");
@@ -349,9 +442,9 @@ public class ClerkUser {
 
 			// get borid and bid of borrowing
 			ResultSet rs = s.executeQuery("SELECT A.borid, A.bid, A.outDate, C.bookTimeLimit "
-										+ "FROM Borrowing A, Borrower B, BorrowerType C "
-										+ "WHERE A.callNumber=" + callNumber + " AND A.copyNo=" + copyNo
-										+ " AND A.bid=B.bid AND B.type=C.type");
+					+ "FROM Borrowing A, Borrower B, BorrowerType C "
+					+ "WHERE A.callNumber=" + callNumber + " AND A.copyNo=" + copyNo
+					+ " AND A.bid=B.bid AND B.type=C.type");
 			if (!rs.next()) {
 				System.out.println("This item has not been borrowed, please check the call number and copy number.");
 				return;
@@ -371,7 +464,7 @@ public class ClerkUser {
 
 			// if item is overdue, place a fine on the borrower
 			if (overdue(getDueDate(bid, outDate))) {
-				double fine = overdueBy(getDueDate(bid, outDate)) * 0.10;  // charged 10 cents a day
+				double fine = overdueBy(outDate) * 0.10;  // charged 10 cents a day
 				ps2.setDouble(1, fine);
 				ps2.setDate(2, sqlToday);
 				ps2.setDate(3, null);
@@ -383,7 +476,6 @@ public class ClerkUser {
 			ResultSet rs2 = s.executeQuery("SELECT bid "
 					+ "FROM HoldRequest "
 					+ "WHERE callNumber=" + callNumber);
-			
 			// if there is a hold request on the book, register as on hold
 			if (rs2.next()) {
 				ps3.setInt(1, callNumber);
@@ -403,7 +495,6 @@ public class ClerkUser {
 				System.out.println("Borrower "+ bid + ", " + nameHold + " (" + emailAddrHold + 
 						"), has been notified about their held item.");
 			}
-			
 			// otherwise update book copy so that it's registered as 'in'
 			else {
 				ps4.setInt(1, callNumber);
@@ -434,7 +525,6 @@ public class ClerkUser {
 	private static void checkOverdueItems() {
 		Statement statement;
 		ResultSet rs;
-		List<String> bidsS = null;
 		try {
 			statement = Main.con.createStatement();
 
@@ -506,143 +596,19 @@ public class ClerkUser {
 				}
 			}
 
-
-			System.out.print("\n\nList of borrower IDs you would like to send an overdue email to (type in 'all' to send to all borrowers or simply press Enter to not send): ");
-			try {
-				bidsS = Arrays.asList(Main.in.readLine().split(","));
-			} catch (IOException e) {
-				System.out.println("Message: " + e.getMessage());
-				e.printStackTrace();
-			}
-			
-			if (bidsS.get(0).equals("all")){
-				
-				ResultSet rs2 = statement.executeQuery("SELECT E.bid "
-						+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
-						+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
-						+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
-						+ "ORDER BY E.bid, E.name ASC");
-				
-				while (rs2.next()) {
-					Integer bid = rs2.getInt("bid");
-					sendEmailOverdue(bid);
-				}
-			}
-			else if (bidsS.get(0).trim().equals("")){
-				System.out.println("Email not sent");
-			}
+			//TODO: Should be able to send email to each user or all the user.
 			
-			else {
-			for (String b: bidsS){
-				int bid = Integer.parseInt(b.trim());
-				sendEmailOverdue(bid);
-			}
-			}
 			// close the statement;
 			// the ResultSet will also be closed
 			statement.close();
-			
 		} catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
 		}
 	}
 
-
-	private static void sendEmailOverdue(int bid) {
-		Statement 				s;
-		String 					emailAddrHold;
-		String					nameHold;
-
-		try 
-		{
-			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT emailAddress, name "
-					+ "FROM Borrower "
-					+ "WHERE bid = " + bid);
-			
-			while (rs.next()){
-				emailAddrHold = rs.getString(1);
-				nameHold = rs.getString(2);
-				System.out.println("\nBorrower "+ bid + ", " + nameHold + " (" + emailAddrHold + 
-						"), has been notified about their overdue item.");
-			}
-		}
-
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-}
-
-	
-	// Converts a date to string in proper format
-	public static Date stringToDate(String date) {
-		try {SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
-		java.util.Date utilDate = fm.parse(date);
-		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
-		return sqlDate;
-		}
-		catch (ParseException p) {
-			System.out.println("Message: Date must be in format dd/MM/yy.");
-			return null;
-		}		
-	}
-
-	// Gets due date of an item given borrower's bid and out date of item
-	public static Date getDueDate(int bid, Date outDate){
-
-		Statement 				s;
-		int 					bookTimeLimit = 0;
-
-		try {
-			s = Main.con.createStatement();
-			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
-					+ "FROM Borrower B, BorrowerType C "
-					+ "WHERE B.type = C.type "
-					+ "AND B.bid = " + bid);
-			while (rs.next()){
-				bookTimeLimit = rs.getInt(1);
-			}
-			String outDateS = outDate.toString();
-			String[] tokens = outDateS.split("-");
-
-			GregorianCalendar gregCalendar = new GregorianCalendar(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[2]));
-			gregCalendar.add(Calendar.DAY_OF_YEAR, bookTimeLimit*7);
-			java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
-			return sqlDate;	
-		}
-			catch (SQLException ex) {
-				System.out.println("Message: " + ex.getMessage());
-				try 
-				{
-					// undo the insert
-					Main.con.rollback();	
-				}
-				catch (SQLException ex2)
-				{
-					System.out.println("Message: " + ex2.getMessage());
-					System.exit(-1);
-				}
-	
-	}
-		return null;
-		
-		}
-		
-	
-	// Returns true of dueDate < today's date
 	public static boolean overdue(Date dueDate){
 		String dueDateString = dueDate.toString();
-		//System.out.println("Item due: " + dueDateString);
+		System.out.println("Item due: " + dueDateString);
 
 		String[] tokens = dueDateString.split("-");
 
@@ -656,7 +622,6 @@ public class ClerkUser {
 			return false;
 	}
 
-	// Returns # days item is overdue by
 	public static int overdueBy(Date dueDate) {
 		String dueDateString = dueDate.toString();
 		String[] tokens = dueDateString.split("-");
@@ -668,7 +633,7 @@ public class ClerkUser {
 		java.util.Date dueDate1 = gregDueDate.getTime();
 		java.util.Date today = gregToday.getTime();
 
-		double diff = (double) ((today.getTime() - dueDate1.getTime()))/(1000*60*60*60*24);
+		double diff = (double) ((today.getTime() - dueDate1.getTime()))/(1000*60*60*24);
 		return (int) diff;
 	}
 }
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 744f252..88ed6e0 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -453,12 +453,12 @@ public class LibrarianUser {
 			System.out.println("Also specify the year:\n>>");
 			String year = Main.in.readLine();
 			Statement statement = Main.con.createStatement();
-			ResultSet query = statement.executeQuery("SELECT A.callNumber, A.title, A.mainAuthor, A.isbn , COUNT(B.borid) AS rating "  
+			ResultSet query = statement.executeQuery("SELECT A.title, A.mainAuthor, A.isbn , COUNT(B.borid) AS rating "  
 												+ "FROM Borrowing B "
 												+ "LEFT JOIN Book A "
 												+ "ON B.callNumber=A.callNumber "
 												+ "WHERE B.outDate > '"+year+"-01-01' AND B.outDate < '"+year+"-12-31' "
-												+ "GROUP BY A.callNumber, A.title, A.mainAuthor, A.isbn "
+												+ "GROUP BY A.callNumber "
 												+ "ORDER BY rating desc");
 			// get info on ResultSet
 			ResultSetMetaData rsmd = query.getMetaData();
@@ -474,13 +474,11 @@ public class LibrarianUser {
 			for(int i = 0; i < amount; i++){
 				query.next();
 				// simplified output formatting; truncation may occur
-				int callNumber = query.getInt("callNumber");
 				String title = query.getString("title");
 				String isbn = query.getString("isbn");
 				String mainAuthor = query.getString("mainAuthor");
 				int rating = query.getInt("rating");
 
-				System.out.printf("%-10.10s", callNumber);
 				System.out.printf("%-30.30s", title);
 				System.out.printf("%-10.10s", isbn);
 				System.out.printf("%-20.20s", mainAuthor);
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 43541f3..907ad51 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -223,6 +223,8 @@ insert into Borrowing values
 insert into Borrowing values
 (300, 333, 600, 1, TO_DATE('2014-01-29', 'YYYY-MM-DD'), TO_DATE('2014-01-31', 'YYYY-MM-DD'));
 insert into Borrowing values
+(400, 444, 999, 2, TO_DATE('2013-09-01', 'YYYY-MM-DD'), TO_DATE('2013-10-10', 'YYYY-MM-DD'));
+insert into Borrowing values
 (550, 555, 999, 3, TO_DATE('2014-03-29', 'YYYY-MM-DD'), null);
 
 

commit 5f8b7959d48a0b8ebebd022c46d646fc2b99652a
Merge: 96c78f1 cd480de
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 17:51:14 2014 -0700

    Merge branch 'fromRemote'
    
    Conflicts (resolved):
    	Project Part III/src/users/ClerkUser.java
    	Project Part III/src/users/LibrarianUser.java

commit f88b13cfcab3e6bde8121f1bca6b874bff5a9e0f
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 17:55:40 2014 -0700

    error fixed in mostpopular

diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 744f252..cfa42ca 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -412,7 +412,7 @@ public class LibrarianUser {
 				System.out.printf("%-20.20s", duedate);
 				
 				if(ClerkUser.overdue(duedate)){
-					System.out.println("This item missed dueDate:" + duedate);
+					System.out.println("This item is overdue. (dueDate:" + duedate + ")");
 					//TODO: let it flag.
 				}
 				else
@@ -457,7 +457,7 @@ public class LibrarianUser {
 												+ "FROM Borrowing B "
 												+ "LEFT JOIN Book A "
 												+ "ON B.callNumber=A.callNumber "
-												+ "WHERE B.outDate > '"+year+"-01-01' AND B.outDate < '"+year+"-12-31' "
+												+ "WHERE B.outDate > TO_DATE('"+year+"-01-01', 'YYYY-MM-DD') AND B.outDate < TO_DATE('"+year+"-12-31', 'YYYY-MM-DD') "
 												+ "GROUP BY A.callNumber, A.title, A.mainAuthor, A.isbn "
 												+ "ORDER BY rating desc");
 			// get info on ResultSet

commit 1417bd5f5f992c571d1ccebb755d2fe35a9110fe
Merge: f88b13c 5f8b795
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 17:56:25 2014 -0700

    merge

commit 0ac773a5178b83a6d4a9c71511a404f2c191ef63
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 19:04:03 2014 -0700

    Small fix in checkOutItem(), moved helper method code into parent
    method.

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index b19d383..51f66fe 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -150,7 +150,7 @@ public class ClerkUser {
 	 * Checks out items borrowed by a borrower.  Borrowers provide their bid and a list
 	 * of callNumbers and copyNos of the items they wish to check out. 
 	 */
-	private static void checkOutItems() throws ParseException {
+	private static void checkOutItems() {
 		int 			   bid;
 		List<String>	   callNumbers;
 		Statement  		   s;
@@ -175,6 +175,8 @@ public class ClerkUser {
 				System.out.println("Invalid borrower ID.");
 				return;
 			}
+
+			System.out.println("Items on loan: \n");
 			
 			// check out all items that borrower listed
 			for (String c: callNumbers){
@@ -182,34 +184,8 @@ public class ClerkUser {
 				checkOutItem(bid, callNumber, sqlToday);
 			}
 
-			// after checking out items using helper function, 
-			// display all that were successfully checked out
-			ResultSet rs2 = s.executeQuery("SELECT callNumber, copyNo "
-					+ "FROM Borrowing "
-					+ "WHERE bid=" + bid + " AND outDate=" + sqlToday.toString());
-
-			// display columns
-			ResultSetMetaData rsmd = rs2.getMetaData();
-			int numCols = rsmd.getColumnCount();
-			System.out.println(" ");
-
-			for (int i = 0; i < numCols; i++)
-			{
-				System.out.printf("%-15s", rsmd.getColumnName(i+1));    
-			}
-
-			System.out.println(" ");
-
-			// display checked out items
-			while(rs2.next())
-			{
-				int iCallNumber = rs.getInt(1);
-				System.out.printf("%-10.10s", iCallNumber);
-
-				int iCopyNo = rs.getInt(2);
-				System.out.printf("%-20.20s", iCopyNo); 
-			}
-			System.out.println("Items due " + sqlToday);
+			// print due date
+			System.out.println("Items due " + getDueDate(bid, sqlToday));
 		}
 
 		catch (IOException e) {
@@ -230,125 +206,75 @@ public class ClerkUser {
 		}
 	}
 
-	private static void checkOutItem(int bid, int callNumber, Date outDate) throws ParseException {
+	private static void checkOutItem(int bid, int callNumber, Date outDate) {
 
-		Statement			s;
+		int				   copyNo;
+		Statement          s;
+		PreparedStatement  ps1;
+		PreparedStatement  ps2;
+		
+		try {
+			
+			System.out.print("Copy number of item " + callNumber + ": ");
+			copyNo = Integer.parseInt(Main.in.readLine());
 
-		try 
-		{
 			//check if book is in library
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT callNumber "
 					+ "FROM BookCopy  "
 					+ "WHERE status = 'in' "
-					+ "AND callNumber = " + callNumber);
-
+					+ "AND callNumber = " + callNumber + "AND copyNo = " + copyNo);
 			if (!rs.next()){
-				System.out.println("Book not available for borrowing at this time.");
-
+				System.out.println("Book " + callNumber + " " + copyNo + " is not available for borrowing at this time."
+						+ "Please check the call number and copy number entered.");
 			}
-			else {
-				addBorrowingHelper(bid, callNumber, outDate);
-			}
-
-		}
-
-		catch (SQLException ex) {
-			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
-				// undo the insert
-				Main.con.rollback();	
-			}
-			catch (SQLException ex2)
-			{
-				System.out.println("Message: " + ex2.getMessage());
-				System.exit(-1);
-			}
-		}
-	}
-
-	private static void addBorrowingHelper(int bid, int callNumber, Date outDate) throws ParseException {
 
-		int				   copyNo;
-		PreparedStatement  ps;
-
-		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (borid_c.nextval,?,?,?,TO_DATE(?, 'YYYY-MM-DD'),null)");
-
-			ps.setInt(1, bid);
-			ps.setInt(2, callNumber);
-			
-			System.out.print("Copy number of item" + callNumber + ": ");
-			copyNo = Integer.parseInt(Main.in.readLine());
+			// if book is in library
+			else {		
+				
+				// create new borrowing tuple
+				ps1 = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (borid_c.nextval,?,?,?,TO_DATE(?, 'YYYY-MM-DD'),null)");
 
-			ps.setDate(4, outDate);		
-			System.out.println("got past insert");
+				ps1.setInt(1, bid);
+				ps1.setInt(2, callNumber);
+				ps1.setInt(3, copyNo);
+				ps1.setDate(4, outDate);		
 
-			ps.executeUpdate();
+				ps1.executeUpdate();
+				System.out.println(callNumber + " " + copyNo);
+				
+				
+				// update book copy status
+				ps2 = Main.con.prepareStatement("UPDATE bookCopy SET status = 'out' WHERE callNumber = ? AND copyNo = ?");
 
-			updateBookCopyStatus(callNumber, copyNo);
+				ps2.setInt(1, callNumber);
+				ps2.setInt(2, copyNo);
+				ps2.execute();
 
-			// commit work 
-			Main.con.commit();
-			ps.close();
+				// commit work 
+				Main.con.commit();
+				ps1.close();
+				ps2.close();
+			}
 		}
-		
+
 		catch (IOException e) {
 			System.err.println("IOException!");
 		}
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
-			try 
-			{
+			try {
 				// undo the insert
 				Main.con.rollback();	
 			}
-			catch (SQLException ex2)
-			{
+			catch (SQLException ex2) {
 				System.err.println("Message: " + ex2.getMessage());
 				System.exit(-1);
 			}
 		}
 	}
 
-    private static void updateBookCopyStatus(int callNumber, int copyNo)
-    {
-
-	String             status = "out";
-	PreparedStatement  ps;
-	  
-	try
-	{
-	  ps = Main.con.prepareStatement("UPDATE bookCopy SET status = 'out' WHERE callNumber = ? AND copyNo = ?");
-	
-
-	  //ps.setString(1, status);
-	  ps.setInt(1, callNumber);
-	  ps.setInt(2, copyNo);
-	  ps.execute();
-
-	  Main.con.commit();
 
-	  ps.close();
-	}
-	catch (SQLException ex)
-	{
-	    System.err.println("Message: " + ex.getMessage());
-	    
-	    try 
-	    {
-		Main.con.rollback();	
-	    }
-	    catch (SQLException ex2)
-	    {
-		System.err.println("Message: " + ex2.getMessage());
-		System.exit(-1);
-	    }
-	}	
-    }
-
-	
 	/*
 	 * Process a return.  Clerk provides item's callNumber and copyNo, and the system 
 	 * registers the item as 'in'.  
@@ -356,7 +282,7 @@ public class ClerkUser {
 	 * If there is a hold request on this item, the system registers the item as 'on hold'.
 	 */
 	private static void processReturn() {
-		
+
 		// provided by clerk
 		int 				callNumber;
 		int					copyNo;
@@ -422,6 +348,7 @@ public class ClerkUser {
 			ResultSet rs2 = s.executeQuery("SELECT bid "
 					+ "FROM HoldRequest "
 					+ "WHERE callNumber=" + callNumber);
+
 			// if there is a hold request on the book, register as on hold
 			if (rs2.next()) {
 				ps3.setInt(1, callNumber);
@@ -441,6 +368,7 @@ public class ClerkUser {
 				System.out.println("Borrower "+ bid + ", " + nameHold + " (" + emailAddrHold + 
 						"), has been notified about their held item.");
 			}
+
 			// otherwise update book copy so that it's registered as 'in'
 			else {
 				ps4.setInt(1, callNumber);
@@ -453,6 +381,7 @@ public class ClerkUser {
 			ps1.close();
 			ps2.close();
 			ps3.close();
+			ps4.close();
 
 		}
 		catch (IOException e) {
@@ -477,11 +406,11 @@ public class ClerkUser {
 			System.out.println("List of items overdue and the borrowers who have checked them out:");
 
 			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate "
-							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
-							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
-							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
-							+ "ORDER BY E.bid, E.name ASC");
-			
+					+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
+					+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
+					+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
+					+ "ORDER BY E.bid, E.name ASC");
+
 			// get info on ResultSet
 			ResultSetMetaData rsmd = rs.getMetaData();
 
@@ -503,9 +432,9 @@ public class ClerkUser {
 				Integer bid = rs.getInt("bid");
 				Date outDate = rs.getDate("outDate");
 				Date duedate = getDueDate(bid, outDate);
-				
+
 				if (overdue(duedate)) {
-					
+
 					System.out.printf("%-9.9s", bid);
 					String name = rs.getString("name");
 					if(rs.wasNull())
@@ -543,7 +472,7 @@ public class ClerkUser {
 			}
 
 			//TODO: Should be able to send email to each user or all the user.
-			
+
 			// close the statement;
 			// the ResultSet will also be closed
 			statement.close();
@@ -552,8 +481,8 @@ public class ClerkUser {
 		}
 	}
 
-	
-	
+
+
 	// Converts a date to string in proper format
 	public static Date stringToDate(String date) {
 		try {SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
@@ -607,7 +536,7 @@ public class ClerkUser {
 		java.sql.Date sqlDate = new java.sql.Date(gregCalendar.getTime().getTime());
 		return sqlDate;		
 	}
-	
+
 	// Returns true of dueDate < today's date
 	public static boolean overdue(Date dueDate){
 		String dueDateString = dueDate.toString();
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index 2de6a9f..b98c790 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -455,9 +455,9 @@ public class LibrarianUser {
 												+ "FROM Borrowing B "
 												+ "LEFT JOIN Book A "
 												+ "ON B.callNumber=A.callNumber "
-												+ "WHERE B.outDate > '"+year+"-01-01' AND B.outDate < '"+year+"-12-31' "
-												+ "GROUP BY A.callNumber "
-												+ "ORDER BY rating desc");
+												+ "WHERE B.outDate > TO_DATE('"+year+"-01-01', 'YYYY-MM-DD') AND B.outDate < TO_DATE('"+year+"-12-31', 'YYYY-MM-DD') "
+												+ "GROUP BY A.callNumber, A.title, A.mainAuthor, A.isbn "
+												+ "ORDER BY count desc");
 			// get info on ResultSet
 			ResultSetMetaData rsmd = query.getMetaData();
 			// get number of columns
@@ -470,7 +470,10 @@ public class LibrarianUser {
 			System.out.println(" ");
 			
 			for(int i = 0; i < amount; i++){
-				query.next();
+				if (!query.next()) {
+					System.out.println("End of results");
+					return;
+				}
 				// simplified output formatting; truncation may occur
 				String title = query.getString("title");
 				String isbn = query.getString("isbn");

commit c97ecc3864eb4bb98cf5e50be4f015e639c392d3
Merge: 0ac773a 1417bd5
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Sun Mar 30 19:07:36 2014 -0700

    Merge branch 'fromRemote'
    
    Conflicts (resolved):
    	Project Part III/src/users/LibrarianUser.java

commit 895bba0a585c0fdaca6de401d1068793e3d290ad
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Sun Mar 30 19:52:41 2014 -0700

    recovering past commit

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 51f66fe..0b788b6 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -400,6 +400,7 @@ public class ClerkUser {
 	private static void checkOverdueItems() {
 		Statement statement;
 		ResultSet rs;
+		List<String> bidsS = null;
 		try {
 			statement = Main.con.createStatement();
 
@@ -472,7 +473,34 @@ public class ClerkUser {
 			}
 
 			//TODO: Should be able to send email to each user or all the user.
-
+			System.out.print("\n\nList of borrower IDs you would like to send an overdue email to (type in 'all' to send to all borrowers or simply press Enter to not send): ");
+			try {
+				bidsS = Arrays.asList(Main.in.readLine().split(","));
+			} catch (IOException e) {
+				System.out.println("Message: " + e.getMessage());
+				e.printStackTrace();
+			}
+			if (bidsS.get(0).equals("all")){
+				ResultSet rs2 = statement.executeQuery("SELECT E.bid "
+						+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
+						+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
+						+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
+						+ "ORDER BY E.bid, E.name ASC");
+				while (rs2.next()) {
+					Integer bid = rs2.getInt("bid");
+					sendEmailOverdue(bid);
+				}
+			}
+			else if (bidsS.get(0).trim().equals("")){
+				System.out.println("Email not sent");
+			}
+			else {
+				for (String b: bidsS){
+					int bid = Integer.parseInt(b.trim());
+					sendEmailOverdue(bid);
+				}
+			}			
+			
 			// close the statement;
 			// the ResultSet will also be closed
 			statement.close();
@@ -537,10 +565,48 @@ public class ClerkUser {
 		return sqlDate;		
 	}
 
+		private static void sendEmailOverdue(int bid) {
+
+				Statement 				s;
+				String 					emailAddrHold;
+				String					nameHold;
+
+				try 
+				{
+					s = Main.con.createStatement();
+					ResultSet rs = s.executeQuery("SELECT emailAddress, name "
+							+ "FROM Borrower "
+						+ "WHERE bid = " + bid);
+					while (rs.next()){
+						emailAddrHold = rs.getString(1);
+						nameHold = rs.getString(2);
+						System.out.println("\nBorrower "+ bid + ", " + nameHold + " (" + emailAddrHold + 
+								"), has been notified about their overdue item.");
+					}
+				}
+				catch (SQLException ex) {
+					System.out.println("Message: " + ex.getMessage());
+					try 
+					{
+						// undo the insert
+						Main.con.rollback();	
+					}
+					catch (SQLException ex2)
+					{
+						System.out.println("Message: " + ex2.getMessage());
+						System.exit(-1);
+					}
+				}
+			}
+
+		
+
+		
+	
 	// Returns true of dueDate < today's date
 	public static boolean overdue(Date dueDate){
 		String dueDateString = dueDate.toString();
-		System.out.println("Item due: " + dueDateString);
+		//System.out.println("Item due: " + dueDateString);
 
 		String[] tokens = dueDateString.split("-");
 

commit 731f64be9325f15e813108f061b0369c1c761cba
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Mon Mar 31 01:13:24 2014 -0700

    Cleaned up code, fixed date and display and other small bugs.  Fully
    tested.
    
    NOTE:  To get rid of date problems use command "alter session set
    nls_date_format='YYYY-MM-DD'" after you log into SQLPlus.

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index 9aad7f0..dee6be8 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -63,7 +63,8 @@ public class BorrowerUser {
 
 
 	/*
-	 * Keyword book search on titles, authors, and/or subjects.
+	 * Search for books using keyword search on titles, authors and subjects. The result is a list 
+	 * of books that match the search together with the number of copies that are in and out. 
 	 */
 	private static void searchBook() {
 
@@ -258,7 +259,7 @@ public class BorrowerUser {
 				System.out.printf("%-15.15s", inLib);
 				System.out.printf("%-15.15s\n", outLib);
 			}
-			
+
 			System.out.println("\n No more search results");
 			s.close();
 		}
@@ -359,11 +360,12 @@ public class BorrowerUser {
 
 
 	/*
-	 * Displays the items the borrower has currently borrowed and
-	 * not yet returned, any outstanding fines and 
-	 * the hold requests that have been placed by the borrower.
+	 * Check his/her account. The system will display the items the borrower has currently 
+	 * borrowed and not yet returned, any outstanding fines and the hold requests that have been 
+	 * placed by the borrower. 
 	 */
 	private static void checkAccount() {
+
 		int userBid;
 
 		String title;
@@ -391,8 +393,8 @@ public class BorrowerUser {
 				return;
 			}
 
-			// query of title, isbn and mainAuthor when borrowing's inDate is null.
-			System.out.println("List of items you currently borrowed:");
+			// Items on loan
+			System.out.println("\nList of items currently on loan:");
 			rs = s.executeQuery("SELECT A.title, A.isbn, A.mainAuthor "
 					+ "FROM Book A, Borrowing B, BookCopy C, Borrower D "
 					+ "WHERE B.bid = D.bid AND B.callNumber = C.callNumber "
@@ -404,15 +406,12 @@ public class BorrowerUser {
 
 			// get number of columns
 			int numCols = rsmd.getColumnCount();
-
 			System.out.println(" ");
-
 			// display column names;
 			for (int i = 0; i < numCols; i++) {
 				// get column name and print it
 				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
 			}
-
 			System.out.println(" ");
 
 			while (rs.next()) {
@@ -443,9 +442,10 @@ public class BorrowerUser {
 				}
 			}
 
-			//total outstanding fine
-			System.out.println("\nOutstanding fine:");
-			rs = s.executeQuery("SELECT A.amount, A.issuedDate, E.title "
+
+			// Total outstanding fine
+			System.out.println("\nOutstanding fines:");
+			rs = s.executeQuery("SELECT A.amount, TO_CHAR(A.issuedDate, 'YYYY-MM-DD') as issuedDate, E.title "
 					+ "FROM Fine A, Borrowing B, Borrower C, BookCopy D, Book E "
 					+ "WHERE A.borid=B.borid AND B.bid=C.bid AND D.callNumber=E.callNumber "
 					+ "AND B.callNumber=D.callNumber AND B.copyNo=D.copyNo "
@@ -455,13 +455,11 @@ public class BorrowerUser {
 
 			// get number of columns
 			numCols = rsmd.getColumnCount();
-
 			// display column names;
 			for (int i = 0; i < numCols; i++) {
 				// get column name and print it
 				System.out.printf("%-20s", rsmd.getColumnName(i + 1));
 			}
-
 			System.out.println(" ");
 
 			while (rs.next()) {
@@ -477,12 +475,14 @@ public class BorrowerUser {
 					System.out.printf("%-20.20s", amount);
 				}
 				totalAmount += amount;
+
 				issuedDate = rs.getDate("issuedDate");
 				if (rs.wasNull()) {
 					System.out.printf("%-15.15s", " ");
 				} else {
 					System.out.printf("%-15.15s", issuedDate);
 				}
+
 				title = rs.getString("title");
 				if (rs.wasNull()) {
 					System.out.printf("%-50.50s\n", " ");
@@ -493,9 +493,10 @@ public class BorrowerUser {
 			System.out.println("Total amount of outstanding fine is: " + totalAmount);
 			System.out.println(" ");
 
+
 			//Hold Request List
-			System.out.println("HOLD REQUEST LIST placed by you:");
-			rs = s.executeQuery("SELECT B.title, A.issuedDate "
+			System.out.println("\nPlaced hold requests:");
+			rs = s.executeQuery("SELECT B.title, TO_CHAR(A.issuedDate, 'YYYY-MM-DD') as issuedDate "
 					+ "FROM HoldRequest A, Book B, Borrower C "
 					+ "WHERE A.callNumber=B.callNumber AND A.bid=C.bid "
 					+ "AND C.bid=" + userBid);
@@ -504,13 +505,11 @@ public class BorrowerUser {
 
 			// get number of columns
 			numCols = rsmd.getColumnCount();
-
 			// display column names;
 			for (int i = 0; i < numCols; i++) {
 				// get column name and print it
 				System.out.printf("%-20s", rsmd.getColumnName(i + 1));
 			}
-
 			System.out.println(" ");
 
 			while (rs.next()) {
@@ -535,7 +534,7 @@ public class BorrowerUser {
 			// close the statement;
 			// the ResultSet will also be closed
 			s.close();
-			
+
 		} catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 		} catch (IOException e) {
@@ -545,338 +544,260 @@ public class BorrowerUser {
 
 
 	/*
-	 * Helper method to get # book copies in/out/on hold.
+	 * Place a hold request for a book that is out. When the item is returned, the system sends an 
+	 * email to the borrower and informs the library clerk to keep the book out of the shelves. 
 	 */
-	private static int[] statusCounts (int callNumber) {
+	private static void requestHold() {
 
-		// result array
-		int[] statusCounts = new int[3];
+		int					bid;
+		int					callNumber;
+		Statement			s;
+		PreparedStatement   ps;
 
 		try {
-			Statement s = Main.con.createStatement();
+			s = Main.con.createStatement();
 
-			// # in library
-			ResultSet rsi = s.executeQuery("SELECT COUNT(*) "
-					+ "FROM BookCopy "
-					+ "WHERE callNumber=" + callNumber + " AND status='in'");
-			if (rsi.next()) {
-				statusCounts[0] = rsi.getInt(1);
+			System.out.println("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			// check that this is a valid Borrower account
+			ResultSet rs = s.executeQuery("SELECT * "
+					+ "FROM Borrower "
+					+ "WHERE bid=" + bid);
+			if (rs.next() == false) {
+				System.out.println("This is not a valid borrower ID.");
+				s.close();
+				return;
 			}
 
-			// # out of library 
-			ResultSet rso = s.executeQuery("SELECT COUNT(*) "
-					+ "FROM BookCopy "
-					+ "WHERE callNumber=" + callNumber + " AND status='out'");
-			if (rso.next()) {
-				statusCounts[1] = rso.getInt(1);
-			}
-			
-			// # on hold
-			ResultSet rsh = s.executeQuery("SELECT COUNT(*) "
-					+ "FROM BookCopy "
-					+ "WHERE callNumber=" + callNumber + "AND status='on hold'");
-			if (rsh.next()) {
-				statusCounts[2] = rsh.getInt(1);
-			}
-			
-			return statusCounts;
-		}
-		
-		catch (SQLException ex) {
-			System.err.println("Message: " + ex.getMessage());
-			return null;
-		}
-	}
-	
-private static void requestHold() {
-		int					bid = 0;
-		int					callNumber = 0;
-		Statement			s;
-		Statement			s2;
-		
-		System.out.println("Borrower ID: ");
-		try {
-			bid = Integer.parseInt(Main.in.readLine());
-		} catch (NumberFormatException e) {
-			System.out.println("Message: " + e.getMessage());
-			e.printStackTrace();
-		} catch (IOException e) {
-			System.out.println("Message: " + e.getMessage());
-			e.printStackTrace();
-		}
-		System.out.println("Book call number: ");
-		try {
+			System.out.println("Book call number: ");
 			callNumber = Integer.parseInt(Main.in.readLine());
-		} catch (NumberFormatException e) {
-			System.out.println("Message: " + e.getMessage());
-			e.printStackTrace();
-		} catch (IOException e) {
-			System.out.println("Message: " + e.getMessage());
-			e.printStackTrace();
-		}
-		
-		
-		try 
-		{
-			s2 = Main.con.createStatement();
-			ResultSet rs2 = s2.executeQuery("SELECT copyNo  "
-										+ "FROM BookCopy  "
-										+ "WHERE callNumber = " + callNumber
-										+ "AND status = 'in'");
-
-			if (rs2.next()){
-				System.out.println("Book is available for borrowing");
+			// check that this is a valid Book call number
+			rs = s.executeQuery("SELECT * "
+					+ "FROM Borrower "
+					+ "WHERE bid=" + bid);
+			if (rs.next() == false) {
+				System.out.println("This is not a valid item call number.");
+				s.close();
 				return;
 			}
-			else {
-
-				s = Main.con.createStatement();
-				ResultSet rs = s.executeQuery("SELECT copyNo  "
-						+ "FROM BookCopy  "
-						+ "WHERE callNumber = " + callNumber
-						+ "AND status = 'out'");
 
-				if (rs.next()){
-				updateBookCopyStatus(callNumber, rs.getInt(1));
-				addHoldRequest(bid, callNumber);
-				System.out.println("Hold request successful! An email will be sent to you when the book is available.");
-				}
-			else {
-					System.out.println("No books available for hold");
-				}
-			
+			// check that book is not in library
+			rs = s.executeQuery("SELECT copyNo  "
+					+ "FROM BookCopy  "
+					+ "WHERE callNumber = " + callNumber
+					+ " AND status = 'in'");
+			if (rs.next()){
+				System.out.println("Book is currently available in the library.");
+				return;
 			}
+
+
+			// Place a hold request
+			ps = Main.con.prepareStatement("INSERT INTO holdRequest VALUES (hid_c.nextval,?,?,?)");
+
+			java.sql.Date 			issuedDate;
+			GregorianCalendar gregCalendar = new GregorianCalendar();  // issuedDate is today
+			issuedDate = new java.sql.Date(gregCalendar.getTime().getTime());
+
+			ps.setInt(1, bid);
+			ps.setInt(2, callNumber);
+			ps.setDate(3, issuedDate);
+
+			ps.executeUpdate();
+
+			// commit work 
+			Main.con.commit();
+			ps.close();
+
+			System.out.println("Hold request placed. You will be notified by email when the book is available.");
 		}
 
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
-			try 
-			{
+			try {
 				// undo the insert
 				Main.con.rollback();	
 			}
-			catch (SQLException ex2)
-			{
+			catch (SQLException ex2) {
 				System.err.println("Message: " + ex2.getMessage());
 				System.exit(-1);
 			}
 		}
+		catch (IOException e) {
+			System.err.println("Message: " + e.getMessage());
+		}
 	}
 
-private static void updateBookCopyStatus(int callNumber, int copyNo)
-{
 
-	PreparedStatement  ps;
-
-	try
+	/*
+	 * Pay a fine.
+	 */
+	private static void payFine()
 	{
-		ps = Main.con.prepareStatement("UPDATE bookCopy SET status = 'on hold' WHERE callNumber = ? AND copyNo = ?");
-
+		int		   bid;
+		Statement  s;
 
-		ps.setInt(1, callNumber);
-		ps.setInt(2, copyNo);
-		ps.execute();
+		int		   sfid;
+		String	   ans;
 
-		Main.con.commit();
+		try
+		{
+			s = Main.con.createStatement();
 
-		ps.close();
-	}
-	catch (SQLException ex)
-	{
-		System.out.println("Message: " + ex.getMessage());
+			System.out.print("Borrower ID: ");
+			bid = Integer.parseInt(Main.in.readLine());
+			// check that this is a valid Borrower account
+			ResultSet rs = s.executeQuery("SELECT * "
+					+ "FROM Borrower "
+					+ "WHERE bid=" + bid);
+			if (rs.next() == false) {
+				System.out.println("This is not a valid borrower ID.");
+				s.close();
+				return;
+			}
 
-		try 
-		{
-			Main.con.rollback();	
-		}
-		catch (SQLException ex2)
-		{
-			System.err.println("Message: " + ex2.getMessage());
-			System.exit(-1);
-		}
-	}	
-}
+			// Get all fines owed by borrower
+			rs = s.executeQuery("SELECT fid, amount, TO_CHAR(issuedDate, 'YYYY-MM-DD') as issDate "
+					+ "FROM Fine F, Borrowing B "
+					+ "WHERE F.borid = B.borid "
+					+ "AND B.bid = " + bid);
 
-private static void addHoldRequest(int bid, int callNumber) {
+			// get info on ResultSet
+			ResultSetMetaData rsmd = rs.getMetaData();
+			// get number of columns
+			int numCols = rsmd.getColumnCount();
 
+			System.out.println(" ");
+			// display column names;
+			for (int i = 0; i < numCols; i++)
+			{
+				// get column name and print it
+				System.out.printf("%-15s", rsmd.getColumnName(i+1));    
+			}
+			System.out.println(" ");
 
-	java.sql.Date 			issuedDate;
-	PreparedStatement  ps;
+			while(rs.next())
+			{
+				// simplified output formatting; truncation may occur
 
-	try {
-		ps = Main.con.prepareStatement("INSERT INTO holdRequest VALUES (hid_c.nextval,?,?,?)");
+				int fid = rs.getInt(1);
+				System.out.printf("%-15.15s", fid);
 
-		
-		ps.setInt(1, bid);
-		ps.setInt(2, callNumber);
-		GregorianCalendar gregCalendar = new GregorianCalendar();
-		issuedDate = new java.sql.Date(gregCalendar.getTime().getTime());
-		ps.setDate(3, issuedDate);
+				double amount = rs.getDouble(2);
+				System.out.printf("%-15.15s", amount);
 
+				Date issuedDate = rs.getDate(3);
+				System.out.printf("%-15.15s", issuedDate);
+			}
 
-		ps.executeUpdate();
 
-		// commit work 
-		Main.con.commit();
-		ps.close();
+			// Ask borrower to select which fine to pay for
+			System.out.println("\n\nSelect ID of fine you wish to pay: ");
+			sfid = Integer.parseInt(Main.in.readLine());
 
-	}
+			System.out.println("Proceed with payment?(y/n)");
+			ans = Main.in.readLine();
 
+			if (ans.equals("y")){
+				updateFine(sfid);
+				System.out.println("Fine has been paid.");
+			}
+			else {
+				System.out.println("Payment cancelled.");
+			}
+		}
 
-	catch (SQLException ex) {
-		System.err.println("Message: " + ex.getMessage());
-		try 
-		{
-			// undo the insert
-			Main.con.rollback();	
+		catch (SQLException ex) {
+			System.err.println("Message: " + ex.getMessage());
+			try {
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2) {
+				System.err.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
 		}
-		catch (SQLException ex2)
-		{
-			System.err.println("Message: " + ex2.getMessage());
-			System.exit(-1);
+		catch (IOException e) {
+			System.err.println("Message: " + e.getMessage());
 		}
 	}
-}
-
-private static void payFine()
-{
-	int		   bid = 0;
-	Statement  s;
-	int		   fid = 0;
-	String	   ans = "";
 
-	try
+	private static void updateFine(int fid)
 	{
-		
-		System.out.print("Borrower ID: ");
-		try {
-			bid = Integer.parseInt(Main.in.readLine());
-		} catch (NumberFormatException e) {
-			System.out.println("Message: " + e.getMessage());
-			e.printStackTrace();
-		} catch (IOException e) {
-			System.out.println("Message: " + e.getMessage());
-			e.printStackTrace();
-		}
-		
-		s = Main.con.createStatement();
-
-		ResultSet rs = s.executeQuery("SELECT fid, amount, issuedDate "
-				+ "FROM Fine F, Borrowing B "
-				+ "WHERE F.borid = B.borid "
-				+ "AND B.bid = " + bid);
-		
-		// get info on ResultSet
-		ResultSetMetaData rsmd = rs.getMetaData();
-
-		// get number of columns
-		int numCols = rsmd.getColumnCount();
+		Date			   paidDate;
+		PreparedStatement  ps;
 
-		System.out.println(" ");
-
-		
-		// display column names;
-		for (int i = 0; i < numCols; i++)
-		{
-			// get column name and print it
-
-			System.out.printf("%-15s", rsmd.getColumnName(i+1));    
-		}
-		
-		System.out.println(" ");
-
-		while(rs.next())
+		try
 		{
-			// simplified output formatting; truncation may occur
+			ps = Main.con.prepareStatement("UPDATE fine SET paidDate = ? WHERE fid = ?");
 
-			fid = rs.getInt(1);
-			System.out.printf("%-15.15s", fid);
-
-			double amount = rs.getDouble(2);
-			System.out.printf("%-15.15s", amount);
-
-			Date issuedDate = rs.getDate(3);
-			System.out.printf("%-15.15s", issuedDate);
-
-		}
-		System.out.println("\n\nSelect ID of fine that will be paid for: ");
-		try {
-			fid = Integer.parseInt(Main.in.readLine());
-		} catch (NumberFormatException e) {
-			System.out.println("Message: " + e.getMessage());
-			e.printStackTrace();
-		} catch (IOException e) {
-			System.out.println("Message: " + e.getMessage());
-			e.printStackTrace();
-		}
-		System.out.println("Proceed with payment?(y/n)");
-		try {
-			ans = Main.in.readLine();
-		} catch (IOException e) {
-			System.out.println("Message: " + e.getMessage());
-			e.printStackTrace();
-		}
+			GregorianCalendar gregCalendar = new GregorianCalendar();
+			paidDate = new java.sql.Date(gregCalendar.getTime().getTime());
+			
+			ps.setDate(1, paidDate);
+			ps.setInt(2, fid);
+			
+			ps.execute();
+			Main.con.commit();
 
-		if (ans.equals("y")){
-			updateFine(fid);
-			System.out.println("Fine has been paid.");
-		}
-		else{
-			System.out.println("Payment cancelled.");
+			ps.close();
 		}
+		
+		catch (SQLException ex) {
+			System.err.println("Message: " + ex.getMessage());
+			try {
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2) {
+				System.err.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
+		}	
 	}
 
-	catch (SQLException ex) {
-		System.err.println("Message: " + ex.getMessage());
-		try 
-		{
-			// undo the insert
-			Main.con.rollback();	
-		}
-		catch (SQLException ex2)
-		{
-			System.err.println("Message: " + ex2.getMessage());
-			System.exit(-1);
-		}
-	}
-}
 
-private static void updateFine(int fid)
-{
 
-	Date			   paidDate;
-	PreparedStatement  ps;
+	//Helper method to get # book copies in/out/on hold.
+	public static int[] statusCounts (int callNumber) {
 
-	try
-	{
-		ps = Main.con.prepareStatement("UPDATE fine SET paidDate = ? WHERE fid = ?");
+		// result array
+		int[] statusCounts = new int[3];
 
+		try {
+			Statement s = Main.con.createStatement();
 
-		GregorianCalendar gregCalendar = new GregorianCalendar();
-		paidDate = new java.sql.Date(gregCalendar.getTime().getTime());
-		ps.setDate(1, paidDate);
-		ps.setInt(2, fid);
-		ps.execute();
+			// # in library
+			ResultSet rsi = s.executeQuery("SELECT COUNT(*) "
+					+ "FROM BookCopy "
+					+ "WHERE callNumber=" + callNumber + " AND status='in'");
+			if (rsi.next()) {
+				statusCounts[0] = rsi.getInt(1);
+			}
 
-		Main.con.commit();
+			// # out of library 
+			ResultSet rso = s.executeQuery("SELECT COUNT(*) "
+					+ "FROM BookCopy "
+					+ "WHERE callNumber=" + callNumber + " AND status='out'");
+			if (rso.next()) {
+				statusCounts[1] = rso.getInt(1);
+			}
 
-		ps.close();
-	}
-	catch (SQLException ex)
-	{
-		System.err.println("Message: " + ex.getMessage());
+			// # on hold
+			ResultSet rsh = s.executeQuery("SELECT COUNT(*) "
+					+ "FROM BookCopy "
+					+ "WHERE callNumber=" + callNumber + "AND status='on hold'");
+			if (rsh.next()) {
+				statusCounts[2] = rsh.getInt(1);
+			}
 
-		try 
-		{
-			Main.con.rollback();	
-		}
-		catch (SQLException ex2)
-		{
-			System.err.println("Message: " + ex2.getMessage());
-			System.exit(-1);
+			return statusCounts;
 		}
-	}	
-}
 
-}
+		catch (SQLException ex) {
+			System.err.println("Message: " + ex.getMessage());
+			return null;
+		}
+	}
 
+}
\ No newline at end of file
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 51f66fe..e454ab7 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -6,7 +6,7 @@ import java.io.IOException;
 import java.sql.*;
 import java.util.GregorianCalendar;
 import java.text.ParseException;
-import java.text.SimpleDateFormat;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Calendar;
 import java.util.List;
@@ -85,30 +85,52 @@ public class ClerkUser {
 		PreparedStatement  ps;
 
 		try {
-			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (bid_c.nextval,?,?,?,?,?,?,TO_DATE(?, 'YYYY-MM-DD'),?)");
+			ps = Main.con.prepareStatement("INSERT INTO Borrower VALUES (bid_c.nextval,?,?,?,?,?,?,?,?)");
 
-			System.out.print("Borrower password: ");
+			System.out.println("Please fill out required fields (*).");
+			
+			System.out.print("Borrower password *: ");
 			password = Main.in.readLine();
 			ps.setString(1, password);
 
-			System.out.print("Borrower name: ");
+			System.out.print("Borrower name *: ");
 			name = Main.in.readLine();
 			ps.setString(2, name);
 
 			System.out.print("Borrower address: ");
 			address = Main.in.readLine();
-			ps.setString(3, address);
+			if (address.length() == 0) {
+				ps.setString(3, null);
+			} else {
+				ps.setString(3, address);
+			}
 
 			System.out.print("Borrower phone number: ");
 			phone = Main.in.readLine();
-			ps.setString(4,  phone);
+			if (phone.length() == 0) {
+				ps.setString(4, null);
+			} else {
+				ps.setString(4,  phone);
+			}
 
-			System.out.print("Borrower email address: ");
+			System.out.print("Borrower email address *: ");
 			emailAddress = Main.in.readLine();
 			ps.setString(5, emailAddress);
 
-			System.out.print("Borrower SIN or student number: ");
+			System.out.print("Borrower SIN or student number *: ");
 			sinOrStNo = Integer.parseInt(Main.in.readLine());
+			// check if account already exists for this sinOrStNo
+			Statement s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT * "
+					+ "FROM Borrower "
+					+ "WHERE sinOrStNo='" + sinOrStNo + "'");
+			if (rs.next()) {
+				System.out.println("This SIN or student number is already associated with an account."
+						+ "Please check the digits with the borrower.");
+				s.close();
+				ps.close();
+				return;
+			}
 			ps.setInt(6, sinOrStNo);
 
 			// expiry date set to 5 years from now
@@ -125,6 +147,8 @@ public class ClerkUser {
 			// commit work 
 			Main.con.commit();
 			ps.close();
+			
+			System.out.println("New borrower successfully added to database.");
 		}
 
 		catch (IOException e) {
@@ -147,8 +171,11 @@ public class ClerkUser {
 
 
 	/*
-	 * Checks out items borrowed by a borrower.  Borrowers provide their bid and a list
-	 * of callNumbers and copyNos of the items they wish to check out. 
+	 * Check-out items borrowed by a borrower. To borrow items, borrowers provide their card 
+	 * number and a list with the call numbers of the items they want to check out. The system 
+	 * determines if the borrower's account is valid and if the library items are available for 
+	 * borrowing. Then it creates one or more borrowing records and prints a note with the 
+	 * items and their due day (which is giver to the borrower).  
 	 */
 	private static void checkOutItems() {
 		int 			   bid;
@@ -168,16 +195,14 @@ public class ClerkUser {
 
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT bid "
-					+ "FROM Borrower "
-					+ "WHERE bid = " + bid);
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
 			// check that bid is valid
 			if (!rs.next()){
 				System.out.println("Invalid borrower ID.");
 				return;
 			}
 
-			System.out.println("Items on loan: \n");
-			
 			// check out all items that borrower listed
 			for (String c: callNumbers){
 				int callNumber = Integer.parseInt(c.trim());
@@ -185,7 +210,7 @@ public class ClerkUser {
 			}
 
 			// print due date
-			System.out.println("Items due " + getDueDate(bid, sqlToday));
+			System.out.println("Checked out items due " + getDueDate(bid, sqlToday));
 		}
 
 		catch (IOException e) {
@@ -212,9 +237,9 @@ public class ClerkUser {
 		Statement          s;
 		PreparedStatement  ps1;
 		PreparedStatement  ps2;
-		
+
 		try {
-			
+			// get copy number of item to be checked out
 			System.out.print("Copy number of item " + callNumber + ": ");
 			copyNo = Integer.parseInt(Main.in.readLine());
 
@@ -231,9 +256,9 @@ public class ClerkUser {
 
 			// if book is in library
 			else {		
-				
+
 				// create new borrowing tuple
-				ps1 = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (borid_c.nextval,?,?,?,TO_DATE(?, 'YYYY-MM-DD'),null)");
+				ps1 = Main.con.prepareStatement("INSERT INTO Borrowing VALUES (borid_c.nextval,?,?,?,?,null)");
 
 				ps1.setInt(1, bid);
 				ps1.setInt(2, callNumber);
@@ -241,9 +266,9 @@ public class ClerkUser {
 				ps1.setDate(4, outDate);		
 
 				ps1.executeUpdate();
-				System.out.println(callNumber + " " + copyNo);
-				
-				
+				System.out.println(callNumber + " " + copyNo + " has been checked out.");
+
+
 				// update book copy status
 				ps2 = Main.con.prepareStatement("UPDATE bookCopy SET status = 'out' WHERE callNumber = ? AND copyNo = ?");
 
@@ -276,10 +301,11 @@ public class ClerkUser {
 
 
 	/*
-	 * Process a return.  Clerk provides item's callNumber and copyNo, and the system 
-	 * registers the item as 'in'.  
-	 * If the item is overdue, a fine is placed on the borrower.
-	 * If there is a hold request on this item, the system registers the item as 'on hold'.
+	 * Processes a return. When an item is returned, the clerk records the return by providing the 
+	 * item's catalogue number. The system determines the borrower who had borrowed the 
+	 * item and records that the item is "in". If the item is overdue, a fine is assessed for the 
+	 * borrower. If there is a hold request for this item by another borrower, the item is 
+	 * registered as "on hold" and a message is send to the borrower who made the hold request. 
 	 */
 	private static void processReturn() {
 
@@ -394,26 +420,30 @@ public class ClerkUser {
 
 
 	/*
-	 * Displays a list of the items that are overdue and the borrowers who have checked them out. 
-	 * The clerk may decide to send an email messages to any of them (or to all of them).
+	 * Checks overdue items. The system displays a list of the items that are overdue and the 
+	 * borrowers who have checked them out. The clerk may decide to send an email messages 
+	 * to any of them (or to all of them). 
 	 */
 	private static void checkOverdueItems() {
+		
 		Statement statement;
 		ResultSet rs;
+		
+		List<Integer> overdueBids = new ArrayList<Integer>();  // for storing overdue item borrower ids, for emailing
+		
 		try {
 			statement = Main.con.createStatement();
 
 			System.out.println("List of items overdue and the borrowers who have checked them out:");
 
-			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, B.outDate "
+			rs = statement.executeQuery("SELECT E.bid, E.name, E.emailAddress, A.callNumber, C.copyNo, A.title, TO_CHAR(B.outDate, 'YYYY-MM-DD') as outDate "
 					+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
 					+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
-					+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "//(OR C.status = 'out')B.indate is null means item has not been returned.
+					+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "
 					+ "ORDER BY E.bid, E.name ASC");
 
 			// get info on ResultSet
 			ResultSetMetaData rsmd = rs.getMetaData();
-
 			// get number of columns
 			int numCols = rsmd.getColumnCount();
 
@@ -436,11 +466,14 @@ public class ClerkUser {
 				if (overdue(duedate)) {
 
 					System.out.printf("%-9.9s", bid);
+					overdueBids.add(bid);
+					
 					String name = rs.getString("name");
 					if(rs.wasNull())
 						System.out.printf("%-20.20s", " ");
 					else
 						System.out.printf("%-20.20s", name);
+					
 					String email = rs.getString("emailAddress");
 					if(rs.wasNull())
 						System.out.printf("%-30.30s", " ");
@@ -467,62 +500,106 @@ public class ClerkUser {
 					} else {
 						System.out.printf("%-30.30s", title);
 					}
-					System.out.printf("%-20.20s", duedate);
+					System.out.printf("%-20.20s\n", duedate);
 				}
 			}
 
-			//TODO: Should be able to send email to each user or all the user.
+			// Clerk can send an email to each user or all users
+
+			List<String> bidsS = null;
+
+			System.out.print("\n\nPlease list IDs of borrowers you would like to send an overdue email to, "
+					+ "or input 'all' to send a message to all borrowers: ");
+
+			bidsS = Arrays.asList(Main.in.readLine().split(","));
+
+			if (bidsS.get(0).equals("all")){
+				for (int b : overdueBids) {
+					sendEmailOverdue(b);
+				}
+			}
+			
+			else {
+				for (String bs: bidsS){
+					int b = Integer.parseInt(bs.trim());
+					sendEmailOverdue(b);
+				}
+			}
 
 			// close the statement;
 			// the ResultSet will also be closed
 			statement.close();
+		}
+
+		catch (IOException e) {
+			System.out.println("Message: " + e.getMessage());
+			e.printStackTrace();
 		} catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 		}
+
 	}
 
+	// Sends email to borrower with overdue item
+	private static void sendEmailOverdue(int bid) {
+		Statement 				s;
+		String 					emailAddrHold;
+		String					nameHold;
 
+		try 
+		{
+			s = Main.con.createStatement();
+			ResultSet rs = s.executeQuery("SELECT emailAddress, name "
+										+ "FROM Borrower "
+										+ "WHERE bid = " + bid);
 
-	// Converts a date to string in proper format
-	public static Date stringToDate(String date) {
-		try {SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yy");
-		java.util.Date utilDate = fm.parse(date);
-		java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
-		return sqlDate;
+			while (rs.next()){
+				emailAddrHold = rs.getString(1);
+				nameHold = rs.getString(2);
+				System.out.println("\nBorrower "+ bid + ", " + nameHold + " (" + emailAddrHold + 
+						"), has been notified about their overdue item.");
+			}
+		}
+
+		catch (SQLException ex) {
+			System.out.println("Message: " + ex.getMessage());
+			try {
+				// undo the insert
+				Main.con.rollback();	
+			}
+			catch (SQLException ex2) {
+				System.out.println("Message: " + ex2.getMessage());
+				System.exit(-1);
+			}
 		}
-		catch (ParseException p) {
-			System.err.println("Message: Date must be in format dd/MM/yy.");
-			return null;
-		}		
+
 	}
 
+
+
 	// Gets due date of an item given borrower's bid and out date of item
 	public static Date getDueDate(int bid, Date outDate){
-
 		Statement 				s;
 		int 					bookTimeLimit = 0;
 
 		try {
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT bookTimeLimit "
-					+ "FROM Borrower B, BorrowerType C "
-					+ "WHERE B.type = C.type "
-					+ "AND B.bid = " + bid);
+										+ "FROM Borrower B, BorrowerType C "
+										+ "WHERE B.type = C.type "
+										+ "AND B.bid = " + bid);
 			while (rs.next()){
 				bookTimeLimit = rs.getInt(1);
-
 			}
 		}
 
 		catch (SQLException ex) {
 			System.out.println("Message: " + ex.getMessage());
-			try 
-			{
+			try {
 				// undo the insert
 				Main.con.rollback();	
 			}
-			catch (SQLException ex2)
-			{
+			catch (SQLException ex2) {
 				System.out.println("Message: " + ex2.getMessage());
 				System.exit(-1);
 			}
@@ -540,7 +617,6 @@ public class ClerkUser {
 	// Returns true of dueDate < today's date
 	public static boolean overdue(Date dueDate){
 		String dueDateString = dueDate.toString();
-		System.out.println("Item due: " + dueDateString);
 
 		String[] tokens = dueDateString.split("-");
 
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index aa4a35d..ddcfad3 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -61,8 +61,8 @@ public class LibrarianUser {
 
 
 	/*
-	 * Add a new book to the library.
-	 * Librarian should provide all info for book.
+	 * Adds a new book or new copy of an existing book to the library. The librarian provides 
+	 * the information for the new book, and the system adds it to the library.
 	 */
 	private static void addBook() {
 		// Search by title or author or subject
@@ -323,40 +323,50 @@ public class LibrarianUser {
 	 * by the report.
 	 */
 	private static void reportCheckedOutBooks() {
+		
 		String subject;
+		
 		try {
-			Statement statement = Main.con.createStatement();
+			Statement s = Main.con.createStatement();
 			ResultSet rs;
-			System.out.println("Please put subject information (if you just press enter, it will print out everything): \n>> ");
+			
+			System.out.println("Please enter a subject to report. \n "
+					+ "If no subject is inputted, the report will contain all subjects.): \n>> ");
 			subject = Main.in.readLine();
+			
 			// check that this is a valid subject
 			if (!subject.trim().equals("")) {
-				rs = statement.executeQuery("SELECT * " + "FROM HasSubject "
-						+ "WHERE subject='" + subject+"'");
-				if (rs.next() == false) {
-					System.out
-							.println("I don't see such a thing in our database HasSubject table.");
-					statement.close();
+				rs = s.executeQuery("SELECT * " 
+										  + "FROM HasSubject "
+										  + "WHERE subject='" + subject+"'");
+				if (!rs.next()) {
+					System.out.println("This subject does not exist in the library database.");
+					s.close();
 					return;
 				}
 			}
-			// query of callNumber, copyNo, title, outDate and bookTimeLimit
-			// when borrowing's inDate is
-			// null.
+			
+			// query callNumber, copyNo, title, outDate and bookTimeLimit
+			// when borrowing's inDate is null.
 			System.out.println("List of items that are out :");
 			
-			if(!subject.trim().equals(""))//subject is inputed
-				rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, B.bid "
+			//if subject is inputed
+			if(!subject.trim().equals("")) {
+				rs = s.executeQuery("SELECT A.callNumber, C.copyNo, A.title, TO_CHAR(B.outDate, 'YYYY-MM-DD') as outDate, B.bid "
 							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E, HasSubject F "
 							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid AND F.callNumber = A.callNumber "
 							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL AND F.subject='" + subject + "' "
 							+ "ORDER BY A.callNumber, C.copyNo, A.title ASC");
-			else//empty subject, all of the items will be selected
-				rs = statement.executeQuery("SELECT A.callNumber, C.copyNo, A.title, B.outDate, B.bid "
+			}
+			
+			//empty subject, all of the items will be selected
+			else {
+				rs = s.executeQuery("SELECT A.callNumber, C.copyNo, A.title, TO_CHAR(B.outDate, 'YYYY-MM-DD') as outDate, B.bid "
 							+ "FROM Book A, Borrowing B, BookCopy C, BorrowerType D, Borrower E "
 							+ "WHERE B.callNumber = C.callNumber AND B.copyNo = C.copyNo AND D.type = E.type AND E.bid = B.bid "
 							+ "AND C.callNumber = A.callNumber AND B.inDate IS NULL "
 							+ "ORDER BY A.callNumber, C.copyNo, A.title ASC");
+			}
 			
 			// get info on ResultSet
 			ResultSetMetaData rsmd = rs.getMetaData();
@@ -372,6 +382,7 @@ public class LibrarianUser {
 				System.out.printf("%-25s", rsmd.getColumnName(i + 1));
 			}
 			System.out.printf("%-25s", "DUEDATE");
+			System.out.printf("%-25s", "OVERDUE");  // for flagging
 			
 			System.out.println(" ");
 
@@ -408,16 +419,18 @@ public class LibrarianUser {
 				Date duedate = ClerkUser.getDueDate(bid,outDate);			
 				System.out.printf("%-20.20s", duedate);
 				
+				// if item overdue, system flags it
 				if(ClerkUser.overdue(duedate)){
-					System.out.println("This item is overdue. (dueDate:" + duedate + ")");
-					//TODO: let it flag.
+					System.out.printf("%-20.20s\n", "*");
 				}
 				else
-					System.out.println(" ");
+					System.out.printf("%-20.20s\n", " ");
 			}
+			
 			// close the statement;
 			// the ResultSet will also be closed
-			statement.close();
+			s.close();
+			
 		} catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 		} catch (IOException e) {
@@ -432,6 +445,7 @@ public class LibrarianUser {
 		}
 	}
 	
+	
 	/*
 	 * Generate a report with the most popular items in a given year. The
 	 * librarian provides a year and a number n. The system lists out the top n
@@ -441,13 +455,13 @@ public class LibrarianUser {
 	private static void mostPopular() {
 		try {
 			System.out.println("Generating a report with most popular items.");
-			System.out.println("Please specify how many books you want to add into the report:\n>>");
+			System.out.println("Please specify how many books you wish to add into the report:\n>>");
 			int amount = Integer.parseInt(Main.in.readLine());
 			if(amount < 0){
-				System.out.println("negative is not allowed.");
+				System.out.println("Negatives are not allowed.");
 				return;
 			}
-			System.out.println("Also specify the year:\n>>");
+			System.out.println("Please specify the year you wish to report:\n>>");
 			String year = Main.in.readLine();
 			Statement statement = Main.con.createStatement();
 
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 43541f3..2d95d64 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -117,15 +117,15 @@ insert into BorrowerType values
 
 
 insert into Borrower values
-(111, 'aaaa', 'Daniel', '1466 robson st', '6044443333', null, '11111111', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'student');
+(111, 'aaaa', 'Daniel', '1466 robson st', null, 'dannyboy@hotmail.com', '11111111', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'student');
 insert into Borrower values
-(222, 'bbbb', 'Vicky', 'vancouver', '6044441111', 'hello@gmaill.com', '22222222', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'staff');
+(222, 'bbbb', 'Vicky', null, '6044441111', 'hello@gmaill.com', '22222222', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'staff');
 insert into Borrower values
-(333, 'cccc', 'Zet', 'UBC', '6041233333', 'bye@gmail.com', '33333333', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'general');
+(333, 'cccc', 'Zet', null, null, 'bye@gmail.com', '33333333', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'general');
 insert into Borrower values
 (444, 'eeee', 'Rupert', '1234 granville st', '7789999999', 'o3i3@cs.ubc.ca', '44444444', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'staff');
 insert into Borrower values
-(555, 'dddd', 'Green', 'Surrey central st', '2744444222', ' ', '55555555', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'student');
+(555, 'dddd', 'Green', 'Surrey central st', '2744444222', 'leprechaun@hotmail.com', '55555555', TO_DATE('2016-04-01', 'YYYY-MM-DD'), 'student');
 
 
 insert into Book values
@@ -219,8 +219,6 @@ insert into Borrowing values
 insert into Borrowing values
 (900, 222, 999, 2, TO_DATE('2012-02-22', 'YYYY-MM-DD'), null);
 insert into Borrowing values
-(200, 222, 300, 1, TO_DATE('2014-02-22', 'YYYY-MM-DD'), null);
-insert into Borrowing values
 (300, 333, 600, 1, TO_DATE('2014-01-29', 'YYYY-MM-DD'), TO_DATE('2014-01-31', 'YYYY-MM-DD'));
 insert into Borrowing values
 (550, 555, 999, 3, TO_DATE('2014-03-29', 'YYYY-MM-DD'), null);

commit 80cc357ecf333c25308659f71cdb627337fb2fa2
Merge: 731f64b 895bba0
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Mon Mar 31 01:19:36 2014 -0700

    Merge remote-tracking branch 'origin/master'
    
    Conflicts (resolved):
    	Project Part III/src/users/ClerkUser.java

commit 838eecae8132ea868b19ebcefe242c593b08a391
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Mon Mar 31 12:42:12 2014 -0700

    Added catch blocks for when user doesn't enter input before hitting
    return.
    
    Added cover page and brief user manual.

diff --git a/Project Part III/cover_page b/Project Part III/cover_page
new file mode 100644
index 0000000..29c2359
--- /dev/null
+++ b/Project Part III/cover_page	
@@ -0,0 +1,13 @@
+COVER PAGE
+
+
+Byeng Hee Kang
+26719096
+
+Enoch Choi
+34885111
+
+Michelle Ng
+25743089
+
+Tony Chu
diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index dee6be8..df6b44b 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -56,6 +56,9 @@ public class BorrowerUser {
 				System.err.println("Message: " + ex.getMessage());
 			}
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("Please select an option.");
+		}
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 		}
@@ -100,6 +103,9 @@ public class BorrowerUser {
 				System.err.println("Message: " + ex.getMessage());
 			}
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("Please select an option.");
+		}
 	}
 
 	private static void searchBookByTitle() {	
@@ -540,6 +546,9 @@ public class BorrowerUser {
 		} catch (IOException e) {
 			System.err.println("Message: " + e.getMessage());
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 	}
 
 
@@ -626,6 +635,9 @@ public class BorrowerUser {
 		catch (IOException e) {
 			System.err.println("Message: " + e.getMessage());
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 	}
 
 
@@ -721,6 +733,9 @@ public class BorrowerUser {
 		catch (IOException e) {
 			System.err.println("Message: " + e.getMessage());
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 	}
 
 	private static void updateFine(int fid)
diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index 1f2e9d7..f7dda58 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -63,6 +63,9 @@ public class ClerkUser {
 				System.err.println("Message: " + ex.getMessage());
 			}
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("Please select an option.");
+		}
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 		}
@@ -149,11 +152,24 @@ public class ClerkUser {
 			ps.close();
 			
 			System.out.println("New borrower successfully added to database.");
+			
+			int bid;
+			// get new borrower's bid
+			rs = s.executeQuery("SELECT bid "
+					+ "FROM Borrower "
+					+ "WHERE sinOrStNo= '" + sinOrStNo + "'");
+			bid = rs.getInt(1);
+			s.close();
+			
+			System.out.println("New borrower id: " + bid);
 		}
 
 		catch (IOException e) {
 			System.err.println("IOException!");
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 			try 
@@ -216,6 +232,9 @@ public class ClerkUser {
 		catch (IOException e) {
 			System.err.println("IOException!");
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 			try 
@@ -286,6 +305,9 @@ public class ClerkUser {
 		catch (IOException e) {
 			System.err.println("IOException!");
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 			try {
@@ -413,6 +435,9 @@ public class ClerkUser {
 		catch (IOException e) {
 			System.err.println("IOException!");
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 		}
@@ -532,7 +557,8 @@ public class ClerkUser {
 		catch (IOException e) {
 			System.out.println("Message: " + e.getMessage());
 			e.printStackTrace();
-		} catch (SQLException ex) {
+		} 
+		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 		}
 
diff --git a/Project Part III/src/users/LibrarianUser.java b/Project Part III/src/users/LibrarianUser.java
index ddcfad3..7aa59aa 100644
--- a/Project Part III/src/users/LibrarianUser.java	
+++ b/Project Part III/src/users/LibrarianUser.java	
@@ -54,6 +54,9 @@ public class LibrarianUser {
 				System.err.println("Message: " + ex.getMessage());
 			}
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("Please select an option.");
+		}
 		catch (SQLException ex)	{
 			System.err.println("Message: " + ex.getMessage());
 		}
@@ -95,6 +98,9 @@ public class LibrarianUser {
 				System.err.println("Message: " + ex.getMessage());
 			}
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("Please select an option.");
+		}
 	}
 
 	private static void addNewBook() {
@@ -219,6 +225,9 @@ public class LibrarianUser {
 		catch (IOException e) {
 			System.err.println("IOException!");
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 			try 
@@ -298,6 +307,9 @@ public class LibrarianUser {
 		catch (IOException e) {
 			System.err.println("IOException!");
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 		catch (SQLException ex) {
 			System.err.println("Message: " + ex.getMessage());
 			try 
@@ -510,5 +522,8 @@ public class LibrarianUser {
 		} catch (IOException e) {
 			System.err.println("Message: " + e.getMessage());
 		}
+		catch (NumberFormatException ne) {
+			System.err.println("A required field was left blank.");
+		}
 	}
 }
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 2d95d64..b2f2741 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -50,7 +50,7 @@ create table Borrower
 	sinOrStNo varchar(10) not null,
 	expiryDate date null,
 	type varchar(10) not null,
-	FOREIGN KEY (type) references BorrowerType);
+	FOREIGN KEY (type) references BorrowerType ON DELETE CASCADE);
 
 create table Book
 	(callNumber integer not null PRIMARY KEY,
@@ -65,19 +65,19 @@ create table BookCopy
 	copyNo integer not null,
 	status varchar(10) null,
 	PRIMARY KEY (callNumber, copyNo),
-	FOREIGN KEY (callNumber) references Book);
+	FOREIGN KEY (callNumber) references Book ON DELETE CASCADE);
 
 create table HasAuthor
 	(callNumber integer not null,
 	name varchar(20) not null,
 	PRIMARY KEY (callNumber, name),
-	FOREIGN KEY (callNumber) references Book);
+	FOREIGN KEY (callNumber) references Book ON DELETE CASCADE);
 
 create table HasSubject
 	(callNumber integer not null,
 	subject varchar(50) not null,
 	PRIMARY KEY (callNumber, subject),
-	FOREIGN KEY (callNumber) references Book);
+	FOREIGN KEY (callNumber) references Book ON DELETE CASCADE);
 
 create table HoldRequest
 	(hid integer not null PRIMARY KEY,
@@ -85,7 +85,7 @@ create table HoldRequest
 	callNumber integer not null,
 	issuedDate date null,
 	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber) references Book);
+	FOREIGN KEY (callNumber) references Book ON DELELTE CASCADE);
 
 create table Borrowing
 	(borid integer not null PRIMARY KEY,
@@ -95,7 +95,7 @@ create table Borrowing
 	outDate date null,
 	inDate date null,
 	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber, copyNo) references BookCopy);
+	FOREIGN KEY (callNumber, copyNo) references BookCopy ON DELETE CASCADE);
 
 create table Fine
 	(fid integer not null PRIMARY KEY,
@@ -103,7 +103,7 @@ create table Fine
 	issuedDate date null,
 	paidDate date null,
 	borid integer not null,
-	FOREIGN KEY (borid) references Borrowing);
+	FOREIGN KEY (borid) references Borrowing ON DELETE CASCADE);
 
 
 insert into BorrowerType values
diff --git a/Project Part III/user_manual b/Project Part III/user_manual
new file mode 100644
index 0000000..74aadbf
--- /dev/null
+++ b/Project Part III/user_manual	
@@ -0,0 +1,74 @@
+INTRODUCTION
+
+This system is a basic library database with a simple user interface to view and make changes to the data.
+There are three account types, one for each of the three user types: borrower, clerk and librarian.  Each
+user type has several transactions that can be performed by the user.
+
+
+USER MANUAL
+ 
+Please make sure that your SQLPlus session has dates in YYYY-MM-DD format before starting.  This can be done 
+with the following command:  
+								alter session set nls_date_format='YYYY-MM-DD'
+ 	
+Borrower:
+	1. Search for books
+		Select a book field (title, author, or subject) to perform a keyword search on.
+		Searches are case-sensitive.  Please capitalize the first letter of title and author keywords.
+		Please do not capitalize subject keywords.
+		Only one keyword may be searched at a time.
+ 		
+	2. Check borrower account
+		Enter your borrower id (the number on your library card) to view account details such as the items 
+		you are currently borrowing, outstanding fines and hold requests you've placed.
+		
+	3. Place a hold request
+		Enter the call number of the book that you wish to place a hold request for.
+		When a copy of the book is returned to the library, you will be notified by email.
+		A hold request cannot be placed on an item which has copies available in the library.
+		
+	4. Pay a fine
+		Enter your borrower id to view your outstanding fines.
+		Select the fine id of the fine you wish to pay.
+		If you elect to pay for a fine, it must be paid in full.
+		
+		
+Clerk:
+	1. Add new borrower
+		Enter values into all required borrower info fields.
+		If the SIN or student number provided isn't already associated with a borrower account, a new 
+		account is created and the borrower id is returned.
+		
+	2. Check out items
+		Enter list of call numbers of items to be checked out.  Call numbers should be separated by commas.
+		Enter the copy number of each of the items.
+		The system prints the call number and copy number of each item, and the due date of the items.
+		
+	3. Process a return
+		Enter the call number and copy number of the item that is being returned.
+		The system checks the item in.
+		If the item is overdue a fine is placed on the last borrower.
+		If the book has a hold request the requester is notified via email.
+		
+	4. Check overdue items
+		System displays a list of all overdue items and the borrowers who have checked them out.
+		Email addresses of the borrowers are provided, you may elect to send a message to any one of them.
+		
+
+Librarian:
+	1. Add new book
+		Select whether a new book or a new book copy is to be added.
+		Please select the new book option if a copy of the book doesn't already exist in the library.
+		Otherwise please select the new copy option.
+		Enter values into all required book info fields.
+		
+	2. Checked out books report
+		The system outputs a list of all checked out items and flags overdue items with a *.
+		If a subject is provided, the report only lists books related to that subject.
+		
+	3. Most popular items report
+		Enter the year that you wish to generate a report for, and the number n most popular items you wish
+		to report.  The system outputs a list of items from most popular to least popular (top to bottom).
+		If the number of items borrowed in a year is less than the n specified, the system generates a report
+		on all of the items borrowed that year.
+		
\ No newline at end of file

commit d4c828744fe7d163b045545b46edf6a738a8767a
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Mon Mar 31 12:50:29 2014 -0700

    blank text exception for pay fine

diff --git a/Project Part III/src/users/BorrowerUser.java b/Project Part III/src/users/BorrowerUser.java
index dee6be8..95c9de5 100644
--- a/Project Part III/src/users/BorrowerUser.java	
+++ b/Project Part III/src/users/BorrowerUser.java	
@@ -693,7 +693,13 @@ public class BorrowerUser {
 
 			// Ask borrower to select which fine to pay for
 			System.out.println("\n\nSelect ID of fine you wish to pay: ");
-			sfid = Integer.parseInt(Main.in.readLine());
+			String ans1 = Main.in.readLine();
+			
+			if (ans1.trim().equals("")){
+				return;
+			}
+			
+			sfid = Integer.parseInt(ans1);
 
 			System.out.println("Proceed with payment?(y/n)");
 			ans = Main.in.readLine();

commit 3e2530f57cb1fea3ef8557af2ce5d950c5bdfa5e
Merge: d4c8287 838eeca
Author: Enoch Choi <nokswalk@gmail.com>
Date:   Mon Mar 31 12:50:38 2014 -0700

    Merge branch 'master' of https://github.com/nokswalk/CPSC304CoolTeam

commit f90defd9d163b0606169d005676cd5c37dcd62ad
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Mon Mar 31 15:07:45 2014 -0700

    Added Tony's student # to cover page.

diff --git a/Project Part III/cover_page b/Project Part III/cover_page
index 29c2359..47d4750 100644
--- a/Project Part III/cover_page	
+++ b/Project Part III/cover_page	
@@ -11,3 +11,4 @@ Michelle Ng
 25743089
 
 Tony Chu
+26817114
\ No newline at end of file
diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index b2f2741..6d9f222 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -47,14 +47,14 @@ create table Borrower
 	address varchar(50) null,
 	phone char(10) null,
 	emailAddress varchar(50) null,
-	sinOrStNo varchar(10) not null,
+	sinOrStNo varchar(10) not null UNIQUE,
 	expiryDate date null,
 	type varchar(10) not null,
 	FOREIGN KEY (type) references BorrowerType ON DELETE CASCADE);
 
 create table Book
 	(callNumber integer not null PRIMARY KEY,
-	isbn char(9) not null,
+	isbn char(9) not null UNIQUE,
 	title varchar(50) null,
 	mainAuthor varchar(20) null,
 	publisher varchar(20) null,
@@ -77,7 +77,7 @@ create table HasSubject
 	(callNumber integer not null,
 	subject varchar(50) not null,
 	PRIMARY KEY (callNumber, subject),
-	FOREIGN KEY (callNumber) references Book ON DELETE CASCADE);
+	FOREIGN KEY (callNumber) references Book(callNumber) ON DELETE CASCADE);
 
 create table HoldRequest
 	(hid integer not null PRIMARY KEY,
@@ -85,7 +85,7 @@ create table HoldRequest
 	callNumber integer not null,
 	issuedDate date null,
 	FOREIGN KEY (bid) references Borrower,
-	FOREIGN KEY (callNumber) references Book ON DELELTE CASCADE);
+	FOREIGN KEY (callNumber) references Book ON DELETE CASCADE);
 
 create table Borrowing
 	(borid integer not null PRIMARY KEY,

commit 93e955590112fc5eacdbe7c0d04faed7df862fa3
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Mon Mar 31 15:45:47 2014 -0700

    Fixed insert commands in table.sql so that book isbns are all 9
    characters.

diff --git a/Project Part III/table.sql b/Project Part III/table.sql
index 6d9f222..3daffc2 100644
--- a/Project Part III/table.sql	
+++ b/Project Part III/table.sql	
@@ -129,17 +129,17 @@ insert into Borrower values
 
 
 insert into Book values
-(100, '01000000', 'Hello Java world', 'Laks', 'UBC','1999');
+(100, '001000000', 'Hello Java world', 'Laks', 'UBC','1999');
 insert into Book values
-(200, '02000000', 'Hi Database', 'Laks', 'SFU','2000');
+(200, '002000000', 'Hi Database', 'Laks', 'SFU','2000');
 insert into Book values
-(300, '03000000', 'Advanced Data Structures and Algorithms', 'Michelle Ng', 'UBC','2008');
+(300, '003000000', 'Advanced Data Structures and Algorithms', 'Michelle Ng', 'UBC','2008');
 insert into Book values
-(400, '04000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
+(400, '004000000', 'Design Patterns', 'Enoch Choi', 'UBC','1999');
 insert into Book values
-(500, '05000000', 'Hi C++', 'Laks', 'UBC','2014');
+(500, '005000000', 'Hi C++', 'Laks', 'UBC','2014');
 insert into Book values
-(600, '06000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
+(600, '006000000', 'Hardware and Software', 'Tony Chu', 'PublisherA','2002');
 insert into Book values
 (999, '123456789', 'ABCs', 'Sammy', 'Foo Readers', 2000);
 

commit 4ca95d75cbe3faec26fc256f345d05a7c73a75a5
Author: r6z7 <r6z7@ugrad.cs.ubc.ca>
Date:   Tue Apr 1 00:28:09 2014 -0700

    Modified checkOverdueItems() and processReturn() in ClerkUser so that
    item call number and copy number are inputed at the same time (got rid
    of second prompt for copyNo after promt for callNumber).

diff --git a/Project Part III/src/users/ClerkUser.java b/Project Part III/src/users/ClerkUser.java
index f7dda58..7fed148 100644
--- a/Project Part III/src/users/ClerkUser.java	
+++ b/Project Part III/src/users/ClerkUser.java	
@@ -30,7 +30,7 @@ public class ClerkUser {
 			while (!quit) {
 				System.out.print("\n\nPlease choose one of the following: \n");
 				System.out.print("1.  Add borrower\n");
-				System.out.print("2.  Check out item\n");;
+				System.out.print("2.  Check out items\n");;
 				System.out.print("3.  Process a return\n");
 				System.out.print("4.  Check overdue items\n");
 				System.out.print("5.  Quit\n>>");
@@ -195,7 +195,7 @@ public class ClerkUser {
 	 */
 	private static void checkOutItems() {
 		int 			   bid;
-		List<String>	   callNumbers;
+		List<String>	   callAndCopyNumbers;
 		Statement  		   s;
 
 		// today's date
@@ -206,8 +206,9 @@ public class ClerkUser {
 			System.out.print("Borrower ID: ");
 			bid = Integer.parseInt(Main.in.readLine());
 
-			System.out.print("List of call numbers to be checked out: ");
-			callNumbers = Arrays.asList(Main.in.readLine().split(","));
+			System.out.print("List of items to be checked out, separated by commas."
+					+ "\nItem call number and copy number should be separated by a space: ");
+			callAndCopyNumbers = Arrays.asList(Main.in.readLine().split(","));
 
 			s = Main.con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT bid "
@@ -220,9 +221,8 @@ public class ClerkUser {
 			}
 
 			// check out all items that borrower listed
-			for (String c: callNumbers){
-				int callNumber = Integer.parseInt(c.trim());
-				checkOutItem(bid, callNumber, sqlToday);
+			for (String c: callAndCopyNumbers){
+				checkOutItem(bid, c.trim(), sqlToday);
 			}
 
 			// print due date
@@ -250,17 +250,21 @@ public class ClerkUser {
 		}
 	}
 
-	private static void checkOutItem(int bid, int callNumber, Date outDate) {
+	private static void checkOutItem(int bid, String callAndCopyNumber, Date outDate) {
 
+		List<String>       callAndCopyNo;
+		int				   callNumber;
 		int				   copyNo;
 		Statement          s;
 		PreparedStatement  ps1;
 		PreparedStatement  ps2;
 
 		try {
-			// get copy number of item to be checked out
-			System.out.print("Copy number of item " + callNumber + ": ");
-			copyNo = Integer.parseInt(Main.in.readLine());
+			// get call and copy number of item to be checked out
+			callAndCopyNo = Arrays.asList(callAndCopyNumber.split(" "));
+			
+			callNumber = Integer.parseInt(callAndCopyNo.get(0));
+			copyNo = Integer.parseInt(callAndCopyNo.get(1));
 
 			//check if book is in library
 			s = Main.con.createStatement();
@@ -301,10 +305,7 @@ public class ClerkUser {
 				ps2.close();
 			}
 		}
-
-		catch (IOException e) {
-			System.err.println("IOException!");
-		}
+		
 		catch (NumberFormatException ne) {
 			System.err.println("A required field was left blank.");
 		}
@@ -353,10 +354,11 @@ public class ClerkUser {
 			ps4 = Main.con.prepareStatement("UPDATE BookCopy SET status='in' WHERE callNumber= ? AND copyNo= ?");
 
 			// first enter callNumber and copyNo
-			System.out.print("Book call number: ");
-			callNumber = Integer.parseInt(Main.in.readLine());
-			System.out.print("Book copy number: ");
-			copyNo = Integer.parseInt(Main.in.readLine());
+			System.out.print("Book call and copy number: ");
+			List<String> callAndCopyNo = Arrays.asList(Main.in.readLine().split(" "));
+			
+			callNumber = Integer.parseInt(callAndCopyNo.get(0).trim());
+			copyNo = Integer.parseInt(callAndCopyNo.get(1).trim());
 
 			s = Main.con.createStatement();
 
diff --git a/Project Part III/user_manual b/Project Part III/user_manual
index 74aadbf..176767f 100644
--- a/Project Part III/user_manual	
+++ b/Project Part III/user_manual	
@@ -40,14 +40,15 @@ Clerk:
 		account is created and the borrower id is returned.
 		
 	2. Check out items
-		Enter list of call numbers of items to be checked out.  Call numbers should be separated by commas.
-		Enter the copy number of each of the items.
+		Enter list of call numbers and copy numbers of items to be checked out.  
+		Call numbers and copy numbers should be separated by a space.
+		Call and copy number pairs (items) should be separated by commas.
 		The system prints the call number and copy number of each item, and the due date of the items.
 		
 	3. Process a return
-		Enter the call number and copy number of the item that is being returned.
-		The system checks the item in.
-		If the item is overdue a fine is placed on the last borrower.
+		Enter the call number and copy number of the item that is being returned.  
+		The call and copy number should be separated by a space.
+		The system checks the item in.  If the item is overdue a fine is placed on the last borrower.
 		If the book has a hold request the requester is notified via email.
 		
 	4. Check overdue items
